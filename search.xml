<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[iFrog round 19 Solution]]></title>
      <url>/2017/07/29/iFrog-round-19-Solution/</url>
      <content type="html"><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>找规律<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">123</span>;</div><div class="line"><span class="keyword">double</span> a[MaxN];<span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)&#123;</div><div class="line">		<span class="keyword">int</span> a = n - <span class="number">1</span>, b = <span class="number">1</span>, c = <span class="number">0</span>, d = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</div><div class="line">			b *= <span class="number">10</span>; c ++;</div><div class="line">			<span class="keyword">if</span>(a &gt; b - c) d = c;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; n + d &lt;&lt; <span class="built_in">endl</span>; </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>枚举右端点，双指针扫描<br>用st表维护最大最小值（暴力就过了</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">201234</span>;</div><div class="line"><span class="keyword">int</span> a[MaxN];  </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">qmax</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i = l;</div><div class="line">	<span class="keyword">for</span>(l; l &lt;= r; l++)</div><div class="line">		<span class="keyword">if</span>(a[l] &gt; a[i]) i = l;</div><div class="line">	<span class="keyword">return</span> i;			</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">qmin</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i = l;</div><div class="line">	<span class="keyword">for</span>(l; l &lt;= r; l++)</div><div class="line">		<span class="keyword">if</span>(a[l] &lt; a[i]) i = l;</div><div class="line">	<span class="keyword">return</span> i;			</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, K;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </div><div class="line">	<span class="keyword">int</span> i, j, k, x, y, sum = <span class="number">0</span>;</div><div class="line">	n = inp(); K = inp() + <span class="number">1</span>;</div><div class="line">	x = y = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>, j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">      	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[j]);  </div><div class="line">      	<span class="keyword">if</span>(a[j]&gt;a[x]) <span class="keyword">for</span>(x = j; a[j] - a[y] &gt;= K; i = y + <span class="number">1</span>, y = qmin(i , j)); </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[j]&lt;a[y])</div><div class="line">					  <span class="keyword">for</span>(y = j; a[x] - a[j] &gt;= K; i = x + <span class="number">1</span>, x = qmax(i, j));  </div><div class="line">        sum += j - i + <span class="number">1</span>;  </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Tiao Laoshi's Speech]]></title>
      <url>/2017/07/24/Tiao-Laoshi-s-Speech/</url>
      <content type="html"><![CDATA[<p>正衡中学八年级期中表彰第一名同学的发言稿 - 孔瑞阳</p>
<p>想了想还是把偶像的发言稿搬过来了<br><a id="more"></a></p>
<p>说世界很大，我想去看看的人，都会说自己总是想看看世界究竟有多大。其实，我猜他们是想证明，他们有自己的辽阔世界，他们不要别人设定的那个狭隘的空间。</p>
<p>我的第一个理想，叫做No.1 </p>
<p>我在一个毫不起眼的小学上学，从那时起，就一直是班级里的千年老二。当时的我也没有进取之心，反正在这种不入流的小学拿了第一名也不算什么成就。很快就到了小升初，我怕在这个高手云集的学校落下别人太多，态度才稍微认真了些。 </p>
<p>第一次期中考试，却神奇地取得了很优异的成绩。 </p>
<p>那时我才萌发出一个念头：世界很大，我想去看看。<br>于是我更加努力起来，在完成平时的学习任务后只干一件事：刷题。功夫不负有心人，在第二次期中考试，我刷到了2道英语阅读原题。 </p>
<p>然后我退步了7名。 </p>
<p>接着我才知道，学习刻苦并不是指一昧地去针对自己的某个弱点去做一项填鸭式的练习，而是该明白“what why how”，即自己的弱点是什么，自己为什么会有这个弱点，要改正这个弱点应该怎么样。大量的习题只能解决“what”，但我们真正要解决的问题是“why”。比如说数学因为不认真听课而导致很多题目不会，这么一说怎么改正当然一目了然。 </p>
<p>于是今天，我终于站到了这里。 </p>
<p>当然，第一轮流做，明年到你家。谁找到了属于自己的方法而且比别人更加勤奋刻苦，谁就会成为下一个第一名。</p>
<p>我的第二个理想，叫做信息学奥赛。 </p>
<p>一开始我的水平并没有领先太多，反而有一个致命的弱点，就是住宿在学校并没有太多的练习时间。怎么办呢？ </p>
<p>世界很大，我想去看看。 </p>
<p>于是我就疯狂地提高我的写作业速度，基本上每天都能在6点之前把作业写完。于是晚自习就能抽出大把的时间去看书，写代码，提高自己的水平。 </p>
<p>过了半年，出乎意料拿到了高中组省一等奖，正衡第一名。 </p>
<p>但人外有人，常外的赵亮在初二拿了全国金牌，俄罗斯有人初二拿了世界金牌。 </p>
<p>我不敢懈怠，甚至拿出一些晚自习的时间参加各种比赛，以实战提高自己的水平。两轮省队选拔后，我超越了一中所有高一的学长。 </p>
<p>能否成为下一个赵亮，谁知道呢。</p>
<p>我的第三个理想，叫做体育与音乐。 </p>
<p>我在小学一直是个小胖墩，曾经还因为体育只有及格而失去了一次三好学生。然后我爸妈把我送去学羽毛球，每次都有累死人不偿命的体能训练，到家连吃饭的力气都没有。 </p>
<p>但是我现在的体育成绩也都是有目共睹，多次在100、1000米中取得优异的名次。 </p>
<p>关于音乐，在没有接触欧美流行音乐之前，最爱古典音乐，我也因此走上了钢琴的道路。接触了欧美Pop之后么，请自行参见我的歌单。 </p>
<p>我之所以没有在学习体育音乐全面发展的时候感到劳累，是因为我从来没有把音乐和体育当做自己的负担。它们只是我休闲的方式，家里的钢琴不弹的时候可以当优雅的摆设，高兴时即兴演奏一首自己喜爱的曲子，这不是别人布置的任务，这是我悠闲的生活。 </p>
<p>我还有一个理想，叫做英国。 </p>
<p>小升初的暑假BBC第一次在中国举办媒体看片会，全国一共八十个名额。怎么会轮到我这个小学生呢？ </p>
<p>世界很大，我想去看看。 </p>
<p>于是我用了三天的时间，写了一万八千字的《神探夏洛克》《神秘博士》等BBC英剧的剧评，又做了一段4分钟的剪辑视频。 </p>
<p>世上无难事，只要肯攀登。于是我就成功取得了这一次活动的参加名额。 </p>
<p>一年后，我亲自去了英国。除了英伦的自然风景与人文气息外，有一件事一直留在我的脑海。<br>那就是在过马路时，车辆让我们先行。说起来很简单，但在异国他乡亲自遇到这样的场景时，心中的震撼却是难以言表的。 </p>
<p>因为我们有差距。</p>
<p>其实每个人都应该有一个发自内心的信仰，并为之努力。当幻想和现实面对时，总是很痛苦的，要么你被痛苦击倒，要么你把痛苦踩在脚下。 </p>
<p>如果还有什么要说的，就是永远都不要低估自己的实力。有人正衡初二时年级二三百名，现在<br>是一中创新班的一员；有人二十四中初二时四百名，现在在是一中高二信息学第一名；有人在五中时学习落魄，现在拍摄的微电影入围了戛纳电影节金棕榈奖；有人中专学历，现在全英文答卷考取了芬兰的疗养师，马上就能移民芬兰。 </p>
<p>没有人生来就是人生赢家，只是因为世界很大，他们想去看看。 </p>
<p>不去想是否能够成功，既然选择了远方，只顾风雨兼程；不去想身后是否会袭来寒风冷雨，既然目标是地平线，留给世界的只能是背影。</p>
<p>当然不要忘了一直支持我们的老师同学和亲朋好友。我们一要承受种种外部的压力，更要面对自己内心的困惑。如果有人向你投以理解的目光，你会感到一种生命的暖意。</p>
<p>世界很大，我想去看看。 </p>
<p>看世界，都看到了什么啊？ </p>
<p>我看到了最广大的自然，最雄壮的自己。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[AtCoder Grand Contest 018 Solution]]></title>
      <url>/2017/07/24/AtCoder-Grand-Contest-018-Solution/</url>
      <content type="html"><![CDATA[<p>两题翻车</p>
<a id="more"></a>
<h1 id="Getting-Difference"><a href="#Getting-Difference" class="headerlink" title="Getting Difference"></a>Getting Difference</h1><p>设 $g$ 是所有数的 gcd , 我们可以证明只要 $g | K$ 且 $K<br>\leq \max a_i$，即可生成</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>;</div><div class="line"><span class="keyword">int</span> n, K, a[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, g;</div><div class="line">	n = inp(); K = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp();</div><div class="line">	<span class="keyword">for</span>(g = a[i = <span class="number">1</span>]; i &lt;= n; i++) g = __gcd(g, a[i]);</div><div class="line">	<span class="keyword">if</span>(K % g == <span class="number">0</span> &amp;&amp; *max_element(a + <span class="number">1</span>, a + n + <span class="number">1</span>) &gt;= K)</div><div class="line">		<span class="built_in">puts</span>(<span class="string">"POSSIBLE"</span>);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Sports-Festival"><a href="#Sports-Festival" class="headerlink" title="Sports Festival"></a>Sports Festival</h1><p>先取出全部的项目，然后每次删掉报的人最多的，给对应的人重新报名，每次的答案取最小。</p>
<p>正确性：不知道为什么是对的，闭上眼睛感受一下即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">400</span>;</div><div class="line"><span class="keyword">int</span> n, m, a[MaxN][MaxN], l[MaxN], del[MaxN], cnt[MaxN]; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j;</div><div class="line">	n = inp(); m = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++)</div><div class="line">			a[i][j] = inp();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) l[i] = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> ans = ~<span class="number">0U</span> &gt;&gt; <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) &#123;</div><div class="line">		<span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span>(cnt));</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) cnt[a[j][l[j]]]++;</div><div class="line">		<span class="keyword">int</span> res = <span class="number">0</span>, k = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++) <span class="keyword">if</span>(cnt[j] &gt; cnt[k]) k = j;</div><div class="line">		cmin(ans, cnt[k]); del[k] = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">			<span class="keyword">while</span>(del[a[j][l[j]]]) ++l[j];	</div><div class="line">			<span class="keyword">if</span>(l[j] &gt; m) <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(l[j] &gt; m) <span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Coins"><a href="#Coins" class="headerlink" title="Coins"></a>Coins</h1><p>如果说只有两种硬币，那么我们先全选上 $A$, 然后按照 $b - a$ 降序贪心更改</p>
<p>但是现在有三种硬币，全选上 $A$， 按照 $(b - a, c - a)$ 排序，然后枚举最后一个 $C$ 的位置，很明显前面要么选 $B$, 要么选 $C$, 且若位置为 $p$, 则一定有 $Z$ 个 $C$, $p - Z$ 个 $B$, 后面有 $Y - (p - Z)$ 个 $B$</p>
<p>前者按照 $c - b$ 取 前$Z$ 大， 后者按照$b - a$ 取前 $Y - (p - Z)$ 大，可以使用堆或者主席树实现</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>;</div><div class="line"><span class="keyword">int</span> n, x, y, z, a[MaxN], b[MaxN], c[MaxN], rk[MaxN];</div><div class="line">LL ans = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> b[x] - c[x] &gt; b[y] - c[y];</div><div class="line">&#125;</div><div class="line"></div><div class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q; LL f[MaxN], g[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, _i;</div><div class="line">	x = inp(); y = inp(); z = inp();</div><div class="line">	<span class="keyword">for</span>(n = (x + y + z), i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		a[i] = inp(), b[i] = inp(), c[i] = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) rk[i] = i; sort(rk + <span class="number">1</span>, rk + n + <span class="number">1</span>, cmp);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(_i = <span class="number">1</span>; i = rk[_i], _i &lt;= y; _i++) q.push(a[i] - b[i]), ans += b[i] - a[i];</div><div class="line">	f[y] = ans;</div><div class="line">	<span class="keyword">for</span>(_i = y + <span class="number">1</span>; i = rk[_i], _i &lt;= n; _i++)&#123;</div><div class="line">		<span class="keyword">if</span>((j = a[i] - b[i]) &lt;= q.top())&#123;</div><div class="line">			ans += q.top() - j;</div><div class="line">			q.pop(); q.push(j);</div><div class="line">		&#125;</div><div class="line">		f[_i] = ans;</div><div class="line">	&#125; 	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= (n &gt;&gt; <span class="number">1</span>); i++) swap(rk[i], rk[n - i + <span class="number">1</span>]);</div><div class="line">	</div><div class="line">	ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty()) q.pop();</div><div class="line">	<span class="keyword">for</span>(_i = <span class="number">1</span>; i = rk[_i], _i &lt;= z; _i++) q.push(a[i] - c[i]), ans += c[i] - a[i];</div><div class="line">	g[z] = ans; </div><div class="line">	<span class="keyword">for</span>(_i = z + <span class="number">1</span>; i = rk[_i], _i &lt;= n; _i++)&#123;</div><div class="line">		<span class="keyword">if</span>((j = a[i] - c[i]) &lt;= q.top())&#123;</div><div class="line">			ans += q.top() - j;</div><div class="line">			q.pop(); q.push(j);</div><div class="line">		&#125;</div><div class="line">		g[_i] = ans;</div><div class="line">	&#125; </div><div class="line">	ans = <span class="number">-1e14</span>;	</div><div class="line">	<span class="keyword">for</span>(i = y; i &lt;= x + y; i++) cmax(ans, f[i] + g[n - i]);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) ans += a[i];</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Tree-and-Hamilton-Path"><a href="#Tree-and-Hamilton-Path" class="headerlink" title="Tree and Hamilton Path"></a>Tree and Hamilton Path</h1><p>考虑每条边在最终答案的贡献，如果是Hamilton Circle简单很多，就是$\sum 2\min (\mathrm{siz}_x, n - \mathrm{siz}_x) * C_{fa_x -&gt; x}$， 也就是重心上下两个联通块交错跳</p>
<p>如果不是就讨论一下好了</p>
<ol>
<li><p>重心唯一</p>
<p> 在回路的基础上割掉中心出边最短的一条</p>
</li>
<li><p>不唯一</p>
<p> 割掉两个重心之间的连边即可</p>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>, MaxM = <span class="number">201234</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> to, nxt, v;</div><div class="line">&#125;e[MaxM]; <span class="keyword">int</span> cnt, lst[MaxN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</div><div class="line">	e[++cnt] = (edge)&#123;b, lst[a], c&#125;; lst[a] = cnt;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">lnk</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</div><div class="line">	ins(a, b, c);</div><div class="line">	ins(b, a, c);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL ans;</div><div class="line"><span class="keyword">int</span> n, siz[MaxN], f[MaxN], hug[MaxN], c1, c2, G;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	siz[x] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x], b; b = e[i].to, i; i = e[i].nxt)&#123;</div><div class="line">		<span class="keyword">if</span>(b == fa) <span class="keyword">continue</span>;</div><div class="line">		dfs(b, x);</div><div class="line">		siz[x] += siz[b];</div><div class="line">		ans += ((LL) e[i].v * min(siz[b], n - siz[b])) &lt;&lt; <span class="number">1</span>;</div><div class="line">		cmax(hug[x], siz[b]);	</div><div class="line">	&#125;</div><div class="line">	cmax(hug[x], n - siz[x]);</div><div class="line">	cmin(G, hug[x]);</div><div class="line">&#125; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i; </div><div class="line">	n = G = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++)&#123;</div><div class="line">		<span class="keyword">int</span> u = inp(), v = inp(), w = inp();</div><div class="line">		lnk(u, v, w);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	dfs(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">if</span>(hug[i] == G)</div><div class="line">			<span class="keyword">if</span>(c1) c2 = i; <span class="keyword">else</span> c1 = i;</div><div class="line">	</div><div class="line">    <span class="keyword">if</span>(c2)&#123;</div><div class="line">		<span class="keyword">for</span>(i = lst[c1]; i; i = e[i].nxt) <span class="keyword">if</span>(e[i].to == c2)</div><div class="line">			ans -= e[i].v;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> mn = ~<span class="number">0U</span> &gt;&gt; <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(i = lst[c1]; i; i = e[i].nxt) cmin(mn, e[i].v);</div><div class="line">		ans -= mn;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Sightseeing-Plan"><a href="#Sightseeing-Plan" class="headerlink" title="Sightseeing Plan"></a>Sightseeing Plan</h1><h1 id="Two-Trees"><a href="#Two-Trees" class="headerlink" title="Two Trees"></a>Two Trees</h1><p>这两题好像还不会</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[HackerrankWeekOfCode 34 Diary]]></title>
      <url>/2017/07/23/HackerrankWeekOfCode34Diary/</url>
      <content type="html"><![CDATA[<p>这周的Week of Code可能是最难的了。。</p>
<a id="more"></a>
<p>跳过Easy题</p>
<h3 id="Maximum-GCD-and-Sum"><a href="#Maximum-GCD-and-Sum" class="headerlink" title="Maximum GCD and Sum"></a>Maximum GCD and Sum</h3><p>枚举答案， 调和级数<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">1001234</span>;</div><div class="line"><span class="keyword">int</span> n, a[MaxN], b[MaxN], as[MaxN], bs[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) as[a[i] = inp()] = i;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) bs[b[i] = inp()] = i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> d = MaxN - <span class="number">1</span>; d; d--)&#123;</div><div class="line">		<span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, L = MaxN / d * d;</div><div class="line">		<span class="keyword">for</span>(x = L; x &gt; <span class="number">0</span> &amp;&amp; !as[x]; x -= d);</div><div class="line">		<span class="keyword">for</span>(y = L; y &gt; <span class="number">0</span> &amp;&amp; !bs[y]; y -= d);</div><div class="line">		<span class="keyword">if</span>(x &amp;&amp; y)&#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; x + y &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Same-Occurence"><a href="#Same-Occurence" class="headerlink" title="Same Occurence"></a>Same Occurence</h3><p>考虑对一组询问 $(x, y)$,我们设 $p_i, q_i$， 分别表示前缀 $x、y$ 出现次数</p>
<p>设 $d_i = p_i - q_i$， 若有 $x$ 个相同的 $d_i$, 对答案的贡献是 $\frac{d_i(d_i - 1)}{2}$</p>
<p>再考虑，对于同样的一组 $(x, y)$， 只会有至多$p_n + q_n$ 个不同的 $d$ 值, 那么我们存下所有值对应的下标，枚举$(x, y)$， 就可以在 $O(n^2)$ 的时间内求出所有询问的答案，再依次回答即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">8010</span>, MaxM = <span class="number">501234</span>;</div><div class="line"><span class="keyword">int</span> n, b[MaxN], a[MaxN], q; LL f[MaxN][MaxN];</div><div class="line"><span class="keyword">int</span> px[MaxN], py[MaxN], c[MaxN], sc[MaxN &lt;&lt; <span class="number">1</span>];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; t[MaxN]; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, x, y, xn;</div><div class="line">	n = inp(); q = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a + i), b[i] = a[i]; <span class="comment">//a[i] = b[i] = inp();</span></div><div class="line">	sort(b + <span class="number">1</span>, b + n + <span class="number">1</span>); xn = unique(b + <span class="number">1</span>, b + n + <span class="number">1</span>) - b - <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = lower_bound(b + <span class="number">1</span>, b + xn + <span class="number">1</span>, a[i]) - b;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) t[a[i]].push_back(i);</div><div class="line">	<span class="keyword">for</span>(x = <span class="number">1</span>; x &lt;= xn + <span class="number">1</span>; x++) &#123;</div><div class="line">		<span class="keyword">for</span>(y = x + (x != xn + <span class="number">1</span>); y &lt;= xn + <span class="number">1</span>; y++)&#123;</div><div class="line">			<span class="keyword">int</span> cn = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(i = j = <span class="number">0</span>; i &lt; t[x].size() || j &lt; t[y].size(); )</div><div class="line">				<span class="keyword">if</span>(i &lt; t[x].size() &amp;&amp; j &lt; t[y].size()) &#123;</div><div class="line">					<span class="keyword">if</span>(t[x][i] &lt; t[y][j])  c[++cn] = t[x][i++];</div><div class="line">					<span class="keyword">else</span> c[++cn] = t[y][j++];</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					<span class="keyword">if</span>(i &lt; t[x].size()) c[++cn] = t[x][i++];</div><div class="line">					<span class="keyword">else</span> c[++cn] = t[y][j++];</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= cn; i++) </div><div class="line">				px[i] = px[i - <span class="number">1</span>] + (a[c[i]] == x), </div><div class="line">				py[i] = py[i - <span class="number">1</span>] + (a[c[i]] == y);</div><div class="line">			c[cn + <span class="number">1</span>] = n + <span class="number">1</span>;</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= cn; i++) </div><div class="line">				sc[py[i] - px[i] + MaxN] += c[i + <span class="number">1</span>] - c[i];</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= cn; i++)&#123;</div><div class="line">				<span class="keyword">int</span> p = sc[py[i] - px[i] + MaxN];</div><div class="line">				f[x][y] += (LL) p * (p - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</div><div class="line">				sc[py[i] - px[i] + MaxN] = <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">			f[y][x] = f[x][y];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= q; i++)&#123;</div><div class="line">		<span class="keyword">int</span> x0, y0;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x0, &amp;y0);</div><div class="line">		<span class="comment">//x = inp(); y = inp();</span></div><div class="line">		x = lower_bound(b + <span class="number">1</span>, b + xn + <span class="number">1</span>, x0) - b;</div><div class="line">		y = lower_bound(b + <span class="number">1</span>, b + xn + <span class="number">1</span>, y0) - b;</div><div class="line">		<span class="keyword">if</span>(b[x] != x0) x = xn + <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(b[y] != y0) y = xn + <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(x == y) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (LL) n * (n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			assert(f[x][y] &gt; <span class="number">0</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, f[x][y]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Recurrent-on-a-Tree"><a href="#Recurrent-on-a-Tree" class="headerlink" title="Recurrent on a Tree"></a>Recurrent on a Tree</h3><p>不错的题</p>
<p>对于点对 $(x,y)$ , 贡献是 $fib[dep_x + dep_y - dep_{lca(x,y)} - dep_{fa_{lca(x,y)}}]$ , $dep_x$ 表示根到 $x$ 路径上的点权和</p>
<p>改成矩阵，设 $A$ 是斐波那契数列的转移矩阵, 则贡献为 $A^{dep_x}A^{dep_y}A^{-dep_{lca(x,y)}}A^{-dep_{fa_{lca(x,y)}}}$</p>
<p>设$a_x = A^{dep_x}$</p>
<p>考虑枚举 $lca = x$, 这个lca对答案的贡献是和子树内两个不在同个孩子的子树内的点的 $a_i$ 乘积的和， 再乘上$\frac{1}{a_xa_{fa_{x}}}$</p>
<p>那么设 $f_u = \sum_{i \in u’s~subtree} a_i$, $g_u = \sum_{i, j~not~in~same ~sub~tree}a_ia_j$</p>
<script type="math/tex; mode=display">g_u = 2 a_u \sum_{i\in son_u} f_i + \sum_{i \in son_u}(\sum_{j\neq i} f_j)f_i</script><p>$g_u$对答案的贡献是 $\frac{g_u}{a_xa_{fa_{x}}}$，做一遍dfs即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">201234</span>, MaxM = <span class="number">401234</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1000000007</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> to, nxt;</div><div class="line">&#125;e[MaxM]; <span class="keyword">int</span> cnt, lst[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	e[++cnt] = (edge)&#123;b, lst[a]&#125;; lst[a] = cnt;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">lnk</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	ins(a, b); </div><div class="line">	ins(b, a);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mat</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">2</span>];</div><div class="line">	<span class="keyword">int</span> * <span class="keyword">operator</span>[] (<span class="keyword">int</span> x)&#123; <span class="keyword">return</span> a[x]; &#125; </div><div class="line">&#125;A, I, O;</div><div class="line"></div><div class="line"><span class="function">mat <span class="title">mul</span><span class="params">(mat a, mat b)</span></span>&#123;</div><div class="line">	mat c;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)&#123;</div><div class="line">			c[i][j] = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span>; k++)</div><div class="line">				c[i][j] = (c[i][j] + (LL) a[i][k] * b[k][j]) % P;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">return</span> c;	</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">add</span><span class="params">(mat a, mat b)</span></span>&#123;</div><div class="line">	mat c;</div><div class="line">	c[<span class="number">0</span>][<span class="number">0</span>] = (a[<span class="number">0</span>][<span class="number">0</span>] + b[<span class="number">0</span>][<span class="number">0</span>]) % P;</div><div class="line">	c[<span class="number">0</span>][<span class="number">1</span>] = (a[<span class="number">0</span>][<span class="number">1</span>] + b[<span class="number">0</span>][<span class="number">1</span>]) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">0</span>] = (a[<span class="number">1</span>][<span class="number">0</span>] + b[<span class="number">1</span>][<span class="number">0</span>]) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">1</span>] = (a[<span class="number">1</span>][<span class="number">1</span>] + b[<span class="number">1</span>][<span class="number">1</span>]) % P;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">sub</span><span class="params">(mat a, mat b)</span></span>&#123;</div><div class="line">	mat c;</div><div class="line">	c[<span class="number">0</span>][<span class="number">0</span>] = (a[<span class="number">0</span>][<span class="number">0</span>] - b[<span class="number">0</span>][<span class="number">0</span>] + P) % P;</div><div class="line">	c[<span class="number">0</span>][<span class="number">1</span>] = (a[<span class="number">0</span>][<span class="number">1</span>] - b[<span class="number">0</span>][<span class="number">1</span>] + P) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">0</span>] = (a[<span class="number">1</span>][<span class="number">0</span>] - b[<span class="number">1</span>][<span class="number">0</span>] + P) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">1</span>] = (a[<span class="number">1</span>][<span class="number">1</span>] - b[<span class="number">1</span>][<span class="number">1</span>] + P) % P;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">exp</span><span class="params">(mat a, LL n)</span></span>&#123;</div><div class="line">	mat res = I;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>, a = mul(a, a))</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) res = mul(res, a);</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, LL n)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>, a = (LL)a * a % P)</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) res = (LL) res * a % P;</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">inv</span><span class="params">(mat x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> a = x[<span class="number">0</span>][<span class="number">0</span>], b = x[<span class="number">0</span>][<span class="number">1</span>], c = x[<span class="number">1</span>][<span class="number">0</span>], d = x[<span class="number">1</span>][<span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> iv = (LL) a * d % P - (LL) b * c % P;</div><div class="line">	iv = <span class="built_in">exp</span>((iv + P) % P, P - <span class="number">2</span>);</div><div class="line">	mat c;</div><div class="line">	c[<span class="number">0</span>][<span class="number">0</span>] = (LL) d * iv % P;</div><div class="line">	c[<span class="number">0</span>][<span class="number">1</span>] = (LL) (P - b) * iv % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">0</span>] = (LL) (P - c) * iv % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">1</span>] = (LL) a * iv % P;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, fib[MaxN], c[MaxN]; LL dep[MaxN];</div><div class="line">mat a[MaxN], f[MaxN], g[MaxN], ans; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs0</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x]; i; i = e[i].nxt)</div><div class="line">		<span class="keyword">if</span>(e[i].to != fa)&#123;</div><div class="line">			dep[e[i].to] = dep[x] + c[e[i].to];</div><div class="line">			dfs0(e[i].to, x);</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	g[x] = a[x];</div><div class="line">	mat G = C = O;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x]; i; i = e[i].nxt) </div><div class="line">		<span class="keyword">if</span>(e[i].to != fa)&#123;</div><div class="line">			dfs1(e[i].to, x);			</div><div class="line">			g[x] = add(g[x], g[e[i].to]);</div><div class="line">			G = add(G, g[e[i].to]);</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x]; i; i = e[i].nxt)</div><div class="line">		<span class="keyword">if</span>(e[i].to != fa) C = add(C, mul(g[e[i].to], sub(G, g[e[i].to])));		</div><div class="line">	C = add(C, mul(g[x], a[x]));</div><div class="line">	C = add(C, mul(g[x], a[x]));</div><div class="line">	mat coff = inv(a[x]);</div><div class="line">	<span class="keyword">if</span>(fa) coff = mul(coff, inv(a[fa]));</div><div class="line">	ans = add(ans , mul(C, coff));</div><div class="line">&#125;	</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, u, v;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++) 	u = inp(), v = inp(), lnk(u, v);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) c[i] = inp();</div><div class="line">	</div><div class="line">	A[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>; A[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>; </div><div class="line">	A[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>; A[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">	</div><div class="line">	I[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>; I[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>; </div><div class="line">	I[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>; I[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	dep[<span class="number">1</span>] = c[<span class="number">1</span>];</div><div class="line">	dfs0(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		a[i] = <span class="built_in">exp</span>(A, dep[i]);</div><div class="line">	</div><div class="line">	dfs1(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) ans = sub(ans, <span class="built_in">exp</span>(A, c[i]));</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>, mul(ans, A)[<span class="number">0</span>][<span class="number">1</span>]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Magic-Cards"><a href="#Magic-Cards" class="headerlink" title="Magic Cards"></a>Magic Cards</h3><p>难题.jpg</p>
<p>考虑到如果有两个数在每张卡片上都在同一侧，那么他们一定同时选或不选</p>
<p>对于一个长度为 $L$ 的区间询问， 记录下 $m$ 个数每次所在侧的 $0/1$ 串</p>
<p>枚举每个 $0/1$串， 把对应的数从 $\sum_{i=1}^m i^2$ 中减去，取最大值，单次复杂度是 $O(Lm)$</p>
<p>观察到这个过程会发现，如果 $2^L &gt; m$, 答案一定是 $\sum_{i=1}^m i^2$</p>
<p>那么我们只要求出所有长度 $\leq \log_2m$的区间的答案即可</p>
<p>最后复杂度就是 $O(nLm + Q)$, 即 $O(nm\log_2m + Q)$</p>
<p>写的比前两题还短</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> n, m, q; LL f[MaxN][MaxL], Lans;</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; x[MaxN]; LL chk[MaxN];</div><div class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k = r - l + <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; k); i++) chk[i] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++)&#123;</div><div class="line">		<span class="keyword">int</span> s = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j = l; j &lt;= r; j++)</div><div class="line">			s = s &lt;&lt; <span class="number">1</span> | x[j][i];</div><div class="line">		chk[s] += (LL) i * i;	</div><div class="line">	&#125;</div><div class="line">	LL ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; k); i++) </div><div class="line">		cmax(ans, Lans - chk[i]);</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k;</div><div class="line">	n = inp(); m = inp(); q = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(x[i].resize(m + <span class="number">1</span>),j = inp(); j; j --)</div><div class="line">			x[i][inp()] = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> L = <span class="built_in">floor</span>(<span class="built_in">log</span>(m)/<span class="built_in">log</span>(<span class="number">2</span>));</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) Lans += (LL) i * i; </div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i&lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= L &amp;&amp; i + j - <span class="number">1</span> &lt;= n; j++)</div><div class="line">			f[i][j] = query(i, i + j - <span class="number">1</span>);</div><div class="line">		</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= q; i++)&#123;</div><div class="line">		<span class="keyword">int</span> l = inp(), r = inp();</div><div class="line">		<span class="keyword">if</span>(r - l + <span class="number">1</span> &gt; L) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, Lans);</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, f[l][r - l + <span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Path-Statistics"><a href="#Path-Statistics" class="headerlink" title="Path Statistics"></a>Path Statistics</h3><p>树上莫队裸题啦 </p>
<p>用了个<code>pb_ds::tree</code>和暴力同分了怎么办啊~</p>
<p>考虑树状数组，数 $i$ 出现 $j$ 次按照 $(j,i)$ 为双关键字排序后标号，总的情况数是 $O(n)$的，这样做还是 $O(n^{1.5}\log n)$ 的，足以通过本题</p>
<p>但是采用修改 $O(1)$, 查询 $O(n^{0.5})$ 的权值分块算法，也按这个标号分块，复杂度可以做到$O(n^{1.5})$, 但是我没写(BZOJ3920)</p>
<p>代码贴了zzq的树上莫队，风格太丑这里不放了</p>
]]></content>
      
        
        <tags>
            
            <tag> Hackerrank </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[写作测试]]></title>
      <url>/2017/07/23/%E5%86%99%E4%BD%9C%E6%B5%8B%E8%AF%95/</url>
      <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>居然是markdown</p>
<script type="math/tex; mode=display">\begin{aligned}
f(n) &= \sum_{d|n} g(d) \\
g(n) &= \sum_{d|n} \mu(d) f(\frac{n}{d})
\end{aligned}</script>]]></content>
      
        
        <tags>
            
            <tag> 测试，杂文 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/07/23/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
