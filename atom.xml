<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChouTi&#39;s Blog</title>
  <subtitle>Imagination is the essence of discovery.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-31T07:42:36.801Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>l0nl1f3</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CodeChef August Lunchtime 2017 LTIME51 Solutions</title>
    <link href="http://yoursite.com/2017/08/30/CodeChef-August-Lunchtime-2017-LTIME51-Solutions/"/>
    <id>http://yoursite.com/2017/08/30/CodeChef-August-Lunchtime-2017-LTIME51-Solutions/</id>
    <published>2017-08-30T04:52:29.000Z</published>
    <updated>2017-08-31T07:42:36.801Z</updated>
    
    <content type="html"><![CDATA[<p>…<br><a id="more"></a></p>
<h1 id="MATPAN"><a href="#MATPAN" class="headerlink" title="MATPAN"></a>MATPAN</h1><p>···</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">51234</span>;</div><div class="line"><span class="keyword">int</span> T; <span class="keyword">char</span> s[MaxN]; <span class="keyword">int</span> c[MaxN], b[<span class="number">27</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; T;</div><div class="line">	<span class="keyword">while</span>(T--) &#123;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) c[i] = inp();</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>); <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</div><div class="line">		<span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span>(b));</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) b[s[i] - <span class="string">'a'</span>]++;</div><div class="line">		<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) <span class="keyword">if</span>(!b[i]) ans += c[i]; </div><div class="line">		<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="MATDYS"><a href="#MATDYS" class="headerlink" title="MATDYS"></a>MATDYS</h1><p>二进制翻转 。。 给的看起来就是FFT的过程。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> q, n; u64 K;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; q;</div><div class="line">	<span class="keyword">while</span>(q--) &#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; K;</div><div class="line">		u64 ans = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">			ans &lt;&lt;= <span class="number">1</span>;</div><div class="line">			ans |= (K &amp; <span class="number">1</span>);</div><div class="line">			K &gt;&gt;= <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="MATTEG"><a href="#MATTEG" class="headerlink" title="MATTEG"></a>MATTEG</h1><p>$O(n*5^n)$ 状压DP</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">1234</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxState = <span class="number">1953125</span> + MaxN; </div><div class="line"><span class="keyword">int</span> r, c, n, sx, sy, x[MaxN], y[MaxN], val[MaxN][MaxN];</div><div class="line"></div><div class="line"><span class="keyword">int</span> dx[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</div><div class="line"><span class="keyword">int</span> dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;;</div><div class="line"></div><div class="line"><span class="keyword">int</span> f[MaxState], <span class="built_in">exp</span>[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_bit</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> (p/<span class="built_in">exp</span>[i]) % <span class="number">5</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> ans = val[sx][sy], i, j, k;</div><div class="line">	f[<span class="number">0</span>] = ans;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; <span class="built_in">exp</span>[n]; i++) &#123;</div><div class="line">		<span class="keyword">int</span> nx = sx, ny = sy;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++) &#123;</div><div class="line">			<span class="keyword">if</span>(k = get_bit(i, j))</div><div class="line">				nx += dx[k] * x[j],</div><div class="line">				ny += dy[k] * y[j];</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		f[i] = <span class="number">-1e9</span>;</div><div class="line">		<span class="keyword">if</span>(nx &lt; <span class="number">0</span> || nx &gt;= r || ny &lt; <span class="number">0</span> || ny &gt;= c)	<span class="keyword">continue</span>; </div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++) </div><div class="line">			<span class="keyword">if</span>(k = get_bit(i, j))</div><div class="line">				cmax(f[i], f[i - <span class="built_in">exp</span>[j] * k] + val[nx][ny]);</div><div class="line">		cmax(ans, f[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="MATCUT"><a href="#MATCUT" class="headerlink" title="MATCUT"></a>MATCUT</h1><p>点分治。把质因子指数模3哈希一下即可。线筛预处理某个质因子可以使得单次分解复杂度为$\log a_i$, 最后总复杂度就是 $O(n\log n\log a_i)$</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>, MaxM = <span class="number">1001234</span>, MaxP = <span class="number">6</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> base = <span class="number">1234567</span>, p1 = <span class="number">1000000007</span>, p2 = <span class="number">1000000009</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pint;</div><div class="line"></div><div class="line">Pint <span class="keyword">operator</span> + (Pint a, Pint b) &#123;</div><div class="line">	(a.fir += b.fir) %= p1;</div><div class="line">	(a.sec += b.sec) %= p2;</div><div class="line">	<span class="keyword">return</span> a;		</div><div class="line">&#125;</div><div class="line"></div><div class="line">Pint <span class="keyword">operator</span> * (Pint a, <span class="keyword">int</span> x) &#123;</div><div class="line">	a.fir = (LL) a.fir * x % p1;</div><div class="line">	a.sec = (LL) a.sec * x % p2;</div><div class="line">	<span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Pint <span class="keyword">operator</span> - (Pint a, Pint b) &#123;</div><div class="line">	a.fir = (a.fir - b.fir + p1) % p1;</div><div class="line">	a.sec = (a.sec - b.sec + p2) % p2;</div><div class="line">	<span class="keyword">return</span> a;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[MaxN]; <span class="keyword">int</span> n, a[MaxN];</div><div class="line"></div><div class="line"><span class="keyword">int</span> d[MaxM];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime_init</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; MaxM; i++)</div><div class="line">		<span class="keyword">if</span>(!d[i]) </div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; MaxM; j += i)</div><div class="line">				d[j] = i;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Pint <span class="keyword">operator</span> -= (Pint &amp;a, Pint b) &#123;</div><div class="line">	a = a - b;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Pint <span class="keyword">operator</span> += (Pint &amp;a, Pint b) &#123;</div><div class="line">	a = a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Pint <span class="built_in">exp</span>[MaxM], rev, pos; </div><div class="line"><span class="built_in">map</span>&lt;Pint, <span class="keyword">int</span>&gt; table; <span class="built_in">vector</span>&lt;pair&lt;Pint, <span class="keyword">int</span>&gt; &gt; vec;</div><div class="line"><span class="keyword">int</span> cnt[MaxM];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</div><div class="line">	<span class="keyword">while</span>(x != <span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">int</span> z = d[x];</div><div class="line">		<span class="keyword">if</span>(cnt[z]) &#123;</div><div class="line">			pos -= <span class="built_in">exp</span>[z] * cnt[z];</div><div class="line">			rev -= <span class="built_in">exp</span>[z] * (<span class="number">3</span> - cnt[z]); </div><div class="line">		&#125;</div><div class="line">		cnt[z] = (cnt[z] + y + <span class="number">3</span>) % <span class="number">3</span>;</div><div class="line">		<span class="keyword">if</span>(cnt[z]) &#123;</div><div class="line">			pos += <span class="built_in">exp</span>[z] * cnt[z];</div><div class="line">			rev += <span class="built_in">exp</span>[z] * (<span class="number">3</span> - cnt[z]); </div><div class="line">		&#125;</div><div class="line">		x /= z; </div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vis; <span class="keyword">int</span> siz[MaxN], hug[MaxN]; </div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa = <span class="number">0</span>)</span> </span>&#123;</div><div class="line">	vis.emplace_back(x); </div><div class="line">	siz[x] = <span class="number">1</span>; hug[x] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> y : e[x]) </div><div class="line">		<span class="keyword">if</span>(y != fa) &#123;</div><div class="line">			dfs(y, x);</div><div class="line">			siz[x] += siz[y];</div><div class="line">			cmax(hug[x], siz[y]); </div><div class="line">		&#125;</div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">make</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa, <span class="keyword">int</span> dt = <span class="number">1</span>)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> z = a[x]; </div><div class="line">	modify(z, <span class="number">1</span>);</div><div class="line">	vec.emplace_back(make_pair(pos, dt));</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">-1</span>;</div><div class="line">	<span class="keyword">if</span>(table.count(rev)) </div><div class="line">		cmax(ans, dt + table[rev] + <span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> y : e[x])</div><div class="line">		<span class="keyword">if</span>(y != fa) </div><div class="line">			cmax(ans, make(y, x, dt + <span class="number">1</span>));</div><div class="line">	modify(z, <span class="number">-1</span>);</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">decomp</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">-1</span>;</div><div class="line">	table.clear(); vis.clear();</div><div class="line">	dfs(x, x);</div><div class="line">	<span class="keyword">int</span> N = vis.size(), cent = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> x : vis) </div><div class="line">		<span class="keyword">if</span>(hug[x] &lt;= N/<span class="number">2</span> &amp;&amp; (N - siz[x]) &lt;= N/<span class="number">2</span>) &#123;</div><div class="line">			cent = x; <span class="keyword">break</span>; </div><div class="line">		&#125; </div><div class="line">	cent = cent ? cent : vis.back();</div><div class="line">	modify(a[cent], <span class="number">-1</span>); table[pos] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(pos == make_pair(<span class="number">0</span>, <span class="number">0</span>)) ans = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> y : e[cent]) &#123;</div><div class="line">		cmax(ans, make(y, cent));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> p : vec) </div><div class="line">			cmax(table[p.fir], p.sec);</div><div class="line">		vec.clear();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	modify(a[cent], <span class="number">1</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> y : e[cent]) &#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; e[y].size(); i++) &#123;</div><div class="line">			<span class="keyword">if</span>(e[y][i] == cent) &#123;</div><div class="line">				swap(e[y][i], e[y].back()); </div><div class="line">				e[y].pop_back();</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cmax(ans, decomp(y));</div><div class="line">	&#125; </div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) e[i].clear();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++) &#123;</div><div class="line">		<span class="keyword">int</span> u = inp(), v = inp();</div><div class="line">		e[u].emplace_back(v);</div><div class="line">		e[v].emplace_back(u);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, decomp(<span class="number">1</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> T = inp();</div><div class="line">	prime_init();</div><div class="line">	<span class="built_in">exp</span>[<span class="number">0</span>] = make_pair(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; MaxM; i++) <span class="built_in">exp</span>[i] = <span class="built_in">exp</span>[i - <span class="number">1</span>] * base;</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(T--) </div><div class="line">		solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;…&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AtCoder Grand Contest 019 Solutions</title>
    <link href="http://yoursite.com/2017/08/29/AtCoder-Grand-Contest-019-Solutions/"/>
    <id>http://yoursite.com/2017/08/29/AtCoder-Grand-Contest-019-Solutions/</id>
    <published>2017-08-29T04:37:56.000Z</published>
    <updated>2017-08-31T13:17:27.320Z</updated>
    
    <content type="html"><![CDATA[<p>。。。<br><a id="more"></a></p>
<h1 id="Ice-Cream-Store"><a href="#Ice-Cream-Store" class="headerlink" title="Ice Cream Store"></a>Ice Cream Store</h1><p>贪心<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> q, h, s, d, n;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; q &gt;&gt; h &gt;&gt; s &gt;&gt; d &gt;&gt; n;</div><div class="line">	LL ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> c = min(q * <span class="number">8</span>, h * <span class="number">4</span>);</div><div class="line">	c = min(c, min(s * <span class="number">2</span>, d));</div><div class="line">	ans += (LL) c * (n/<span class="number">2</span>);</div><div class="line">	<span class="keyword">if</span>(n &amp; <span class="number">1</span>) &#123;</div><div class="line">		ans += min(min(q * <span class="number">4</span>, h * <span class="number">2</span>), s);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Reverse-and-Compare"><a href="#Reverse-and-Compare" class="headerlink" title="Reverse and Compare"></a>Reverse and Compare</h1><p>考虑 $rev(l, r)$， 如果 $s_l = s_r$ 则等价于 $rev(l + 1, r - 1)$, 那么答案就是 ${n\choose 2} - \sum {count(c) \choose 2}$</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">201234</span>;</div><div class="line"><span class="keyword">char</span> a[MaxN]; <span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> b[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>, a + <span class="number">1</span>); n = <span class="built_in">strlen</span>(a + <span class="number">1</span>); </div><div class="line">	LL ans = (LL) n * (n + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) </div><div class="line">		b[a[i] - <span class="string">'a'</span>]++;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) ans -= (LL) b[i] * (b[i] + <span class="number">1</span>)/<span class="number">2</span>;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans + <span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Fountain-Walk"><a href="#Fountain-Walk" class="headerlink" title="Fountain Walk"></a>Fountain Walk</h1><p>注意到走圆上肯定比走直线优，按行排序求lis即可，注意特判lis为$\min(|x_2 - x1|, |y2 - y1|) + 1$。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">401234</span>;</div><div class="line"><span class="keyword">int</span> x1, y1, x2, y2, n, m;</div><div class="line"><span class="keyword">int</span> x[MaxN], y[MaxN], rk[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> make_pair(x[u], y[u]) &lt; make_pair(x[v], y[v]); </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> y[u] &lt; y[v]; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> y[u] &gt; y[v]; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> a[MaxN], dp[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">abs</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) </div><div class="line">		x[i] = inp(), y[i] = inp();</div><div class="line">		</div><div class="line">	<span class="keyword">if</span>(x1 &gt; x2) swap(x1, x2), swap(y1, y2);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> u, d, l, r; </div><div class="line">	u = max(x1, x2); d = min(x1, x2); </div><div class="line">	l = min(y1, y2); r = max(y1, y2);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) </div><div class="line">		<span class="keyword">if</span>(x[i] &gt; u || x[i] &lt; d || y[i] &lt; l || y[i] &gt; r)</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			x[++m] = x[i], y[m] = y[i];</div><div class="line">				</div><div class="line">	n = m;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) rk[i] = i;</div><div class="line">	sort(rk + <span class="number">1</span>, rk + n + <span class="number">1</span>, cmp);</div><div class="line">	</div><div class="line">	sort(rk + <span class="number">1</span>, rk + n + <span class="number">1</span>, y1 &lt; y2 ? cmp1 : cmp2);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) a[i] = x[rk[i + <span class="number">1</span>]];</div><div class="line">	fill(dp, dp + n, <span class="number">233333333</span>);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) </div><div class="line">		*lower_bound(dp, dp + n, a[i]) = a[i];</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> L = lower_bound(dp, dp + n, <span class="number">233333333</span>) - dp;</div><div class="line">	<span class="keyword">double</span> ans = <span class="built_in">abs</span>(x2 - x1) + <span class="built_in">abs</span>(y2 - y1); </div><div class="line">	ans *= <span class="number">100</span>;</div><div class="line">	ans -= (<span class="number">20</span> - <span class="number">5</span> * <span class="built_in">acos</span>(<span class="number">-1</span>)) * L;</div><div class="line">	<span class="keyword">int</span> lim = min(r - l + <span class="number">1</span>, u - d + <span class="number">1</span>);</div><div class="line">	 </div><div class="line">	<span class="keyword">if</span>(L == lim) ans += <span class="number">5</span> * <span class="built_in">acos</span>(<span class="number">-1</span>);	</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.20lf"</span>, ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Shift-and-Flip"><a href="#Shift-and-Flip" class="headerlink" title="Shift and Flip"></a>Shift and Flip</h1><p>假设 $B$ 中至少有一个 $1$, 我们设计数器 $t$ 表示Shift的值，即最终 $a_i = b_{(i + t)\bmod n}$</p>
<p>设整个过程中的 $t_{\min} = l, t_{\max} = r$, 最终为 $d$, 现在将问题转化为判定这个 $(l, r, d)$ 是否合法</p>
<p>$a_i$ 在这个过程中对应上$b_{(i + l) \bmod n} \sim b_{(i + r) \bmod n}$，每个$a_i\neq b_{(i + d) \bmod n}$ 的 $i$ 对应区间都中有一个 $1$, 那么这个 $(l, r, d)$ 合法。</p>
<p>接着考虑对于一组合法的 $(l, r, d)$ 求出最少操作次数，shift的次数肯定是 $2(r - l) - |d|$ ，因为我们可以shift到 $d$ 另的一侧，再shift到 $d$ 的这一侧，再shift回到 $d$</p>
<p>优化这个做法，设 $d \ge 0$, 枚举 $d$ 的取值，若 $b_i \sim b_{(i + d) \bmod n}$ 均存在一个 $1$，那么我们直接shift $d$ 即可。否则设 $x_i$ 为 $i$ 左侧第一个 $1$, $y_i$ 为 $(i + d)\bmod n$ 右侧第一个 $1$, 设 $X = l, Y = r - d$, 我们需要对于所有的 $i$ 都存在有 $(X\ge x_i \vee Y \ge y_i)$ 成立，且最小化 $X + Y$</p>
<p>排序后扫描即可，复杂度 $O(n^2\log n)$, 实际上xjb算算就是 $O(n^2)$ 的</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">        <span class="keyword">for</span>(A[i] = <span class="number">0</span>; b[(i + A[i]) % n] != <span class="string">'1'</span>; ++A[i]);</div><div class="line">        <span class="keyword">for</span>(B[i] = <span class="number">0</span>; b[(i + B[i] + n) % n] != <span class="string">'1'</span>; --B[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">0</span>; d &lt; n; d++) &#123;</div><div class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) x[i] = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(i = j = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">if</span>(a[i] != b[(i + d) % n]) &#123;</div><div class="line">                cmax(x[-B[i]], A[i] - d);</div><div class="line">                ++j;</div><div class="line">            &#125;</div><div class="line">        <span class="keyword">int</span> L, R, res = <span class="number">1e9</span>;</div><div class="line">        <span class="keyword">for</span>(L = <span class="number">0</span>, R = n - <span class="number">1</span>; ~R; R--) cmin(res, L + R), cmax(L, x[R]);</div><div class="line">        cmin(ans, <span class="number">2</span> * res + d + j);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Shuffle-and-Swap"><a href="#Shuffle-and-Swap" class="headerlink" title="Shuffle and Swap"></a>Shuffle and Swap</h1><p>$a_i \to b_i$ 连有向边，此时图上会有若干环和若干链，忽略所有的环。</p>
<p>对于一条链 $p_1 \to p_2 \ldots \to p_t$, 交换前 $a_{p_1 \sim p_{t - 1}} = 1, a_{p_t} = 0$, 且 $b_{p_2 \sim p_{t}} = 1, b_{p_1} = 0$，我们希望能把 $0$ 从 $a_{p_{t}}$ 移动到 $a_{p_1}$, 这个对应方案唯一</p>
<p>设原数列满足 $A_i = B_i = 1$ 的有 $x$ 个, $A_i = 1, B_i = 0$ 的有 $y$ 个，此时 $A_i = 0, B_i = 1$ 的也有 $y$ 个，我们会得到一个 $x + y$ 条边， $y$ 条链的图。</p>
<p>哪只要算造链的方案数即可。$f(i, j)$ 表示前 $j$ 个链，用了 $j$ 个点的方案数</p>
<p>可以轻易得出转移，卷积优化即可。最后答案就是 $\sum f(y, i) <em> x! </em> y! * (x + y) !$</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">23</span>, P = <span class="number">998244353</span>, G = <span class="number">3</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = (<span class="number">1</span> &lt;&lt; <span class="number">19</span>) + <span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> N = <span class="number">1</span> &lt;&lt; <span class="number">18</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a + b) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a - b + P) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (LL)a * (LL)b % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = mul(ans, a);</div><div class="line">        a = mul(a, a);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">exp</span>(x, P - <span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> eps[MaxN], ieps[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> g = <span class="built_in">exp</span>(G, (P - <span class="number">1</span>) / N), ig = inv(g);</div><div class="line">    eps[<span class="number">0</span>] = ieps[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) eps[i] = mul(eps[i - <span class="number">1</span>], ig), ieps[i] = mul(ieps[i - <span class="number">1</span>], g);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> w[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i != n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">std</span>::swap(x[i], x[j]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = n &gt;&gt; <span class="number">1</span>; (j ^= l) &lt; l; l &gt;&gt;= <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">int</span> l = i &gt;&gt; <span class="number">1</span>, d = N / i;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j != n; j += i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != l; k++) &#123;</div><div class="line">                <span class="keyword">int</span> t = mul(x[j + k + l], w[d * k]);</div><div class="line">                x[j + k + l] = sub(x[j + k], t);</div><div class="line">                x[j + k] = add(x[j + k], t);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">idft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, ieps);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, in = inv(n); i &lt; n; i++) x[i] = mul(x[i], in);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="keyword">char</span> A[MaxN], B[MaxN];</div><div class="line"><span class="keyword">int</span> n, fac[MaxN], rfac[MaxN], x[MaxN], y[MaxN], z[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	init();</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, A + <span class="number">1</span>, B + <span class="number">1</span>); n = <span class="built_in">strlen</span>(A + <span class="number">1</span>);</div><div class="line">	<span class="keyword">int</span> X = <span class="number">0</span>, Y = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">		<span class="keyword">if</span>(A[i] == <span class="string">'1'</span> &amp;&amp; B[i] == <span class="string">'1'</span>)</div><div class="line">			++X;</div><div class="line">		<span class="keyword">if</span>(A[i] == <span class="string">'1'</span> &amp;&amp; B[i] == <span class="string">'0'</span>)</div><div class="line">			++Y;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(fac[<span class="number">0</span>] = i = <span class="number">1</span>; i &lt; MaxN; i++) fac[i] = mul(fac[i - <span class="number">1</span>], i);</div><div class="line"> 	rfac[MaxN - <span class="number">1</span>] = inv(fac[MaxN - <span class="number">1</span>]);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = MaxN - <span class="number">1</span>; i; i--) rfac[i - <span class="number">1</span>] = mul(rfac[i], i); </div><div class="line">	<span class="keyword">int</span> L = <span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(L &lt;= X + X + <span class="number">1</span>) L &lt;&lt;= <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= X; i++) x[i] = rfac[i + <span class="number">1</span>];</div><div class="line">	z[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> t = Y; t; t &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">if</span>(t &amp; <span class="number">1</span>) &#123;</div><div class="line">			dft(L, x); dft(L, z);</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; L; i++) z[i] = mul(z[i], x[i]);</div><div class="line">			idft(L, z); idft(L, x);</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		dft(L, x);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; L; i++) x[i] = mul(x[i], x[i]);</div><div class="line">		idft(L, x);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= X; i++) ans = add(ans, z[i]);</div><div class="line">	<span class="keyword">int</span> co = mul(fac[X + Y], mul(fac[X], fac[Y]));</div><div class="line">	</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>, mul(ans, co)); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Yes-or-No"><a href="#Yes-or-No" class="headerlink" title="Yes or No"></a>Yes or No</h1><p>对于一个有 $m$ 个问题, 其中 <code>Yes</code> or <code>No</code> 较多的一个为 $n$ 个时，期望答对就是 $\frac{n}{m}$。</p>
<p>设一个矩阵 $G(i, j), i \in [0, n], j \in [0, m]$, 以 $G(i, j)\to G(i, j + 1)$ 表示答一个No，$G(i, j) \to G(i + 1, j)$ 表示答一个Yes， $G(i, j)$ 的点权为对应的期望。从左上角 $S$ 走到 $T$ 的期望路径长度就是答案。</p>
<p>剩下的不想编了。</p>
<p>剩下的我打算重新编</p>
<p><img src="l0nl1f3.github.io/uploads/AGC019F_table.png" alt="图片"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;。。。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HackerEarth August Circuits 17 Hard: Powerful Dishes</title>
    <link href="http://yoursite.com/2017/08/25/HackerEarth-August-Circuits-17-Hard-Powerful-Dishes/"/>
    <id>http://yoursite.com/2017/08/25/HackerEarth-August-Circuits-17-Hard-Powerful-Dishes/</id>
    <published>2017-08-25T12:55:21.000Z</published>
    <updated>2017-08-29T02:52:13.070Z</updated>
    
    <content type="html"><![CDATA[<p>感人至极  </p>
<a id="more"></a>
<h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p>求</p>
<script type="math/tex; mode=display">\sum_{\sum_{i = 1} ^ n p_i \le y} \prod_{i = 1}^{n} p_i^{a_i}\pmod{10^9+7}</script><p>其中$n\leq 10^5, \sum_{i=1}^{n} a_i \leq 10^5, y\leq 10^9$</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>考虑物品 $i$ 的生成函数 $f(i) = \sum_{i\ge 0} i^a x^i$, 最后我们只要求 $\prod_{i = 1} ^ {n} f(i)$ 的 $y$ 次项系数即可。 </p>
<p>经过OEIS查询可以得到 </p>
<script type="math/tex; mode=display">\sum i ^ n x ^ i = \frac{\sum_{i = 0} ^ {n - 1}A(n, i)x^{i + 1}}{(1-x)^{n +1}}</script><p>其中 $A(n, i)$ 表示 $n$ 次 Euler polynomial 多项式的 $i$ 次项系数</p>
<p>分子和分母分开来考虑</p>
<p>分子 $\sum_{i = 0} ^ {n - 1}A(n, i) x^{i + 1}$，只要能求 $A(n, i)$ 即可</p>
<p>注意到wikipedia上实际上给了一个显示的公式即</p>
<script type="math/tex; mode=display">A(n, i) = \sum_{k = 0} ^ {i + 1} (-1) ^ k {n + 1\choose k}(i + 1 - k) ^ n</script><p>这个式子实际上可以转化为 $(-1)^i{n + 1\choose i}$ 和 $i^n$ 卷积，使用FFT可以在 $n\log n$ 时间内求出。(此处 $n = a_i$</p>
<p>但实际上我们要求的是 $\prod_{i = 1}^{n}f(i)$, 且保证 $\sum \mathrm{deg}_i \leq 10^5$</p>
<p>我们可以设 $solve(l, r)$ 求出 $\prod_{i = l} ^ {r} f(i)$，随机打乱 $a_i$, 找将两边尽量均分的位置 $o$, $solve(l, r) = solve(l, o)solve(o + 1, r)$，期望复杂度 $O(n\log ^ 2 n)$</p>
<p>回到分母部分，注意到最后答案要求的是第 $10^9$ 项，不能直接利用多项式求逆+多项式乘法或者拉格朗日反演求出。只能观察组合意义，注意到 $\frac{1}{1 - x} = \sum x^i$，那么除一次 $(1-x)$ 相当于做一次系数的前缀和。那么分子的每一项对最后的第 $y$ 项可以用组合数表示</p>
<p>具体的就是 $i$ 对第 $K = 1 + \sum_{i = 1} ^ {n} (1 + a_i)$ 次前缀和后对第 $y$ 项的贡献相当于 $\sum_{i = 1}^{K}x_i = y - i$ 的非负整数解数。即$y - i + K - 1 \choose K - 1$ 这个组合数可以递推求得。本题完结</p>
<p>虽然这个模数不是很清真 但是拦不住英勇的玩家的，套个毛爷爷FFT板子即可~</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">comp</span>&#123;</span> </div><div class="line">	<span class="keyword">double</span> r, i;</div><div class="line">	comp() &#123; &#125;	</div><div class="line">	comp(<span class="keyword">double</span> a, <span class="keyword">double</span> b) : r(a), i(b) &#123; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">19</span>), MaxN = (N &lt;&lt; <span class="number">1</span>) + <span class="number">10</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> K = <span class="number">32767</span>, L = <span class="number">15</span>, P = <span class="number">1000000007</span>;</div><div class="line"> </div><div class="line"><span class="function">comp <span class="title">add</span><span class="params">(comp a, comp b)</span> </span>&#123; <span class="keyword">return</span> comp(a.r + b.r, a.i + b.i); &#125;</div><div class="line"><span class="function">comp <span class="title">sub</span><span class="params">(comp a, comp b)</span> </span>&#123; <span class="keyword">return</span> comp(a.r - b.r, a.i - b.i); &#125;</div><div class="line"><span class="function">comp <span class="title">mul</span><span class="params">(comp a, comp b)</span> </span>&#123; <span class="keyword">return</span> comp(a.r * b.r - a.i * b.i, a.r * b.i + a.i * b.r);&#125;</div><div class="line"><span class="function">comp <span class="title">div</span><span class="params">(comp a, <span class="keyword">double</span> b)</span></span>&#123;	<span class="keyword">return</span> comp(a.r/b, a.i/b); &#125;</div><div class="line"><span class="function">comp <span class="title">conj</span><span class="params">(comp x)</span> </span>&#123; <span class="keyword">return</span> comp(x.r, -x.i); &#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> x + y &gt;= P ? x + y - P : x + y; &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;	<span class="keyword">return</span> x - y &lt; <span class="number">0</span> ? x - y + P : x - y;  &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;	<span class="keyword">return</span> (LL)x * y % P; &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> x, LL n)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) </div><div class="line">			res = mul(res, x);</div><div class="line">		x = mul(x, x);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line">	</div><div class="line">comp eps[MaxN]; </div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</div><div class="line">		eps[i] = comp(<span class="built_in">cos</span>(<span class="number">2</span> * pi * i /N), <span class="built_in">sin</span>(<span class="number">2</span> * pi * i /N));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n, comp x[], comp w[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i != n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">std</span>::swap(x[i], x[j]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = n &gt;&gt; <span class="number">1</span>; (j ^= l) &lt; l; l &gt;&gt;= <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">int</span> l = i &gt;&gt; <span class="number">1</span>, d = N / i;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j != n; j += i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != l; k++) &#123;</div><div class="line">                comp t = mul(x[j + k + l], w[d * k]);</div><div class="line">                x[j + k + l] = sub(x[j + k], t);</div><div class="line">                x[j + k] = add(x[j + k], t);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dft</span><span class="params">(<span class="keyword">int</span> n, comp x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">idft</span><span class="params">(<span class="keyword">int</span> n, comp x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">    reverse(x + <span class="number">1</span>, x + n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) x[i] = div(x[i], n);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">conv</span><span class="params">(<span class="keyword">int</span> na, <span class="keyword">int</span> a[], <span class="keyword">int</span> nb, <span class="keyword">int</span> b[], <span class="keyword">int</span> nc, <span class="keyword">int</span> c[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n, i;</div><div class="line">    <span class="keyword">static</span> comp x[MaxN], y[MaxN], z[MaxN], w[MaxN];</div><div class="line">    <span class="keyword">for</span>(n = <span class="number">1</span>; n &lt; na + nb - <span class="number">1</span>; n &lt;&lt;= <span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">    	x[i] = i &lt; na ? comp(a[i] &amp; K, a[i] &gt;&gt; L): comp(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">    	y[i] = i &lt; nb ? comp(b[i] &amp; K, b[i] &gt;&gt; L): comp(<span class="number">0</span>, <span class="number">0</span>);    	</div><div class="line">	&#125;</div><div class="line">	dft(n, x); dft(n, y);</div><div class="line">    <span class="function">comp <span class="title">r0</span><span class="params">(<span class="number">0.5</span>, <span class="number">0</span>)</span></span>;</div><div class="line">    <span class="function">comp <span class="title">r1</span><span class="params">(<span class="number">0</span>, <span class="number">-0.5</span>)</span></span>;</div><div class="line">    <span class="function">comp <span class="title">r</span><span class="params">(<span class="number">0</span>, <span class="number">1</span>)</span></span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">		<span class="keyword">int</span> j = (n - i) &amp; (n - <span class="number">1</span>);</div><div class="line">		comp x0, x1, y0, y1;</div><div class="line">		x0 = mul(add(x[i], conj(x[j])), r0);</div><div class="line">		x1 = mul(sub(x[i], conj(x[j])), r1);</div><div class="line">		y0 = mul(add(y[i], conj(y[j])), r0);</div><div class="line">		y1 = mul(sub(y[i], conj(y[j])), r1);</div><div class="line">		z[i] = mul(x0, add(y0, mul(y1, r)));</div><div class="line">		w[i] = mul(x1, add(y0, mul(y1, r)));</div><div class="line"> 	&#125;</div><div class="line"> 	idft(n, z);</div><div class="line">	idft(n, w); </div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; nc; i++) &#123;</div><div class="line">        <span class="keyword">int</span> c00 = (LL)(z[i].r + <span class="number">0.5</span>) % P, c01 = (LL)(z[i].i + <span class="number">0.5</span>) % P;</div><div class="line">        <span class="keyword">int</span> c10 = (LL)(w[i].r + <span class="number">0.5</span>) % P, c11 = (LL)(w[i].i + <span class="number">0.5</span>) % P;</div><div class="line">        c[i] = ((((LL)c11 &lt;&lt; L) + c01 + c10 &lt;&lt; L) + c00) % P;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, y, a[MaxN];</div><div class="line"><span class="keyword">int</span> fac[MaxN], rfac[MaxN], Ap[MaxN], Bp[MaxN], h[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">bin</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> n &lt; <span class="number">0</span> || m &lt; <span class="number">0</span> || n &lt; m ? <span class="number">0</span> : mul(fac[n], mul(rfac[m], rfac[n - m]));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Euler</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> ans[])</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n = a[p], i, j;</div><div class="line">	<span class="comment">//https://en.wikipedia.org/wiki/Eulerian_number </span></div><div class="line">	<span class="comment">//Explicit formula</span></div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) Ap[i] = <span class="built_in">exp</span>(i, n);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) &#123;</div><div class="line">		<span class="keyword">int</span> co = bin(n + <span class="number">1</span>, i);</div><div class="line">		Bp[i] = (i &amp; <span class="number">1</span>) ? P - co : co;</div><div class="line">	&#125;</div><div class="line">	conv(n + <span class="number">1</span>, Ap, n + <span class="number">1</span>, Bp, n + <span class="number">1</span>, ans);</div><div class="line">	</div><div class="line">	<span class="comment">/*</span></div><div class="line">	n = 1</div><div class="line">	A = x </div><div class="line">	n = 2</div><div class="line">	A = x(x+1)</div><div class="line">	n = 3</div><div class="line">	A = x(x^2+4x+1)</div><div class="line">	for(i = 0; i &lt;= n; i++) </div><div class="line">		printf("%d ", ans[i]);</div><div class="line">	cerr &lt;&lt; endl;</div><div class="line">	*/</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; vec[MaxN]; </div><div class="line"></div><div class="line"><span class="keyword">namespace</span> temp &#123;</div><div class="line">	<span class="keyword">int</span> x[MaxN], y[MaxN], z[MaxN]; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;c;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vector_mul(<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; a, <span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; b) &#123;</div><div class="line">		<span class="keyword">int</span> i;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; a.size(); i++) x[i] = a[i];</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; b.size(); i++) y[i] = b[i];</div><div class="line">		conv(a.size(), x, b.size(), y, a.size() + b.size() - <span class="number">1</span>, z);</div><div class="line">		c.clear(); </div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; a.size() + b.size() - <span class="number">1</span>; i++) </div><div class="line">			c.emplace_back(z[i]);</div><div class="line">		<span class="keyword">return</span> c;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span>(l == r) &#123;</div><div class="line">		<span class="comment">// don't know what should do actually ...</span></div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> ul = <span class="number">0</span>, ur = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> i, j, o = r - <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; i++) ur += a[i] + <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt; r; i++) &#123;</div><div class="line">		ul += a[i] + <span class="number">1</span>;</div><div class="line">		ur -= a[i] + <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(ul &gt;= ur) </div><div class="line">			o = i, i = r + <span class="number">1</span>; </div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	solve(l, o);</div><div class="line">	solve(o + <span class="number">1</span>, r);</div><div class="line">	vec[l] = temp :: vector_mul(vec[l], vec[o + <span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> u[MaxN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, M = <span class="number">0</span>; </div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) M += a[i] + <span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">0</span>; <span class="keyword">int</span> C = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= M; i++) C = mul(C, y + M + <span class="number">2</span> - i);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= M; i++) C = mul(C, <span class="built_in">exp</span>(i, P - <span class="number">2</span>));</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; min(M, y + <span class="number">1</span>); i++) &#123;</div><div class="line">		C = mul(C, y + <span class="number">1</span> - i);</div><div class="line">		C = mul(C, <span class="built_in">exp</span>(y + M + <span class="number">1</span> - i, P - <span class="number">2</span>));</div><div class="line">		ans = add(ans, mul(C, u[i]));</div><div class="line">	&#125;</div><div class="line">				</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j; init();</div><div class="line">	fac[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; MaxN; i++) fac[i] = mul(fac[i - <span class="number">1</span>], i);</div><div class="line">	rfac[MaxN - <span class="number">1</span>] = <span class="built_in">exp</span>(fac[MaxN - <span class="number">1</span>], P - <span class="number">2</span>);</div><div class="line">	<span class="keyword">for</span>(i = MaxN - <span class="number">1</span>; i; i--) rfac[i - <span class="number">1</span>] = mul(rfac[i], i);</div><div class="line">	</div><div class="line">	n = inp();</div><div class="line">	y = inp();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp();</div><div class="line">	random_shuffle(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">		Euler(i, h);</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt;= a[i]; j++) vec[i].emplace_back(h[j]);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	solve(<span class="number">1</span>, n);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; vec[<span class="number">1</span>].size(); i++) u[i] = vec[<span class="number">1</span>][i];</div><div class="line">	divide();</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结尾附上上文中用到的几个公式的证明</p>
<p>实际上就是通常幂转下降幂 $x^n=\sum_{k=1}^n S_2(n, k)x^{\underline k}$</p>
<p>$f(p) = \sum i^ax^i = \sum(\sum_{k=1}^a<br>S_2(a, k)i^{\underline k})x^i$</p>
<p>调换求和得到 </p>
<script type="math/tex; mode=display">f(p) = \sum \frac{S_2(a, k)i^{\underline k}}{(1-x)^{a_i + 1}}</script><p>而根据斯特林数相关公式 $S_2(n, m)=\frac{1}{m!}\sum_{k=0}^m (-1)^k{m\choose k}(m-k)^n$ 可以导出Euler Polynomial的显式公式 。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感人至极  &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TopCoder Single Round Match 710 div1 Solutions</title>
    <link href="http://yoursite.com/2017/08/23/TopCoder-Single-Round-Match-710-div1-Solutions/"/>
    <id>http://yoursite.com/2017/08/23/TopCoder-Single-Round-Match-710-div1-Solutions/</id>
    <published>2017-08-23T12:01:18.000Z</published>
    <updated>2017-08-23T12:37:10.554Z</updated>
    
    <content type="html"><![CDATA[<p>听说TC有插件，装上去试用了一下<br><a id="more"></a></p>
<h1 id="ReverseMancala"><a href="#ReverseMancala" class="headerlink" title="ReverseMancala"></a>ReverseMancala</h1><p>注意到A操作和B操作互逆，将原数列和目标数列用A, B操作构造到同一局面即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; build(<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; a, <span class="keyword">int</span> op) &#123;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</div><div class="line">	<span class="keyword">int</span> s = <span class="number">0</span>, i, p;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; a.size(); i++) s += a[i];</div><div class="line">	<span class="keyword">while</span>(a[<span class="number">0</span>] != s) &#123;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; !a[i]; ++i);</div><div class="line">		ans.push_back(op ? (i + a[i]) % n + n: i);</div><div class="line">		<span class="keyword">for</span>(p = a[i], a[i] = <span class="number">0</span>, i = (i + <span class="number">1</span>) % n; p; --p, ++a[i], i = (i + <span class="number">1</span>) % n);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReverseMancala</span> &#123;</span></div><div class="line">    <span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; findMoves(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; start, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; target) &#123;</div><div class="line">		n = start.size();</div><div class="line">		</div><div class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pa = build(start, <span class="number">0</span>);</div><div class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pb = build(target, <span class="number">1</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = pb.size() - <span class="number">1</span>; ~i; i--) </div><div class="line">			pa.push_back(pb[i]);</div><div class="line">		</div><div class="line">        <span class="keyword">return</span> pa;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h1 id="MagicNim"><a href="#MagicNim" class="headerlink" title="MagicNim"></a>MagicNim</h1><p>如果所有石子数都为1，显然先手必胜</p>
<p>如果所有石子的异或和为0， Alice可以取走Magic Stone</p>
<p>如上之后我们可以忽略石子数二进制的最后一位和Magic Stone</p>
<p>此时 <code>a[i] &gt;&gt;= 1</code>， 最后一个取走石子的人负。</p>
<p>注意到题作者的写法很好的处理了上面的讨论，如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MagicNim</span> &#123;</span></div><div class="line">    <span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="built_in">string</span> <span class="title">findWinner</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v)</span> </span>&#123;</div><div class="line">    	<span class="keyword">int</span> a = (*max_element(v.begin(), v.end()) &lt;= <span class="number">3</span>) + <span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> b = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> x : v) b ^= x; </div><div class="line">        <span class="keyword">return</span> a != b ? <span class="string">"Alice"</span> : <span class="string">"Bob"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h1 id="Hyperboxes"><a href="#Hyperboxes" class="headerlink" title="Hyperboxes"></a>Hyperboxes</h1><p>注意到这个超多面体 (?) 不相交的情况就是不存在一对立方体每一维度的区间都相交。 且 ${m\choose 2} = 15$</p>
<p>考虑状压这个相交，当 $K = 1$时，设 $f(S)$ 中 $S$ 记录两两立方体的相交情况，对应的方案数，设 $fg = \sum_{p \ge 0}\sum_{i~\wedge~j == p} f(i)g(j)$, 求 $f(S) ^ K$ 就能得到所需答案</p>
<p>那么只要求出初始的 $f$ 即可。</p>
<p>可以状压dp或者爆搜, 最后用 FWT 求 $f(S)^K$</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div></pre></td><td class="code"><pre><div class="line">const int P = 998244353;</div><div class="line"></div><div class="line">int inv[20];</div><div class="line">int exp(int a, int n) &#123;</div><div class="line">	int res = 1;</div><div class="line">	for(; n; n &gt;&gt;= 1) &#123;</div><div class="line">		if(n &amp; 1)</div><div class="line">			res = (LL) res * a % P;</div><div class="line">		a = (LL) a * a % P;</div><div class="line">	&#125;</div><div class="line">	return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void init() &#123;</div><div class="line">	inv[0] = 1;</div><div class="line">	for(int i = 1; i &lt; 20; i++) </div><div class="line">		inv[i] = exp(i, P - 2);</div><div class="line">&#125;</div><div class="line">  </div><div class="line">int C(int n, int m) &#123;</div><div class="line">	if(n &lt; 0 || m &lt; 0 || n &lt; m) return 0;</div><div class="line">	int res = 1;</div><div class="line">	for(int i = 0; i &lt; m; i++) </div><div class="line">		res = (LL) res * (n - i) % P * inv[i + 1] % P;</div><div class="line">	return res;</div><div class="line">&#125;</div><div class="line">	</div><div class="line">using Four = tuple&lt;int, int, int, int&gt;;</div><div class="line"></div><div class="line">map&lt;Four, int&gt; g[2][1 &lt;&lt; 6];</div><div class="line">int id[6][6], f[1 &lt;&lt; 15];</div><div class="line"></div><div class="line">int pcnt(int x) &#123;</div><div class="line">	return !x ? -1 : 31 - __builtin_clz(x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int add(int &amp;a, int b) &#123;</div><div class="line">	(a += b) %= P;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int n, m, K;</div><div class="line"></div><div class="line">void trans(int p, int ub, int op) &#123;</div><div class="line">	int o, i, j, k;</div><div class="line">	for(o = 0; o &lt; ub; o++) &#123;</div><div class="line">		for(const auto &amp;it : g[p][o]) &#123;</div><div class="line">			int l, r, a, b; tie(l, r, a, b) = it.fir;</div><div class="line">			int way = it.sec;</div><div class="line">			int pre = pcnt(a);</div><div class="line">			int stat = 0;</div><div class="line">			for(i = 0; i &lt; m; i++)</div><div class="line">				if(l &gt;&gt; i &amp; 1)</div><div class="line">					if((!(r &gt;&gt; i &amp; 1)) || (a &gt;&gt; i &amp; 1))</div><div class="line">						stat |= (1 &lt;&lt; i);</div><div class="line">			</div><div class="line">			if(op) &#123;</div><div class="line">				for(i = 0; i &lt; m; i++) </div><div class="line">					if(!(l &gt;&gt; i &amp; 1)) &#123;</div><div class="line">						if(pre &gt;= i) continue;</div><div class="line">						int t = b;</div><div class="line">						for(j = 0; j &lt; m; j++)</div><div class="line">							if(stat &gt;&gt; j &amp; 1) t |= (1 &lt;&lt; id[i][j]);</div><div class="line">						Four to(l | (1 &lt;&lt; i), r, a | (1 &lt;&lt; i), t); </div><div class="line">						add(g[p ^ 1][o][to], way);</div><div class="line">					&#125;else if(!(r &gt;&gt; i &amp; 1)) &#123;</div><div class="line">						if(pre &gt;= i) continue;</div><div class="line">						Four to(l, r | (1 &lt;&lt; i), a | (1 &lt;&lt; i), b);</div><div class="line">						add(g[p ^ 1][o][to], way);</div><div class="line">					&#125;</div><div class="line">			&#125;</div><div class="line">  </div><div class="line">			if(~ pre) &#123;</div><div class="line">				Four to(l, r, 0, b);</div><div class="line">				add(g[p][o + 1][to], way);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void calc(int n, int m) &#123;</div><div class="line">	int i, j, p = 0;</div><div class="line">	for(i = 0; i &lt; m; i++)</div><div class="line">		for(j = i + 1; j &lt; m; j++)</div><div class="line">			id[i][j] = id[j][i] = p++;</div><div class="line">	</div><div class="line">	Four o(0, 0, 0, 0); g[0][0][o] = 1;</div><div class="line">	int ub = (m &lt;&lt; 1 | 1);</div><div class="line">	</div><div class="line">	for(p = 0; p &lt; ub; p++) &#123;</div><div class="line">		for(i = 0; i &lt; ub; i++) g[~p &amp; 1][i].clear();</div><div class="line">		trans(p &amp; 1, ub, p != ub - 1);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	memset(f, 0, sizeof(f));</div><div class="line">	for(p = 0; p &lt; ub; p++) </div><div class="line">		for(const auto &amp;it : g[0][p]) &#123;</div><div class="line">			int l, r, a, b;</div><div class="line">			tie(l, r, a, b) = it.fir; int way = it.sec;</div><div class="line">			if(a) continue;</div><div class="line">			add(f[b], (LL) C(n, p) * way % P);</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//and convolution</div><div class="line">void FwT(int n, int f[]) &#123;</div><div class="line">	for(int j = 0; j &lt; n; j++)</div><div class="line">		for(int i = 0; i &lt; (1 &lt;&lt; n); i++)</div><div class="line">			if(~i &gt;&gt; j &amp; 1)</div><div class="line">				f[i] = (f[i] + f[i | (1 &lt;&lt; j)]) % P; </div><div class="line">&#125;</div><div class="line"></div><div class="line">void iFwT(int n, int f[]) &#123;</div><div class="line">	for(int j = 0; j &lt; n; j++)</div><div class="line">		for(int i = 0; i &lt; (1 &lt;&lt; n); i++)	</div><div class="line">			if(~i &gt;&gt; j &amp; 1)</div><div class="line">				f[i] = (f[i] - f[i ^ (1 &lt;&lt; j)] + P) % P;</div><div class="line">&#125;</div><div class="line">class Hyperboxes &#123;</div><div class="line">    public:</div><div class="line">    </div><div class="line">    int findCount(int n, int m, int k) &#123;</div><div class="line">		:: n = n; :: m = m; :: K = k;</div><div class="line">    	init();</div><div class="line">		calc(n, m);</div><div class="line">		int mL = m * (m - 1) &gt;&gt; 1; </div><div class="line">		FwT(mL, f);</div><div class="line">		for(int i = 0; i &lt; (1 &lt;&lt; mL); i++) f[i] = exp(f[i], K);</div><div class="line">		iFwT(mL, f);</div><div class="line">        return f[0];</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>窝怀疑这个C++高亮有bug啊 。。。我这份代码一直没办法正常高亮</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听说TC有插件，装上去试用了一下&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017 Multi University Training Contest solutions</title>
    <link href="http://yoursite.com/2017/08/22/2017-Multi-University-Training-Contest-9-solutions/"/>
    <id>http://yoursite.com/2017/08/22/2017-Multi-University-Training-Contest-9-solutions/</id>
    <published>2017-08-22T09:22:03.000Z</published>
    <updated>2017-08-23T11:47:20.384Z</updated>
    
    <content type="html"><![CDATA[<p>几何日</p>
<a id="more"></a>
<p>mdzz全是几何题 几何题毁我青春</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;几何日&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HackerEarth August Circuits 17 Approximate : Gary in OS Class</title>
    <link href="http://yoursite.com/2017/08/19/HackerEarth-August-Circuits-17-Approximate-Gary-in-OS-Class/"/>
    <id>http://yoursite.com/2017/08/19/HackerEarth-August-Circuits-17-Approximate-Gary-in-OS-Class/</id>
    <published>2017-08-19T13:50:13.000Z</published>
    <updated>2017-08-19T13:50:13.285Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017 Multi-University Training Contest 5 solutions</title>
    <link href="http://yoursite.com/2017/08/08/2017-Multi-University-Training-Contest-5-solutions/"/>
    <id>http://yoursite.com/2017/08/08/2017-Multi-University-Training-Contest-5-solutions/</id>
    <published>2017-08-08T10:28:03.000Z</published>
    <updated>2017-08-08T11:06:42.444Z</updated>
    
    <content type="html"><![CDATA[<p>(你怎么又在贡献罚时</p>
<a id="more"></a>
<h1 id="01"><a href="#01" class="headerlink" title="01"></a>01</h1><p>直接bitset, 主要部分就是xjb枚举一下因数<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">bitset</span>&lt;MAXN&gt; F, G;</div><div class="line">F[<span class="number">0</span>] = m&amp;<span class="number">1</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">50000</span>; ++ i)</div><div class="line">&#123;</div><div class="line">    F &lt;&lt;= <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> x : b[i])</div><div class="line">    &#123;</div><div class="line">        F[<span class="number">0</span>] = F[<span class="number">0</span>]^<span class="number">1</span>;</div><div class="line">        F[x] = F[x]^<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (a[i])</div><div class="line">        G ^= F;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="02"><a href="#02" class="headerlink" title="02"></a>02</h1><p>好像还不会</p>
<h1 id="03"><a href="#03" class="headerlink" title="03"></a>03</h1><p>可持久化平衡树裸题(被卡空间了</p>
<h1 id="04"><a href="#04" class="headerlink" title="04"></a>04</h1><p>考虑设  $f(n)$ 为 $n | (a, b)$ 的总方案数</p>
<p>那么 </p>
<script type="math/tex; mode=display">\begin{aligned}
f(d) &=3^n \sum_{i=0, d | i}^n \sum_{j=0, d | i}^{n-i} \binom{n}{i} \binom{n-i}{j}\\
\end{aligned}</script><p>注意到这里利用一个 $z = x^d$ 来将FFT的长度缩短到 $\frac{n}{d}$ 即可， 时间复杂度 $O(\sum_{i = 1} ^ {n}  \lfloor\frac{n}{d}\rfloor) = O(n\log^2 n)$</p>
<p>并且需要任意模数的FFT, 注意常数<del>还好我的板子跑的快不然就zzqzzq了</del> </p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">comp</span>&#123;</span> </div><div class="line">    <span class="keyword">double</span> r, i;</div><div class="line">    comp() &#123; &#125;    </div><div class="line">    comp(<span class="keyword">double</span> a, <span class="keyword">double</span> b) : r(a), i(b) &#123; &#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">19</span>), MAXN = (N &lt;&lt; <span class="number">1</span>) + <span class="number">10</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> K = <span class="number">32767</span>, L = <span class="number">15</span>;</div><div class="line"><span class="keyword">int</span> P; </div><div class="line"><span class="function">comp <span class="title">add</span><span class="params">(comp a, comp b)</span> </span>&#123; <span class="keyword">return</span> comp(a.r + b.r, a.i + b.i); &#125;</div><div class="line"><span class="function">comp <span class="title">sub</span><span class="params">(comp a, comp b)</span> </span>&#123; <span class="keyword">return</span> comp(a.r - b.r, a.i - b.i); &#125;</div><div class="line"><span class="function">comp <span class="title">mul</span><span class="params">(comp a, comp b)</span> </span>&#123; <span class="keyword">return</span> comp(a.r * b.r - a.i * b.i, a.r * b.i + a.i * b.r);&#125;</div><div class="line"><span class="function">comp <span class="title">div</span><span class="params">(comp a, <span class="keyword">double</span> b)</span></span>&#123;    <span class="keyword">return</span> comp(a.r/b, a.i/b); &#125;</div><div class="line"><span class="function">comp <span class="title">conj</span><span class="params">(comp x)</span> </span>&#123; <span class="keyword">return</span> comp(x.r, -x.i); &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> x + y &gt;= P ? x + y - P : x + y; &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;    <span class="keyword">return</span> x - y &lt; <span class="number">0</span> ? x - y + P : x - y;  &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;    <span class="keyword">return</span> (LL)x * y % P; &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fexp</span><span class="params">(<span class="keyword">int</span> x, LL n)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(n = (n % (P - <span class="number">1</span>) + P - <span class="number">1</span>) % (P - <span class="number">1</span>); n; n &gt;&gt;= <span class="number">1</span>, x = mul(x, x)) </div><div class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1</span>) res = mul(res, x);</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line">    </div><div class="line">comp eps[MAXN]; </div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</div><div class="line">        eps[i] = comp(<span class="built_in">cos</span>(<span class="number">2</span> * pi * i /N), <span class="built_in">sin</span>(<span class="number">2</span> * pi * i /N));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n, comp x[], comp w[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i != n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">std</span>::swap(x[i], x[j]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = n &gt;&gt; <span class="number">1</span>; (j ^= l) &lt; l; l &gt;&gt;= <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">int</span> l = i &gt;&gt; <span class="number">1</span>, d = N / i;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j != n; j += i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != l; k++) &#123;</div><div class="line">                comp t = mul(x[j + k + l], w[d * k]);</div><div class="line">                x[j + k + l] = sub(x[j + k], t);</div><div class="line">                x[j + k] = add(x[j + k], t);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dft</span><span class="params">(<span class="keyword">int</span> n, comp x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">idft</span><span class="params">(<span class="keyword">int</span> n, comp x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">    reverse(x + <span class="number">1</span>, x + n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) x[i] = div(x[i], n);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">conv</span><span class="params">(<span class="keyword">int</span> na, <span class="keyword">int</span> a[], <span class="keyword">int</span> nb, <span class="keyword">int</span> b[], <span class="keyword">int</span> nc, <span class="keyword">int</span> c[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n, i;</div><div class="line">    <span class="keyword">static</span> comp x[MAXN], y[MAXN], z[MAXN], w[MAXN];</div><div class="line">    <span class="keyword">for</span>(n = <span class="number">1</span>; n &lt; na + nb - <span class="number">1</span>; n &lt;&lt;= <span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        x[i] = i &lt; na ? comp(a[i] &amp; K, a[i] &gt;&gt; L): comp(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        y[i] = i &lt; nb ? comp(b[i] &amp; K, b[i] &gt;&gt; L): comp(<span class="number">0</span>, <span class="number">0</span>);        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    dft(n, x); dft(n, y);</div><div class="line">    </div><div class="line">    <span class="function">comp <span class="title">r0</span><span class="params">(<span class="number">0.5</span>, <span class="number">0</span>)</span></span>;</div><div class="line">    <span class="function">comp <span class="title">r1</span><span class="params">(<span class="number">0</span>, <span class="number">-0.5</span>)</span></span>;</div><div class="line">    <span class="function">comp <span class="title">r</span><span class="params">(<span class="number">0</span>, <span class="number">1</span>)</span></span>;</div><div class="line">    </div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="keyword">int</span> j = (n - i) &amp; (n - <span class="number">1</span>);</div><div class="line">        comp x0, x1, y0, y1;</div><div class="line">        x0 = mul(add(x[i], conj(x[j])), r0);</div><div class="line">        x1 = mul(sub(x[i], conj(x[j])), r1);</div><div class="line">        y0 = mul(add(y[i], conj(y[j])), r0);</div><div class="line">        y1 = mul(sub(y[i], conj(y[j])), r1);</div><div class="line">        z[i] = mul(x0, add(y0, mul(y1, r)));</div><div class="line">        w[i] = mul(x1, add(y0, mul(y1, r)));</div><div class="line">    &#125;</div><div class="line">    idft(n, z);</div><div class="line">    idft(n, w); </div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; nc; i++) &#123;</div><div class="line">        <span class="keyword">int</span> c00 = (LL)(z[i].r + <span class="number">0.5</span>) % P, c01 = (LL)(z[i].i + <span class="number">0.5</span>) % P;</div><div class="line">        <span class="keyword">int</span> c10 = (LL)(w[i].r + <span class="number">0.5</span>) % P, c11 = (LL)(w[i].i + <span class="number">0.5</span>) % P;</div><div class="line">        c[i] = ((((LL)c11 &lt;&lt; L) + c01 + c10 &lt;&lt; L) + c00) % P;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> t,n,q,f[<span class="number">100010</span>],a[<span class="number">100010</span>],c[<span class="number">200010</span>],x[<span class="number">100010</span>],y[<span class="number">100010</span>],p;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(!b)</div><div class="line">      <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> c=power(a,b&gt;&gt;<span class="number">1</span>);</div><div class="line">    c=(ll)c*c%q;</div><div class="line">    <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</div><div class="line">      c=(ll)c*a%q;</div><div class="line">    <span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    init();</div><div class="line">    <span class="keyword">int</span> i,j,k;</div><div class="line">    n=<span class="number">100000</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)</div><div class="line">      &#123;</div><div class="line">       <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</div><div class="line">       P=q;</div><div class="line">       x[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">       </div><div class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">         x[i]=(ll)x[i<span class="number">-1</span>]*i%q;</div><div class="line">       <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</div><div class="line">         y[i]=power(x[i],q<span class="number">-2</span>);</div><div class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">         &#123;</div><div class="line">          <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=n/i;j++)</div><div class="line">            a[j]=y[j*i];</div><div class="line">          conv(n/i+<span class="number">1</span>,a,n/i+<span class="number">1</span>,a,n/i+<span class="number">1</span>,c);</div><div class="line">          f[i]=<span class="number">-1</span>;</div><div class="line">          <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=n/i;j++)</div><div class="line">            f[i]=(f[i]+(ll)c[j]*y[n-j*i]%q*x[n])%q;</div><div class="line">         &#125;</div><div class="line">       p=<span class="number">0</span>;</div><div class="line">       <span class="keyword">for</span>(i=n;i&gt;<span class="number">0</span>;i--)</div><div class="line">         &#123;</div><div class="line">          <span class="keyword">for</span>(j=i+i;j&lt;=n;j+=i)</div><div class="line">            f[i]=(f[i]-f[j])%q;</div><div class="line">          p=(p+(ll)f[i]*i)%q;</div><div class="line">         &#125;</div><div class="line">       p=(ll)p*power(<span class="number">3</span>,n)%q;</div><div class="line">       p=(p+q)%q;</div><div class="line">       <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,p);</div><div class="line">      &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="05"><a href="#05" class="headerlink" title="05"></a>05</h1><p>不会</p>
<h1 id="06"><a href="#06" class="headerlink" title="06"></a>06</h1><p>傻逼题 。。。 </p>
<h1 id="07"><a href="#07" class="headerlink" title="07"></a>07</h1><p>设 $f(i, j, k), k\in {0, 1}$ 表示在 $i$ 的子树内匹配大小 $\bmod m$ 为 $j$, 且 $i$ 的匹配状态为 $k$, 注意到<del>暴力dp复杂度就对了</del>转移是个卷积的形式， 套用FFT即可， 但是你直接强上肯定过不了的<del>复杂度怎么比暴力还高</del></p>
<p>所以为了解决复杂度问题， 我们卡卡常数就可以了</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">998244353</span>, G = <span class="number">3</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = (<span class="number">1</span> &lt;&lt; <span class="number">20</span>) + <span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> N = <span class="number">1</span> &lt;&lt; <span class="number">9</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">const</span> <span class="keyword">int</span> &amp;b)</span> </span>&#123;</div><div class="line">    a=((a+b&lt;P)?(a+b):(a+b-P));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">const</span> <span class="keyword">int</span> &amp;b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> ((a-b&lt;<span class="number">0</span>)?(a-b+P):(a-b));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (LL)a * b % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = mul(ans, a);</div><div class="line">        a = mul(a, a);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">exp</span>(x, P - <span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> eps[MaxN], ieps[MaxN], temp[<span class="number">5</span>][MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> g = <span class="built_in">exp</span>(G, (P - <span class="number">1</span>) / N), ig = inv(g);</div><div class="line">    eps[<span class="number">0</span>] = ieps[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) eps[i] = mul(eps[i - <span class="number">1</span>], g), ieps[i] = mul(ieps[i - <span class="number">1</span>], ig);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> w[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i != n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">std</span>::swap(x[i], x[j]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = n &gt;&gt; <span class="number">1</span>; (j ^= l) &lt; l; l &gt;&gt;= <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">int</span> l = i &gt;&gt; <span class="number">1</span>, d = N / i;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j != n; j += i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != l; k++) &#123;</div><div class="line">                <span class="keyword">int</span> t = mul(x[j + k + l], w[d * k]);</div><div class="line">                x[j + k + l] = sub(x[j + k], t);</div><div class="line">                add(x[j + k], t);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">idft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> y[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) y[i] = x[i];</div><div class="line">    trans(n, y, ieps);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, in = inv(n); i &lt; n; i++) y[i] = mul(y[i], in);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> k,l,u,ttt;</div><div class="line">    f[i][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;a[i].size();k++)</div><div class="line">      <span class="keyword">if</span>(a[i][k]!=j)</div><div class="line">        &#123;</div><div class="line">         dp(a[i][k],i);</div><div class="line">         <span class="keyword">int</span> p;</div><div class="line">         <span class="keyword">for</span>(p=<span class="number">1</span>;p&lt;=(g[i]+g[a[i][k]]);p&lt;&lt;=<span class="number">1</span>);</div><div class="line">         <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;m;l++)</div><div class="line">         &#123;</div><div class="line">           add(f[a[i][k]][<span class="number">1</span>][l], f[a[i][k]][<span class="number">1</span>][l]);</div><div class="line">           add(f[a[i][k]][<span class="number">1</span>][l], f[a[i][k]][<span class="number">0</span>][l]);</div><div class="line">         &#125;</div><div class="line">         <span class="keyword">if</span>((g[i]+<span class="number">1</span>)*(g[a[i][k]]+<span class="number">1</span>)&lt;=p*<span class="number">10</span>)</div><div class="line">           &#123;</div><div class="line">            <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;l++)</div><div class="line">               x[l]=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;=g[i];l++)</div><div class="line">              <span class="keyword">for</span>(u=<span class="number">0</span>;u&lt;=g[a[i][k]];u++)</div><div class="line">                x[l+u]=(x[l+u]+(L)f[i][<span class="number">1</span>][l]*(f[a[i][k]][<span class="number">0</span>][u]+f[a[i][k]][<span class="number">1</span>][u])+(L)f[i][<span class="number">0</span>][l]*(u==<span class="number">0</span>?<span class="number">0</span>:f[a[i][k]][<span class="number">0</span>][u<span class="number">-1</span>]))%q;</div><div class="line">            <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;l++)</div><div class="line">              f[i][<span class="number">1</span>][l]=x[l];</div><div class="line">            <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;l++)</div><div class="line">               x[l]=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;=g[i];l++)</div><div class="line">              <span class="keyword">for</span>(u=<span class="number">0</span>;u&lt;=g[a[i][k]];u++)</div><div class="line">                x[l+u]=(x[l+u]+(L)f[i][<span class="number">0</span>][l]*f[a[i][k]][<span class="number">1</span>][u])%q;</div><div class="line">            <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;l++)</div><div class="line">              f[i][<span class="number">0</span>][l]=x[l];</div><div class="line">           &#125;</div><div class="line">         <span class="keyword">else</span></div><div class="line">         &#123;</div><div class="line">         dft(p,f[a[i][k]][<span class="number">0</span>]);</div><div class="line">         dft(p,f[a[i][k]][<span class="number">1</span>]);</div><div class="line">         dft(p,f[i][<span class="number">0</span>]);</div><div class="line">         dft(p,f[i][<span class="number">1</span>]);</div><div class="line">         <span class="keyword">int</span> g=<span class="built_in">exp</span>(G, (P - <span class="number">1</span>) / p),w=<span class="number">1</span>;</div><div class="line">         <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;l++,w=(L)w*g%q)</div><div class="line">         &#123;</div><div class="line">           x[l]=((L)f[i][<span class="number">1</span>][l]*(f[a[i][k]][<span class="number">0</span>][l]+f[a[i][k]][<span class="number">1</span>][l])+(L)f[i][<span class="number">0</span>][l]*f[a[i][k]][<span class="number">0</span>][l]%q*w)%q;</div><div class="line">         &#125;</div><div class="line">         idft(p,x,f[i][<span class="number">1</span>]);</div><div class="line">         <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;l++)</div><div class="line">           x[l]=(L)f[i][<span class="number">0</span>][l]*f[a[i][k]][<span class="number">1</span>][l]%q;</div><div class="line">         idft(p,x,f[i][<span class="number">0</span>]);</div><div class="line">         &#125;</div><div class="line">         <span class="keyword">for</span>(l=m, ttt=<span class="number">0</span>;l&lt;p;l++, ttt++)</div><div class="line">           &#123;</div><div class="line">            <span class="keyword">if</span> (ttt==m) ttt=<span class="number">0</span>;</div><div class="line">            add(f[i][<span class="number">0</span>][ttt], f[i][<span class="number">0</span>][l]);</div><div class="line">            f[i][<span class="number">0</span>][l]=<span class="number">0</span>;</div><div class="line">            add(f[i][<span class="number">1</span>][ttt], f[i][<span class="number">1</span>][l]);</div><div class="line">            f[i][<span class="number">1</span>][l]=<span class="number">0</span>;</div><div class="line">           &#125;</div><div class="line">         <span class="keyword">for</span>(l=m<span class="number">-1</span>;l&gt;<span class="number">0</span> &amp;&amp; !f[i][<span class="number">0</span>][l] &amp;&amp; !f[i][<span class="number">1</span>][l];l--);</div><div class="line">         ::g[i]=l;</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">if</span>(f[i][<span class="number">0</span>][g[i]])</div><div class="line">      g[i]++;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    init();</div><div class="line">    <span class="keyword">int</span> i,j,k;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)</div><div class="line">      &#123;</div><div class="line">       <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">       <span class="keyword">for</span>(p=<span class="number">1</span>;p&lt;m;p&lt;&lt;=<span class="number">1</span>);</div><div class="line">       p&lt;&lt;=<span class="number">1</span>;</div><div class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</div><div class="line">         &#123;</div><div class="line">          <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;j,&amp;k);</div><div class="line">          a[j].push_back(k);</div><div class="line">          a[k].push_back(j);</div><div class="line">         &#125;</div><div class="line">       dp(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">       <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(f[<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]+f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>])%q);</div><div class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">         <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;p;j++)</div><div class="line">           <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;=<span class="number">1</span>;k++)</div><div class="line">             f[i][k][j]=<span class="number">0</span>;</div><div class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">         g[i]=<span class="number">0</span>;</div><div class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">         a[i].clear();</div><div class="line">      &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="08"><a href="#08" class="headerlink" title="08"></a>08</h1><p>GCJ原题， 以前noip模拟+noi模拟都见过<del>那你为什么还挂了五发因为zld标算挂了</del></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">int n, top;</div><div class="line">ll s[N], p[N], f[N], x[M];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">    int T = read();</div><div class="line">    for(int Cas = 1; Cas &lt;= T; Cas++)&#123;</div><div class="line">        int fuck = read(); n = read() + 1;</div><div class="line">        for(int i = 1; i &lt;= n; i++)</div><div class="line">            s[i] = i - 1;</div><div class="line">        ll All = 0;</div><div class="line">        for(int i = 1; i &lt;= n; i++)</div><div class="line">            All += (p[i] = read());</div><div class="line">        int num = 0;</div><div class="line">        for(; 1 &lt;&lt; num != All ; num++);</div><div class="line">        top = 0;</div><div class="line">        memset(f, 0, sizeof(f));</div><div class="line">        f[1] = 1;</div><div class="line">        for(int i = 1; i &lt;= n; i++)</div><div class="line">            while(p[i] - f[i])&#123;</div><div class="line">                x[++top] = s[i];</div><div class="line">                for(int j = n, k = n; j ; j--) if(f[j])&#123;</div><div class="line">                    while(s[j] + s[i] != s[k] &amp;&amp; k) k--;</div><div class="line">                    f[k] += f[j];</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        for(int i = 1; i &lt;= top; i++)</div><div class="line">            printf(&quot;%d%c&quot;, x[i], &quot; \n&quot;[i == top]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="09"><a href="#09" class="headerlink" title="09"></a>09</h1><p>现在还不会 。。。 </p>
<h1 id="10"><a href="#10" class="headerlink" title="10"></a>10</h1><h1 id="11"><a href="#11" class="headerlink" title="11"></a>11</h1><p>签到题。。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;(你怎么又在贡献罚时&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CodeChef August Long Challenge 2017/ AUG17 Solutions</title>
    <link href="http://yoursite.com/2017/08/07/CodeChef-August-Long-Challenge-2017-AUG17-Solutions/"/>
    <id>http://yoursite.com/2017/08/07/CodeChef-August-Long-Challenge-2017-AUG17-Solutions/</id>
    <published>2017-08-07T03:41:07.000Z</published>
    <updated>2017-08-20T09:27:50.591Z</updated>
    
    <content type="html"><![CDATA[<p>大失败QAQ</p>
<a id="more"></a>
<h1 id="RAINBOWA"><a href="#RAINBOWA" class="headerlink" title="RAINBOWA"></a>RAINBOWA</h1><p>暴力<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">233</span>;</div><div class="line"><span class="keyword">int</span> n, a[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, T  = inp();</div><div class="line">	<span class="keyword">while</span>(T--) &#123;</div><div class="line">		n = inp();</div><div class="line">		<span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">			a[i] = inp();</div><div class="line">		<span class="keyword">int</span> bd = <span class="number">1</span>, chk = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>, j = n; i &lt;= j; i++, j--)&#123;</div><div class="line">			<span class="keyword">int</span> L = <span class="number">1</span>, R = <span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(a[i] != bd || a[j] != bd) chk = <span class="number">0</span>; </div><div class="line">			</div><div class="line">			<span class="keyword">while</span>(i + <span class="number">1</span> &lt; j &amp;&amp; a[i + <span class="number">1</span>] == a[i]) ++i, ++L;</div><div class="line">			<span class="keyword">while</span>(j - <span class="number">1</span> &gt; i &amp;&amp; a[j - <span class="number">1</span>] == a[j]) --j, ++R;</div><div class="line">			</div><div class="line">			++bd;</div><div class="line">			</div><div class="line">			<span class="keyword">if</span>(L != R)</div><div class="line">				chk = <span class="number">0</span>;</div><div class="line">			<span class="keyword">if</span>(bd == <span class="number">7</span>) <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(i + <span class="number">1</span> &gt;= j) chk = <span class="number">0</span>; </div><div class="line">		<span class="keyword">for</span>(i = i + <span class="number">1</span>; i &lt; j; i++) <span class="keyword">if</span>(a[i] != <span class="number">7</span>) chk = <span class="number">0</span>; </div><div class="line">		<span class="keyword">if</span>(chk &amp;&amp; bd == <span class="number">7</span>) <span class="built_in">puts</span>(<span class="string">"yes"</span>); <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"no"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="CHEFMOVR"><a href="#CHEFMOVR" class="headerlink" title="CHEFMOVR"></a>CHEFMOVR</h1><p>贪心</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">const int MaxN = 101234;</div><div class="line">int n, d; LL a[MaxN], ans;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">	int i, j, T = inp();</div><div class="line">	while(T--) &#123;</div><div class="line">		n = inp(); d = inp(); LL sum = 0; </div><div class="line">		for(i = 1; i &lt;= n; i++) sum += (a[i] = inp());</div><div class="line">		</div><div class="line">		if(sum % n != 0) &#123;</div><div class="line">			puts(&quot;-1&quot;);</div><div class="line">			continue;</div><div class="line">		&#125;	</div><div class="line">		</div><div class="line">		ans = 0; sum /= n;</div><div class="line">		for(i = 1; i + d &lt;= n; i++) &#123;</div><div class="line">			LL mov = a[i] - sum;</div><div class="line">			a[i + d] += mov;</div><div class="line">			a[i] -= mov;</div><div class="line">			ans += (mov &gt; 0 ? mov : - mov);</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		int chk = 1;</div><div class="line">		for(i = 1; i &lt;= n; i++) if(a[i] != sum) chk = 0;</div><div class="line">		if(!chk) puts(&quot;-1&quot;);</div><div class="line">		else cout &lt;&lt; ans &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="GCAC"><a href="#GCAC" class="headerlink" title="GCAC"></a>GCAC</h1><p>模拟<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">1234</span>;</div><div class="line"><span class="keyword">int</span> T, n, m;</div><div class="line"><span class="keyword">int</span> q[MaxN][MaxN], os[MaxN], mjo[MaxN], chk[MaxN], ms[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, T = inp();</div><div class="line">	<span class="keyword">while</span>(T--) &#123;</div><div class="line">		<span class="built_in">memset</span>(chk, <span class="number">0</span>, <span class="keyword">sizeof</span>(chk));</div><div class="line">		n = inp(); m = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) ms[i] = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) os[i] = inp(), mjo[i] = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">			<span class="keyword">char</span> ch[MaxN]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>, ch + <span class="number">1</span>);</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++) q[i][j] = ch[j] - <span class="string">'0'</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		LL ans = <span class="number">0</span>, can = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">			<span class="keyword">int</span> cp = <span class="number">0</span>, cv = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++)</div><div class="line">				<span class="keyword">if</span>(q[i][j]) </div><div class="line">					<span class="keyword">if</span>(os[j] &gt;= ms[i] &amp;&amp; mjo[j]  &gt; chk[j])</div><div class="line">						<span class="keyword">if</span>(os[j] &gt; cv) </div><div class="line">							cv = os[j], cp = j;</div><div class="line">			<span class="keyword">if</span>(cp) &#123;</div><div class="line">				++can;</div><div class="line">				chk[cp]++;</div><div class="line">				ans += cv;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> dot = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++)</div><div class="line">			dot += !chk[i];</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; can &lt;&lt; <span class="string">" "</span> &lt;&lt; ans &lt;&lt; <span class="string">" "</span> &lt;&lt; dot &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="CHEFFA"><a href="#CHEFFA" class="headerlink" title="CHEFFA"></a>CHEFFA</h1><p>简单的 $O(n^4)$ dp, 注意到若 $f(i)$ 为 $i$ 打的次数， 明显 $f(i) \le a(i) + f(i - 2) - f(i - 1)$，然后dp即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">66</span>, MaxSp = MaxN &lt;&lt; <span class="number">1</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1000000007</span>; </div><div class="line"><span class="keyword">int</span> n, a[MaxN];</div><div class="line"><span class="keyword">int</span> f[MaxSp][MaxSp][MaxSp];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k, T = inp();</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		n = inp();</div><div class="line">		<span class="built_in">memset</span>(f, <span class="number">0</span>, <span class="keyword">sizeof</span>(f));</div><div class="line">		<span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp();</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> m = MaxSp - <span class="number">1</span>;</div><div class="line">		f[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt;= m; j++)</div><div class="line">				<span class="keyword">for</span>(k = <span class="number">0</span>; k &lt;= m; k++)</div><div class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; l &lt;= a[i + <span class="number">1</span>] + k - j; l++)</div><div class="line">						f[i + <span class="number">1</span>][l][j] = (f[i + <span class="number">1</span>][l][j] + f[i][j][k]) % P;</div><div class="line">		<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</div><div class="line">				ans = (ans + f[m][i][j]) % P;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;					 </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="STRINGRA"><a href="#STRINGRA" class="headerlink" title="STRINGRA"></a>STRINGRA</h1><p>观察题目性质， 复杂的条件本质上是 $[\mathrm{pre_i}, i - 1] \to i$, $\mathrm{pre}_i$ 表示 $a_i$ 前一次出现的位置。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m;</div><div class="line"><span class="keyword">int</span> mark[MaxN], deg[MaxN], lst[MaxN];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[MaxN], a, g[MaxN]; </div><div class="line">priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt; &gt; pq;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j; </div><div class="line">	<span class="built_in">memset</span>(deg, <span class="number">0</span>, <span class="keyword">sizeof</span>(deg));</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) g[i].clear();</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">		a.clear();</div><div class="line">		<span class="keyword">int</span> chk = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> p : e[i]) &#123;</div><div class="line">			<span class="keyword">if</span>(p == i - <span class="number">1</span>) chk = <span class="number">0</span>;</div><div class="line">			a.push_back(p);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(chk) &#123;</div><div class="line">			<span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		sort(a.begin(), a.end());</div><div class="line">		<span class="keyword">int</span> u = a[<span class="number">0</span>], v = a[a.size() - <span class="number">1</span>];</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(v != i - <span class="number">1</span>) &#123;</div><div class="line">			<span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(v - u + <span class="number">1</span> != a.size()) &#123;</div><div class="line">			<span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;  </div><div class="line">		lst[i] = u;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> bd = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) </div><div class="line">		<span class="keyword">if</span>(lst[i])	</div><div class="line">			deg[i] = deg[lst[i]];</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			deg[i] = ++bd;</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">		<span class="keyword">int</span> L = lst[i];</div><div class="line">		<span class="keyword">for</span>(j = L + <span class="number">1</span>; j &lt; i; j++)</div><div class="line">			<span class="keyword">if</span>(deg[j] == deg[i]) &#123;</div><div class="line">				<span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, deg[i]); <span class="built_in">puts</span>(<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, T = inp();</div><div class="line">	<span class="keyword">while</span>(T--) &#123;</div><div class="line">		n = inp(); m = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) e[i].clear();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) &#123;</div><div class="line">			<span class="keyword">int</span> u = inp(), v = inp();</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		solve();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="HILLJUMP"><a href="#HILLJUMP" class="headerlink" title="HILLJUMP"></a>HILLJUMP</h1><p>题目要求的东西不太好维护， 考虑分块<del>其实成都第七分块中学的wxh告诉我的时候我还不信</del></p>
<p>维护每个点的后继(跳一步到达的点)， 每个点在块内多次跳跃能到达的最右点。查询的时候就通过这些信息来模拟跳跃， 复杂度 $O(\sqrt n)$</p>
<p>注意到区间修改不会改变大部分块内信息，设 $l$ 所在块标号为 $A$, $r$ 所在块标号为 $B$, 只需要把 $A - 1, A, B - 1, B$ 拿出来重构即可， 注意到超过 $100$ 距离的点跳不到， 所以只需要暴力扩展块外 $100$ 个点。复杂度 $O(\sqrt n + 100)$</p>
<p>总复杂度 $O(q(\sqrt n + 100))$</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>, MaxB = <span class="number">300</span>, Lim = <span class="number">100</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m, q, L[MaxN], R[MaxN], bel[MaxN];</div><div class="line"><span class="keyword">int</span> s[MaxN], sn, suc[MaxN], len[MaxN], far[MaxN];</div><div class="line"></div><div class="line">LL a[MaxN], h[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> p, K;</div><div class="line">	p = inp(); K = inp();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(;;) &#123;</div><div class="line">		<span class="keyword">if</span>(suc[p] == p) <span class="keyword">return</span> p;</div><div class="line">		p = suc[p];</div><div class="line">		<span class="keyword">if</span>(! --K) <span class="keyword">return</span> p;</div><div class="line">		<span class="keyword">if</span>(K &gt; len[p]) </div><div class="line">			K -= len[p], p = far[p];</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">for</span>(; K--; p = suc[p]); <span class="keyword">return</span> p;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">reb</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, np; LL p = h[x];</div><div class="line">	<span class="keyword">for</span>(i = L[x]; i &lt;= R[x]; i++) &#123;</div><div class="line">		<span class="keyword">while</span>(np = s[sn], (sn &amp;&amp; a[np] &lt; a[i]))			</div><div class="line">			suc[np] = i, --sn;</div><div class="line">		s[++sn] = i;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = R[x] + <span class="number">1</span>; i &lt;= n &amp;&amp; i &lt;= R[x] + Lim; i++)</div><div class="line">		<span class="keyword">while</span>(np = s[sn], (sn &amp;&amp; a[np] + p &lt; a[i] + h[bel[i]]))</div><div class="line">			suc[np] = i, --sn;</div><div class="line">	<span class="keyword">for</span>(; sn; suc[s[sn--]] = n + Lim + <span class="number">1</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = L[x]; i &lt;= R[x]; i++) </div><div class="line">		<span class="keyword">if</span>(i + Lim &lt; suc[i]) suc[i] = i;</div><div class="line">		</div><div class="line">	<span class="keyword">for</span>(i = R[x]; i &gt;= L[x]; i--) &#123;</div><div class="line">		<span class="keyword">int</span> o = (suc[i] &lt;= R[x] &amp;&amp; suc[i] != i);</div><div class="line">		far[i] = o ? far[suc[i]] : i;</div><div class="line">		len[i] = o ? len[suc[i]] + <span class="number">1</span> : <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> l, r, x, i;</div><div class="line">	l = inp(); r = inp(); x = inp();</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> A = bel[l], B = bel[r];</div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(A == B) &#123;</div><div class="line">		<span class="keyword">for</span>(i = l; i &lt;= r; i++) a[i] += x;</div><div class="line">		reb(B); reb(B - <span class="number">1</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = l; i &lt;= R[A]; i++) a[i] += x;</div><div class="line">	<span class="keyword">for</span>(i = L[B]; i &lt;= r; i++) a[i] += x;</div><div class="line">	<span class="keyword">for</span>(i = A + <span class="number">1</span>; i &lt; B; i++) h[i] += x;</div><div class="line">	reb(A); <span class="keyword">if</span>(A &gt; <span class="number">1</span>) reb(A - <span class="number">1</span>); </div><div class="line">	reb(B); <span class="keyword">if</span>(B &gt; <span class="number">1</span>) reb(B - <span class="number">1</span>); </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	n = inp(); q = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">		bel[i] = (i - <span class="number">1</span>) / MaxB + <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(bel[i] != bel[i - <span class="number">1</span>]) &#123;</div><div class="line">			R[bel[i - <span class="number">1</span>]] = i - <span class="number">1</span>;</div><div class="line">			L[bel[i]] = i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	m = bel[n]; R[m] = n;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++)  reb(i);</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(q--) &#123;</div><div class="line">		<span class="keyword">if</span>(inp() == <span class="number">1</span>) </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, jump());</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			modify();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="WALKBT"><a href="#WALKBT" class="headerlink" title="WALKBT"></a>WALKBT</h1><p>首先我们考虑暴力，维护一个 $x$ 的有序表，答案就是 $n * \mathrm{cnt} - \sum_{i = 1} ^ {n - 1} \mathrm{lcp}(i, i + 1)$, $cnt$ 是有序表大小</p>
<p>那么考虑怎么维护有序表， 有序的基础是比较， 比较两个串，我们可以使用倍增+hash求出lcp， 然后比较下一位的大小注意到倍增不太好拓展，我们把他变成线段树。</p>
<p>我们注意到$x += 2^C$ ，虽然说会有进位，但是进位的总数是 $O(q)$ 的，于是我们利用可持久化线段树暴力的进行单点修改来维护串， 这样可以方便的比较大小，维护有序表时拿个set把每个串对应的root放进去即可。 </p>
<p>插入的时候根据 $x$ 前后串来更新 $\sum\mathrm{lcp}$即可。时间复杂度 $O(q\log^2n)$, 空间复杂度 $O(n\log n)$</p>
<p>这题还卡哈希，不能写自然溢出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">401234</span>, MaxM = <span class="number">40</span> * MaxN;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, q, cnt, fake; LL ex;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_op</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">char</span> op[<span class="number">3</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>, op);</div><div class="line">	<span class="keyword">return</span> (op[<span class="number">0</span>] == <span class="string">'?'</span>) + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed = <span class="number">23</span>;</div><div class="line"><span class="keyword">int</span> pc, rot[MaxN &lt;&lt; <span class="number">1</span>], ls[MaxM], rs[MaxM], v[MaxM];</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P1 = <span class="number">1e9</span> + <span class="number">9</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P2 = <span class="number">1e9</span> + <span class="number">7</span>;</div><div class="line"></div><div class="line">LL sum1[MaxM], sum2[MaxM], pr1[MaxN], pr2[MaxN]; </div><div class="line"></div><div class="line"><span class="keyword">int</span> s[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> &amp;x, <span class="keyword">int</span> y, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p)</span> </span>&#123;</div><div class="line">	x = ++pc;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(l == r) &#123;</div><div class="line">		sum1[x] = (s[n - p + <span class="number">1</span>] ? pr1[n - p + <span class="number">1</span>] : <span class="number">0</span>);</div><div class="line">		sum2[x] = (s[n - p + <span class="number">1</span>] ? pr2[n - p + <span class="number">1</span>] : <span class="number">0</span>);</div><div class="line">		</div><div class="line">		v[x] = s[n - p + <span class="number">1</span>];</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	ls[x] = ls[y]; rs[x] = rs[y];</div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(p &lt;= l + r &gt;&gt; <span class="number">1</span>) </div><div class="line">		modify(ls[x], ls[y], l, l + r &gt;&gt; <span class="number">1</span>, p);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		modify(rs[x], rs[y], (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r, p);</div><div class="line">		</div><div class="line">	sum1[x] = (sum1[ls[x]] + sum1[rs[x]]) % P1;</div><div class="line">	sum2[x] = (sum2[ls[x]] + sum2[rs[x]]) % P2;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">equal</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</div><div class="line">	LL u1 = sum1[x], v1 = sum1[y];</div><div class="line">	LL u2 = sum2[x], v2 = sum2[y];</div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(l == r) <span class="keyword">return</span> u1 == v1 &amp;&amp; u2 == v2;</div><div class="line">	</div><div class="line">	u1 = sum1[ls[x]]; v1 = sum1[ls[y]];</div><div class="line">	u2 = sum2[ls[x]]; v2 = sum2[ls[y]];</div><div class="line">	<span class="keyword">if</span>(u1 == v1 &amp;&amp; u2 == v2) </div><div class="line">		<span class="keyword">return</span> (l + r &gt;&gt; <span class="number">1</span>) - l + <span class="number">1</span> + equal(rs[x], rs[y], (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="keyword">return</span> equal(ls[x], ls[y], l, l + r &gt;&gt; <span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">chk</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span>(l == r) <span class="keyword">return</span> v[x];</div><div class="line">	<span class="keyword">if</span>(p &lt;= l + r &gt;&gt; <span class="number">1</span>)</div><div class="line">		<span class="keyword">return</span> chk(ls[x], l, l + r &gt;&gt; <span class="number">1</span>, p);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="keyword">return</span> chk(rs[x], (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r, p);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">atom</span> &#123;</span> <span class="keyword">int</span> rot;&#125;;</div><div class="line"></div><div class="line"><span class="built_in">set</span>&lt;atom&gt;st;</div><div class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (atom a, atom b) &#123;</div><div class="line">	<span class="keyword">int</span> u = a.rot, v = b.rot;</div><div class="line">	<span class="keyword">int</span> lcp = equal(rot[u], rot[v], <span class="number">1</span>, n);</div><div class="line">	<span class="keyword">if</span>(lcp == n) <span class="keyword">return</span> u &lt; v;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> chk(rot[u], <span class="number">1</span>, n, lcp + <span class="number">1</span>) &lt; chk(rot[v], <span class="number">1</span>, n, lcp + <span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">and_one</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> p = inp() + <span class="number">1</span>, lcp, i; </div><div class="line">	++cnt;</div><div class="line">	<span class="keyword">while</span>(p &lt;= n &amp;&amp; s[p])&#123;</div><div class="line">		s[p] = <span class="number">0</span>;</div><div class="line">		modify(rot[fake + <span class="number">1</span>], rot[fake], <span class="number">1</span>, n, n - p + <span class="number">1</span>); </div><div class="line">		++p; ++fake;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(p &lt;= n) &#123;</div><div class="line">		s[p] = <span class="number">1</span>;</div><div class="line">		modify(rot[fake + <span class="number">1</span>], rot[fake], <span class="number">1</span>, n, n - p + <span class="number">1</span>); ++fake;</div><div class="line">	&#125;	</div><div class="line">	atom ins; ins.rot = fake;</div><div class="line">	<span class="built_in">set</span>&lt;atom&gt; :: iterator nxt = st.upper_bound(ins);</div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(nxt != st.begin()) &#123;</div><div class="line">		<span class="built_in">set</span> &lt;atom&gt; :: iterator pre = --st.upper_bound(ins);</div><div class="line">		ex += equal(rot[ins.rot], rot[pre -&gt; rot], <span class="number">1</span>, n);</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(nxt != st.end()) </div><div class="line">			ex -= equal(rot[pre -&gt; rot], rot[nxt -&gt; rot], <span class="number">1</span>, n);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(nxt != st.end())</div><div class="line">		ex += equal(rot[ins.rot], rot[nxt -&gt; rot], <span class="number">1</span>, n);</div><div class="line">	</div><div class="line">	st.insert(ins);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">LL <span class="title">query</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> (LL)	cnt * n - ex + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k;</div><div class="line">	cnt = fake = ex = <span class="number">0</span>;</div><div class="line">	n = inp(); q = inp();</div><div class="line">	<span class="keyword">while</span>(q--) </div><div class="line">		<span class="keyword">if</span>(get_op() == <span class="number">1</span>)</div><div class="line">			and_one();</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, query());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> T = inp(), i;</div><div class="line">	<span class="keyword">for</span>(pr1[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt; MaxN; i++) pr1[i] = (LL) pr1[i - <span class="number">1</span>] * seed % P1;</div><div class="line">	<span class="keyword">for</span>(pr2[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt; MaxN; i++) pr2[i] = (LL) pr2[i - <span class="number">1</span>] * seed % P2;</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(T--) &#123;</div><div class="line">		pc = <span class="number">0</span>;</div><div class="line">		st.clear();</div><div class="line">		<span class="built_in">memset</span>(s, <span class="number">0</span>, <span class="keyword">sizeof</span>(s));</div><div class="line">		solve();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="FLOWERPO"><a href="#FLOWERPO" class="headerlink" title="FLOWERPO"></a>FLOWERPO</h1><p>他会蹦跶到一侧然后通过某个大圆蹦跶回左边 大力斜率优化一下即可。//结论早猜了但是因为比较忙编不下去了反正赛时没写。。。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"1"</span>), <span class="number">0</span>;	</div><div class="line">	<span class="keyword">int</span> i, j, k, p;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= b; i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) f[i][j] = g[i][j] = inf; </div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) f[<span class="number">0</span>][i] = inf;</div><div class="line">	f[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= b; i++) </div><div class="line">		<span class="keyword">for</span>(f[i][<span class="number">1</span>] = <span class="number">0</span>, j = <span class="number">2</span>; j &lt;= n; j++)</div><div class="line">			<span class="keyword">for</span>(f[i][j] = sqr(a[j] - a[<span class="number">1</span>]), p = <span class="number">1</span>; p &lt; j; p++)</div><div class="line">				cmin(f[i][j], f[i - <span class="number">1</span>][p] + sqr(a[p] - a[j]));</div><div class="line">				</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) g[<span class="number">0</span>][i] = inf;</div><div class="line">	g[<span class="number">0</span>][n] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= b; i++) </div><div class="line">		<span class="keyword">for</span>(g[i][n] = <span class="number">0</span>, j = n - <span class="number">1</span>; j; j--)</div><div class="line">			<span class="keyword">for</span>(g[i][j] = sqr(a[n] - a[j]), p = j + <span class="number">1</span>; p &lt;= n; p++)</div><div class="line">				cmin(g[i][j], g[i - <span class="number">1</span>][p] + sqr(a[p] - a[j]));</div><div class="line">				</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) h[<span class="number">0</span>][i] = inf;	</div><div class="line">	h[<span class="number">0</span>][c] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= b; i++)</div><div class="line">		<span class="keyword">for</span>(h[i][c] = <span class="number">0</span>, j = <span class="number">1</span>; j &lt;= n; j++) </div><div class="line">			<span class="keyword">for</span>(h[i][j] = sqr(a[c] - a[j]), p = <span class="number">1</span>; p &lt;= n; p++)</div><div class="line">				cmin(h[i][j], h[i - <span class="number">1</span>][p] + sqr(a[p] - a[j]));</div><div class="line">	</div><div class="line">	LL ans = inf;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">		<span class="keyword">for</span>(p = <span class="number">1</span>; p &lt;= b; p++) &#123;</div><div class="line">			dp[i] = inf;</div><div class="line">			<span class="keyword">for</span>(j = i, k = i; j; j--) &#123;</div><div class="line">				<span class="keyword">for</span>(; k &lt;= n &amp;&amp; <span class="built_in">abs</span>(a[j] - a[i]) &gt;= <span class="built_in">abs</span>(a[i] - a[k]); k++);</div><div class="line">				cmin(dp[i], f[p - <span class="number">1</span>][j] + g[p - <span class="number">1</span>][k - <span class="number">1</span>] + sqr(a[i] - a[j]));</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(j = k = i; k &lt;= n; k++) &#123;</div><div class="line">				<span class="keyword">for</span>(; j &amp;&amp; <span class="built_in">abs</span>(a[k] - a[i]) &gt;= <span class="built_in">abs</span>(a[i] - a[j]); j--);</div><div class="line">				cmin(dp[i], f[p - <span class="number">1</span>][j + <span class="number">1</span>] + g[p - <span class="number">1</span>][k] + sqr(a[i] -  a[k])); </div><div class="line">			&#125;</div><div class="line">			cmin(ans, h[b - p][i] + dp[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="MATDW-Challenge"><a href="#MATDW-Challenge" class="headerlink" title="MATDW (Challenge)"></a>MATDW (Challenge)</h1><p>出题人我 cnm</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大失败QAQ&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一道二合一数学题</title>
    <link href="http://yoursite.com/2017/08/05/%E4%B8%80%E9%81%93%E4%BA%8C%E5%90%88%E4%B8%80%E6%95%B0%E5%AD%A6%E9%A2%98/"/>
    <id>http://yoursite.com/2017/08/05/一道二合一数学题/</id>
    <published>2017-08-05T09:25:24.000Z</published>
    <updated>2017-08-06T12:30:52.742Z</updated>
    
    <content type="html"><![CDATA[<p>复习题</p>
<a id="more"></a>
<h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><ol>
<li>给 定 $n, K$, 求 $\sum_{i = 1} ^ {n} \mathrm{fib}(i) ^ K\pmod{10^9 + 9}$</li>
<li>设整数域上函数 $F(n)$ 满足 $\sum_{d|n} F(d) = 2n^2  - 3n + 3$, 求 $\sum_{i = 1} ^ {m} F(i)\pmod{10^9+7}$</li>
</ol>
<p>$n\leq 10^{18}, K\leq 10^6, m\leq 10^9$</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>然后其实这两问没有任何联系，只是他刚好被出在同一题里想复习点东西</p>
<h2 id="Q1"><a href="#Q1" class="headerlink" title="Q1"></a>Q1</h2><p>注意到 $\pmod {10^9 + 9}$ 意义下存在 $\sqrt 5$, 所以从通项公式入手</p>
<script type="math/tex; mode=display">\begin{aligned}
\sum_{i = 1} ^ {n} \mathrm{fib}(i) ^ K &= \sum_{i = 1} ^ {n} \frac{1}{\sqrt 5}^K ((\frac{1 + \sqrt 5}{2})^i -(\frac{1 - \sqrt 5}{2})^i)^K\\
a &= \frac{1 + \sqrt 5}{2}\\
b &= \frac{1 - \sqrt 5}{2}\\
\sum_{i = 1} ^ {n} (a^i - b^i) ^{K} &= \sum_{i = 1} ^ {n} \sum_{j = 0} ^ {K} {K\choose j}(-1)^ja^{i(K-j)} b^{ij}\\
&= \sum_{j = 0} ^ {K} (-1)^j{K\choose j}\sum_{i = 1} ^ {n} a^{i(K - j)} b^{ij}
\end{aligned}</script><p>注意到后面是个公比 $a^{-i}b^i$ 的等比数列，直接计算即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> rot = <span class="number">383008016</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> div = (P + <span class="number">1</span> &gt;&gt; <span class="number">1</span>); </div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> A = mul(<span class="number">1</span> + rot, div);</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> B = mul(P + <span class="number">1</span> - rot, div);</div><div class="line"></div><div class="line"><span class="keyword">int</span> fac[MaxN], rfac[MaxN], pA[MaxN], pB[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(LL n, <span class="keyword">int</span> K)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">for</span>(fac[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt;= K; i++) fac[i] = mul(fac[i - <span class="number">1</span>], i);</div><div class="line">	<span class="keyword">for</span>(rfac[K] = <span class="built_in">exp</span>(fac[K], P - <span class="number">2</span>), i = K; i; i--) rfac[i - <span class="number">1</span>] = mul(rfac[i], i);</div><div class="line">	<span class="keyword">for</span>(pA[<span class="number">0</span>] = <span class="number">1</span>, pB[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt;= K; i++) &#123;</div><div class="line">		pA[i] = mul(pA[i - <span class="number">1</span>], A);</div><div class="line">		pB[i] = mul(pB[i - <span class="number">1</span>], B);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= K; i++) &#123;</div><div class="line">		<span class="keyword">int</span> coff = mul(pA[K - i], pB[i]), ffoc;</div><div class="line">		<span class="keyword">if</span>(coff != <span class="number">1</span>) &#123;</div><div class="line">			ffoc = <span class="built_in">exp</span>(coff - <span class="number">1</span>, P - <span class="number">2</span>);</div><div class="line">			ffoc = mul(ffoc, coff);</div><div class="line">			ffoc = mul(ffoc, <span class="built_in">exp</span>(coff, n) - <span class="number">1</span>);</div><div class="line">		&#125; </div><div class="line">		<span class="keyword">else</span> </div><div class="line">			ffoc = n % P;</div><div class="line">		coff = mul(fac[K], mul(rfac[i], rfac[K - i]));</div><div class="line">		<span class="keyword">if</span>(i &amp; <span class="number">1</span>)</div><div class="line">			ans = sub(ans, mul(coff, ffoc));</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			ans = add(ans, mul(coff, ffoc));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> mul(ans, <span class="built_in">exp</span>(<span class="built_in">exp</span>(rot, P - <span class="number">2</span>), K));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Q2"><a href="#Q2" class="headerlink" title="Q2"></a>Q2</h2><p>设 $c(n) = 2n^2 - 3n + 3$, $S(n) = \sum_{i = 1}^{n} F(i)$</p>
<script type="math/tex; mode=display">\begin{aligned}
\sum_{d | n} F(d) &= c(n)\\
F(n) &= c(n) - \sum_{d|n, d < n} F(d)\\
S(n) &= \sum_{i = 1} ^ {n} f(i) = \sum_{i = 1} ^ {n} (c(i) - \sum_{d|i, d<i}F(i))\\
&=\sum_{i = 1} ^ {n} c(i) -\sum_{i = 2}^{n}\sum_{d|i, d<i} F(d)\\
\sum_{i = 2}^{n}\sum_{d|i, d<i} F(d) &= \sum_{\frac{i}{d} = 2} ^ {n} \sum_{d = 1} ^{\lfloor\frac{n}{\frac i d}\rfloor} F(d) = \sum_{i = 2} ^ {n}     \sum_{d = 1} ^ {\lfloor\frac{n}{i}\rfloor} F(d) = \sum_{i = 2} ^ {n} S(\lfloor\frac{n}{i}\rfloor)
\end{aligned}</script><p>注意到 $\sum_{d|n} F(n) = c(n)$, 可以反演得 $F(n) = \sum_{d|n}\mu(d) c(\frac{n}{d})$, 可以 $O(n\log n)$ 预处理前缀和得到</p>
<p>此时复杂度是 $O(K\log K + \frac{n}{\sqrt K})$ ， 如果和平时的杜教筛一样取值复杂度不优， 取 $10^5$ 可以获得很好的效果 </p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>, a = mul(a, a))</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) res = mul(res, a);</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> F[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> s2 = mul(mul(n, mul(n + <span class="number">1</span>, n * <span class="number">2</span> + <span class="number">1</span>)), <span class="number">166666668</span>);</div><div class="line">	<span class="keyword">int</span> s1 = ((LL) n * (n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>) % P;</div><div class="line">	s2 = add(s2, s2);</div><div class="line">	s1 = mul(s1, <span class="number">3</span>);</div><div class="line">	<span class="keyword">return</span> add(sub(s2, s1), mul(<span class="number">3</span>, n)); </div><div class="line">&#125; </div><div class="line"><span class="comment">//map&lt;int,int&gt;g;</span></div><div class="line"><span class="keyword">int</span> g[MaxN];</div><div class="line"><span class="keyword">int</span> N;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">Du</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span>(n &lt; MaxN) <span class="keyword">return</span> F[n];</div><div class="line">	<span class="keyword">int</span> &amp;G = g[N/n]; </div><div class="line">	<span class="keyword">if</span>(G) <span class="keyword">return</span> G;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> ans = C(n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>, j; i &lt;= n; i = j + <span class="number">1</span>) &#123;</div><div class="line">		j = n/(n/i);</div><div class="line">		ans = sub(ans, mul(Du(n/i), j - i + <span class="number">1</span>));</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> G = ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j; N = n;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; MaxN; i++) F[i] = ((LL)i*i*<span class="number">2</span> - <span class="number">3</span>*i + <span class="number">3</span>) % P; </div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; MaxN; i++)</div><div class="line">		<span class="keyword">for</span>(j = i + i; j &lt; MaxN; j += i) </div><div class="line">			F[j] = sub(F[j], F[i]);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; MaxN; i++) F[i] = add(F[i], F[i - <span class="number">1</span>]);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; MaxN; i++) F[i] &lt; <span class="number">0</span> ? F[i] += P : <span class="number">0</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> Du(n);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复习题&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BZOJ 4574 [ZJOI 2016] 线段树 Solution</title>
    <link href="http://yoursite.com/2017/08/04/BZOJ-4574-ZJOI-2016-%E7%BA%BF%E6%AE%B5%E6%A0%91-Solution/"/>
    <id>http://yoursite.com/2017/08/04/BZOJ-4574-ZJOI-2016-线段树-Solution/</id>
    <published>2017-08-04T08:11:08.000Z</published>
    <updated>2017-08-04T09:34:06.980Z</updated>
    
    <content type="html"><![CDATA[<p>常数、复杂度</p>
<a id="more"></a>
<h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p>给定一个长度为 $n$ 的序列 $a_0 \ldots a_{n - 1}$</p>
<p>有一种操作是等概率的在所有 $\frac{n(n+1)}{2}$ 个区间内选出一个， 并将区间内的所有数都改成区间最大值</p>
<p>求对每个位置， 所有方案中最终的权值的和</p>
<p>$n \le 500, a_i\le 10^9$ , 且 $a_i$ <strong>均为随机生成</strong></p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="算法1"><a href="#算法1" class="headerlink" title="算法1"></a>算法1</h2><p>我们来大胆的设一个 $O(n^4)$ 的状态 </p>
<p>$f(i, x, l, r)$ 表示 $i$ 步后使得 $a_l \ldots a_{r - 1}$ 均 $&lt;= x$， 且$a_{l - 1} &gt; x, a_{r} &gt; x$ 的方案数</p>
<p>记本次操作的区间为 $[L, R]$</p>
<p>注意到在$[L, R] \in [0, l - 1] \cup [l, r - 1] \cup [r, n - 1]$ 的时候状态不会发生变化。所以 $f(i, x, l, r)$ 可以转移到 $f(i + 1, x, l, r)$， 系数是 ${l\choose 2} + {r - l\choose 2} + {n - r\choose 2}$</p>
<p>并且由于这个区间整个都是 $\le x$ 的， 所以任何从 $L \in [0, l - 1]$ 到 $R \in [l, r - 1]$ 的区间操作， 都会破坏状态中对的 $l, r$ 的定义， 那么此时 $f(i, x, l, r)$ 可以转移到 $f(i + 1, x, R, r)$ , 且系数为 $l$</p>
<p>同理的 $f(i, x, l, r)$ 可以转移到 $f(i + 1, x, l, L)$, 系数是 $n - r$</p>
<p>覆盖整个区间的操作也会影响</p>
<p>设 $g(x, i)$ 表示位置 $i$ 最终 $ &lt; x$ 的方案数， 那么位置 $i$ 的答案就是$\sum_{x} x(g(x, i) - g(x - 1, i))$, 其中 $g(x, i)$ 可以根据 $f$ 来推出。</p>
<p>然后我们来证明一下复杂度。设 $a_i$ 左最远的 $\le a_i$ 的位置为 $L_i$，右边最近的 $&gt; a_i$ 的位置是 $R_i$  从大到小取出所有的 $L_i, R_i$.</p>
<p>对于 $n$ 个随机数， 其中第 $i$ 个数最大的概率为 $\frac{1}{n}$</p>
<p>那么总的状态数就是 $q\sum_{i = 1}^{n} \sum_{j = 2} ^ {i} j^2\frac{1}{j}(\prod_{k = 2}^{j - 2}\frac{k - 1}{k})$</p>
<p>闭上眼睛感受一下就是 $O(n^2q)$，转移利用前缀和可以做到 $O(1)$  </p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">666</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1000000007</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> add(a, b) (a + b) % P</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> sub(a, b) (a - b + P) % P</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> mul(a, b) ((LL) a * b % P)</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m, a[MaxN], c[MaxN], p[MaxN], v[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> a[x] &lt; a[y];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>, a = mul(a, a))</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) </div><div class="line">			res = mul(res, a);</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> f[MaxN][MaxN], ans[MaxN], sum[MaxN]; LL g[MaxN][MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">register</span> <span class="keyword">int</span> i, o, j, k;</div><div class="line"> 	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; MaxN; i++) c[i] = ((LL) i * (i + <span class="number">1</span>) &gt;&gt; <span class="number">1</span> )% P;</div><div class="line">	</div><div class="line">	n = inp(); m = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) a[i] = inp(), p[i] = i;</div><div class="line">	sort(p, p + n, cmp);</div><div class="line">	<span class="keyword">for</span>(o = <span class="number">0</span>; o &lt; n; o++)&#123;</div><div class="line">		<span class="keyword">int</span> x = p[o], l, r; v[x] = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(l = x; l &gt; <span class="number">0</span> &amp;&amp; v[l - <span class="number">1</span>]; --l);</div><div class="line">		<span class="keyword">for</span>(r = x; r &lt; n &amp;&amp; v[r]; ++r);</div><div class="line">		<span class="keyword">for</span>(i = l; i &lt;= r; i++)</div><div class="line">			<span class="keyword">for</span>(j = i; j &lt;= r; j++)</div><div class="line">				f[i][j] = <span class="number">0</span>;</div><div class="line">		f[l][r] = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; m; k++)&#123; 	</div><div class="line">			<span class="keyword">for</span>(i = l; i &lt;= r; i++)</div><div class="line">				<span class="keyword">for</span>(j = i; j &lt;= r; j++)</div><div class="line">					g[i][j] = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(i = l; i &lt;= r; i++)&#123;</div><div class="line">				<span class="keyword">for</span>(j = i; j &lt;= r; j++)</div><div class="line">					<span class="keyword">if</span>(f[i][j])&#123;</div><div class="line">						g[i][j] += (LL)f[i][j] * (c[i] + c[j - i] + c[n - j]);</div><div class="line">						g[l][l] += (LL)f[i][j] * i * (n - j);</div><div class="line">					&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(i = l; i &lt;= r; i++)&#123;</div><div class="line">				<span class="keyword">register</span> LL co = <span class="number">0</span>;</div><div class="line">				<span class="keyword">for</span>(j = r; j &gt;= i; j--)&#123; </div><div class="line">					g[i][j] += co;</div><div class="line">					<span class="keyword">if</span>(f[i][j])</div><div class="line">						co += (LL) f[i][j] * (n - j);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(i = l; i &lt;= r; i++)&#123;</div><div class="line">				<span class="keyword">register</span> LL co = <span class="number">0</span>;</div><div class="line">				<span class="keyword">for</span>(j = l; j &lt;= i; j++)&#123;</div><div class="line">					g[j][i] += co;</div><div class="line">					<span class="keyword">if</span>(f[j][i])</div><div class="line">						co += (LL) f[j][i] * j;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(i = l; i &lt;= r; i++)</div><div class="line">				<span class="keyword">for</span>(j = i; j &lt;= r; j++)</div><div class="line">					f[i][j] = g[i][j] % P;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(i = l; i &lt; r; i++) </div><div class="line">			ans[i] = (ans[i] - (LL)sum[i] * a[x]) % P, sum[i] = <span class="number">0</span>;</div><div class="line">			</div><div class="line">		<span class="keyword">for</span>(i = l; i &lt;= r; i++)</div><div class="line">			<span class="keyword">for</span>(j = i; j &lt;= r; j++)</div><div class="line">				<span class="keyword">if</span>(f[i][j])</div><div class="line">					<span class="keyword">for</span>(k = i; k &lt; j; k++)</div><div class="line">						sum[k] = add(sum[k], f[i][j]);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = l; i &lt; r; i++) </div><div class="line">			ans[i] = (ans[i] + (LL)sum[i] * a[x]) % P;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> iv = <span class="number">1</span></div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i], <span class="string">" \n"</span>[i == n - <span class="number">1</span>]); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="算法2"><a href="#算法2" class="headerlink" title="算法2"></a>算法2</h2><p>算法1难写难调，还容易被卡常数，怎么办？ 注意到上面我们应用到了数列随机这个性质， 现在我们放弃这个性质，转而寻求通解</p>
<p>注意到所有的转移都和 $x$ 无关，那么我们把 $x$ 这一维吞掉。 将这个式子 $ans_i = \sum_{x} x(g(x, i) - g(x - 1, i))$ 展开, 方便书写这里把 $i$ 吞掉， 并且设 $a_1 = a_{n + 1} = \infty$，最后答案中 $\infty$ 的贡献不计</p>
<script type="math/tex; mode=display">\begin{aligned}
ans_i &= \sum_{x \ge 1} x(g_x - g_{x-1})\\
&= \sum_{x \ge 1} xg_x - (x + 1) g_x \\
&= \sum_{x \ge 1} -g_x
\end{aligned}</script><p>这里恰好忽略的$x \to \infty$ 的情况，这样所有的 $x$ 就可以合并在一起转移，此时复杂度为严格 $O(n^2q)$ , 初始值自己yy一下就行了</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> n, m, a[MaxN], p[MaxN], c[MaxN], co[MaxN][MaxN];</div><div class="line"><span class="keyword">int</span> f[<span class="number">2</span>][MaxN][MaxN];</div><div class="line"><span class="keyword">int</span> p1[<span class="number">2</span>][MaxN][MaxN], p2[<span class="number">2</span>][MaxN][MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k;</div><div class="line">	</div><div class="line">	n = inp(); m = inp(); a[<span class="number">0</span>] = a[n + <span class="number">1</span>] = ~<span class="number">0U</span> &gt;&gt; <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp(), p[i] = i;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; MaxN; i++) c[i] = (LL)(i * (i + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>) % P;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(j = i; j &lt;= n; j++)</div><div class="line">			co[i][j] = (<span class="number">0l</span>l + c[i - <span class="number">1</span>] + c[n - j] + c[j - i + <span class="number">1</span>]) % P;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">		<span class="keyword">int</span> q = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j = i; j &lt;= n; j++)&#123;</div><div class="line">			cmax(q, a[j]);</div><div class="line">			<span class="keyword">if</span>(i &gt; <span class="number">1</span> || j &lt; n)&#123;</div><div class="line">				<span class="keyword">if</span>(a[i - <span class="number">1</span>] &gt; q &amp;&amp; a[j + <span class="number">1</span>] &gt; q)</div><div class="line">					f[<span class="number">0</span>][i][j] = (q - min(a[i - <span class="number">1</span>], a[j + <span class="number">1</span>]) + P) % P;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				f[<span class="number">0</span>][i][j] = q;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> o = <span class="number">1</span>; o &lt;= m; o++)&#123;</div><div class="line">		<span class="comment">//int u = ~o &amp; 1;</span></div><div class="line">		<span class="comment">//int v = o &amp; 1;</span></div><div class="line">		<span class="keyword">int</span> (*p2u)[MaxN] = p2[~ o &amp; <span class="number">1</span>];</div><div class="line">		<span class="keyword">int</span> (*p1u)[MaxN] = p1[~ o &amp; <span class="number">1</span>];</div><div class="line">		<span class="keyword">int</span> (*fu)[MaxN] = f[~ o &amp; <span class="number">1</span>];</div><div class="line">		<span class="keyword">int</span> (*fv)[MaxN] = f[o &amp; <span class="number">1</span>];</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">			<span class="keyword">for</span>(j = n; j &gt;= i; j--)</div><div class="line">				p2u[i][j] = (p2u[i][j + <span class="number">1</span>] + (LL) fu[i][j] * (n - j)) % P;</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">			<span class="keyword">for</span>(j = i; j &lt;= n; j++)&#123;</div><div class="line">				p1u[i][j] =(p1u[i - <span class="number">1</span>][j] + (LL) fu[i][j] *(i - <span class="number">1</span>)) % P;</div><div class="line">				fv[i][j] = ((LL)fu[i][j] * co[i][j] + p1u[i - <span class="number">1</span>][j] + p2u[i][j + <span class="number">1</span>]) % P;	</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> iv = <span class="built_in">exp</span>(<span class="built_in">exp</span>(c[n], m), P - <span class="number">2</span>);</div><div class="line">	<span class="keyword">int</span> (*fm)[MaxN] = f[m &amp; <span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">		<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= i; j++)</div><div class="line">			<span class="keyword">for</span>(k = i; k &lt;= n; k++)</div><div class="line">				ans = add(ans, fm[j][k]);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans, <span class="string">" \n"</span>[i == n]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><del>ZJOI的题真tm可怕</del></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常数、复杂度&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017 Multi-University Training Contest 3 solutions</title>
    <link href="http://yoursite.com/2017/08/01/2017-Multi-University-Training-Contest-3-solutions/"/>
    <id>http://yoursite.com/2017/08/01/2017-Multi-University-Training-Contest-3-solutions/</id>
    <published>2017-08-01T09:42:43.000Z</published>
    <updated>2017-08-02T12:23:17.012Z</updated>
    
    <content type="html"><![CDATA[<p>8/11 被zzq吊打了3h的罚时</p>
<a id="more"></a>
<p>先写自己做的几题， 其他再说</p>
<h1 id="01"><a href="#01" class="headerlink" title="01"></a>01</h1><h1 id="02"><a href="#02" class="headerlink" title="02"></a>02</h1><h1 id="03"><a href="#03" class="headerlink" title="03"></a>03</h1><p>注意到 $K$ 很小，所以拿个链表串起来就行了， 每次暴力跳$K$ 步， 这样复杂度就是 $O(n\log n + nK)$<br>//code by liouzhou_101<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">500010</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1000000007</span>;</div><div class="line"></div><div class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll p)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    ll t=power(a,b&gt;&gt;<span class="number">1</span>,p);</div><div class="line">    t=t*t%p;</div><div class="line">    <span class="keyword">if</span> (b&amp;<span class="number">1</span>) t=t*a%p;</div><div class="line">    <span class="keyword">return</span> t;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, k;</div><div class="line">pii a[MAXN];</div><div class="line"><span class="keyword">int</span> pre[MAXN], nxt[MAXN];</div><div class="line"><span class="keyword">int</span> buf[MAXN];</div><div class="line"><span class="keyword">int</span> *u = buf+<span class="number">250000</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</div><div class="line">    <span class="keyword">while</span> (T --)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> x;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</div><div class="line">            a[i] = pii(x, i);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n+<span class="number">1</span>; ++ i)</div><div class="line">        &#123;</div><div class="line">            pre[i] = <span class="number">0</span>;</div><div class="line">            nxt[i] = n+<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        sort(a+<span class="number">1</span>, a+n+<span class="number">1</span>, greater&lt;pii&gt;());</div><div class="line">        <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; H;</div><div class="line">        ll ans = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">auto</span> it = H.insert(a[i].Y).X;</div><div class="line">            <span class="keyword">auto</span> itx = it, ity = it;</div><div class="line">            <span class="keyword">if</span> (itx != H.begin())</div><div class="line">                u[<span class="number">-1</span>] = *-- itx;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                u[<span class="number">-1</span>] = <span class="number">0</span>;</div><div class="line">            ++ ity;</div><div class="line">            <span class="keyword">if</span> (ity != H.end())</div><div class="line">                u[<span class="number">1</span>] = *ity;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                u[<span class="number">1</span>] = n+<span class="number">1</span>;</div><div class="line">            pre[a[i].Y] = u[<span class="number">-1</span>];</div><div class="line">            nxt[a[i].Y] = u[<span class="number">1</span>];</div><div class="line">            nxt[u[<span class="number">-1</span>]] = a[i].Y;</div><div class="line">            pre[u[<span class="number">1</span>]] = a[i].Y;</div><div class="line">            u[<span class="number">0</span>] = *it;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">1</span>; d &lt;= k; ++ d)</div><div class="line">            &#123;</div><div class="line">                u[-d] = pre[u[-d+<span class="number">1</span>]];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">1</span>; d &lt;= k; ++ d)</div><div class="line">            &#123;</div><div class="line">                u[d] = nxt[u[d<span class="number">-1</span>]];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">0</span>; d &lt; k; ++ d)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">int</span> L = -d, R = k<span class="number">-1</span>-d;</div><div class="line">                <span class="keyword">if</span> (u[L] == <span class="number">0</span> || u[R] == n+<span class="number">1</span>) <span class="keyword">continue</span>;</div><div class="line">                ans += (ll)(u[L]-u[L<span class="number">-1</span>])*(u[R+<span class="number">1</span>]-u[R])*a[i].X;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, ans);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="04"><a href="#04" class="headerlink" title="04"></a>04</h1><p>前缀拿个 $30n$ 的数组记下， 后缀拿个插了 $n$ 个数的trie, 每次删除一个来维护。 这样就是 $O(30n)$<br>// code by liouzhou_101<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">500010</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXK = <span class="number">30</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> node_cnt;</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></div><div class="line">&#123;</div><div class="line">    node *son[<span class="number">2</span>];</div><div class="line">    <span class="keyword">int</span> tot;</div><div class="line">&#125;tree[MAXN*MAXK*<span class="number">2</span>];</div><div class="line"></div><div class="line">node *nil = tree;</div><div class="line"></div><div class="line"><span class="function">node *<span class="title">new_node</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    node *it = &amp;tree[++ node_cnt];</div><div class="line">    it-&gt;son[<span class="number">0</span>] = it-&gt;son[<span class="number">1</span>] = nil;</div><div class="line">    it-&gt;tot = <span class="number">0</span>;</div><div class="line">    <span class="keyword">return</span> it;</div><div class="line">&#125;</div><div class="line"></div><div class="line">node *root[MAXN];</div><div class="line"></div><div class="line"><span class="function">node *<span class="title">add</span><span class="params">(node *r, <span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">    node *it = new_node();</div><div class="line">    *it = *r;</div><div class="line">    it-&gt;tot ++;</div><div class="line">    node *ret = it;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = MAXK<span class="number">-1</span>; k &gt;= <span class="number">0</span>; -- k)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> s = x&gt;&gt;k&amp;<span class="number">1</span>;</div><div class="line">        it-&gt;son[s] = new_node();</div><div class="line">        *it-&gt;son[s] = *r-&gt;son[s];</div><div class="line">        it = it-&gt;son[s];</div><div class="line">        r = r-&gt;son[s];</div><div class="line">        it-&gt;tot ++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> a[MAXN];</div><div class="line">ll f[MAXK][<span class="number">2</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> i)</span></span></div><div class="line">&#123;</div><div class="line">    node *r = root[i<span class="number">-1</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = MAXK<span class="number">-1</span>; k &gt;= <span class="number">0</span>; -- k)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> s = a[i]&gt;&gt;k&amp;<span class="number">1</span>;</div><div class="line">        f[k][s^<span class="number">1</span>] -= r-&gt;son[s^<span class="number">1</span>]-&gt;tot;</div><div class="line">        r = r-&gt;son[s];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i)</span></span></div><div class="line">&#123;</div><div class="line">    node *r = root[n], *rr = root[i];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = MAXK<span class="number">-1</span>; k &gt;= <span class="number">0</span>; -- k)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> s = a[i]&gt;&gt;k&amp;<span class="number">1</span>;</div><div class="line">        f[k][s] += r-&gt;son[s^<span class="number">1</span>]-&gt;tot-rr-&gt;son[s^<span class="number">1</span>]-&gt;tot;</div><div class="line">        r = r-&gt;son[s];</div><div class="line">        rr = rr-&gt;son[s];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    nil-&gt;son[<span class="number">0</span>] = nil-&gt;son[<span class="number">1</span>] = nil;</div><div class="line">    nil-&gt;tot = <span class="number">0</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</div><div class="line">    <span class="keyword">while</span> (T --)</div><div class="line">    &#123;</div><div class="line">        node_cnt = <span class="number">0</span>;</div><div class="line">        root[<span class="number">0</span>] = new_node();</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</div><div class="line">            root[i] = add(root[i<span class="number">-1</span>], a[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; MAXK; ++ k)</div><div class="line">            f[k][<span class="number">0</span>] = f[k][<span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">        ll ans = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</div><div class="line">        &#123;</div><div class="line">            del(i);</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = MAXK<span class="number">-1</span>; k &gt;= <span class="number">0</span>; -- k)</div><div class="line">            &#123;</div><div class="line">                ans += f[k][a[i]&gt;&gt;k&amp;<span class="number">1</span>];</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            add(i);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, ans);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="05"><a href="#05" class="headerlink" title="05"></a>05</h1><p>考虑一个点集的斯坦纳树大小，类似于 $1 \to x$ 的链的并</p>
<p>那么一个子树 $x$ ，如果字数内有 $a$ 个分在不同集合内的点， $v(fa_x, x)$ 就会被记 $a$ 次， 枚举每条边贪心最大化贡献即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">1001234</span>;</div><div class="line"><span class="keyword">int</span> n, K, siz[MaxN], fv[MaxN];</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> to, nxt, c;</div><div class="line">&#125;e[MaxN &lt;&lt; <span class="number">1</span>]; <span class="keyword">int</span> cnt, lst[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</div><div class="line">	e[++cnt] = (edge)&#123;b, lst[a], c&#125;; lst[a] = cnt; </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">lnk</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</div><div class="line">	ins(a, b, c);</div><div class="line">	ins(b, a, c);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa = <span class="number">0</span>)</span></span>&#123;</div><div class="line">	siz[x] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x], b; b = e[i].to, i; i = e[i].nxt)&#123;</div><div class="line">		<span class="keyword">if</span>(b == fa) <span class="keyword">continue</span>;</div><div class="line">		dfs(b, x);</div><div class="line">		fv[b] = e[i].c;</div><div class="line">		siz[x] += siz[b]; </div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">int</span> size = <span class="number">20</span> &lt;&lt; <span class="number">20</span>;<span class="comment">//256M</span></div><div class="line">	<span class="keyword">char</span> *p = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(size) + size;</div><div class="line">	__asm__(<span class="string">"movq %0, %%rsp\n"</span> :: <span class="string">"r"</span>(p));</div><div class="line"></div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)&#123;</div><div class="line">		K = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++)&#123;</div><div class="line">			<span class="keyword">int</span> u = inp(), v = inp(), w = inp();</div><div class="line">			lnk(u, v, w);</div><div class="line">		&#125;</div><div class="line">		dfs(<span class="number">1</span>);</div><div class="line">		LL ans = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= n; i++)</div><div class="line">			ans += (LL) min(siz[i], K) * fv[i];</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, ans);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) lst[i] = <span class="number">0</span>;</div><div class="line">		cnt = <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="06"><a href="#06" class="headerlink" title="06"></a>06</h1><p>观察发现就是要求 $f(x - \sum_{i = 1} ^ {m} a_i )$</p>
<p>那么设 $o = \sum_{i = 1} ^ {m} a_i$,有</p>
<script type="math/tex; mode=display">\begin{aligned}
f(x - o) &= \sum_{i = 0} ^ {n} c_i(x - o) ^ i\\
&=\sum_{i = 0} ^ n c_i \sum_{j = 0} ^ i {i\choose j} x ^ j o^{i - j}\\
&=\sum_{j = 0} ^ n \frac{x^j}{j!} \sum_{i = j} ^ {n} (i!c_i) \cdot \frac{o^{i - j}}{(i - j)!}
\end{aligned}</script><p>观察发现是个卷积的形式， 套个板子即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">23</span>, P = ((<span class="number">7</span> * <span class="number">17</span>) &lt;&lt; M) + <span class="number">1</span>, G = <span class="number">3</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = (<span class="number">1</span> &lt;&lt; <span class="number">20</span>) + <span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> N = <span class="number">1</span> &lt;&lt; <span class="number">19</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a + b) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a - b + P) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (LL)a * (LL)b % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = mul(ans, a);</div><div class="line">        a = mul(a, a);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">exp</span>(x, P - <span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> eps[MaxN], ieps[MaxN], temp[<span class="number">5</span>][MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> g = <span class="built_in">exp</span>(G, (P - <span class="number">1</span>) / N), ig = inv(g);</div><div class="line">    eps[<span class="number">0</span>] = ieps[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) eps[i] = mul(eps[i - <span class="number">1</span>], ig), ieps[i] = mul(ieps[i - <span class="number">1</span>], g);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> w[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i != n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">std</span>::swap(x[i], x[j]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = n &gt;&gt; <span class="number">1</span>; (j ^= l) &lt; l; l &gt;&gt;= <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">int</span> l = i &gt;&gt; <span class="number">1</span>, d = N / i;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j != n; j += i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != l; k++) &#123;</div><div class="line">                <span class="keyword">int</span> t = mul(x[j + k + l], w[d * k]);</div><div class="line">                x[j + k + l] = sub(x[j + k], t);</div><div class="line">                x[j + k] = add(x[j + k], t);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">idft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, ieps);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, in = inv(n); i &lt; n; i++) x[i] = mul(x[i], in);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> fac[MaxN], rfac[MaxN];</div><div class="line"><span class="keyword">int</span> f[MaxN], n, m, of, a[MaxN], b[MaxN];</div><div class="line"><span class="keyword">int</span> u[MaxN], v[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, L;</div><div class="line">	init();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(fac[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt; MaxN; i++) fac[i] = mul(fac[i - <span class="number">1</span>], i);</div><div class="line">	<span class="keyword">for</span>(rfac[MaxN - <span class="number">1</span>] = <span class="built_in">exp</span>(fac[MaxN - <span class="number">1</span>], P - <span class="number">2</span>), i = MaxN - <span class="number">1</span>; i; i--) </div><div class="line">		rfac[i - <span class="number">1</span>] = mul(rfac[i], i);</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(~ <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) f[i] = inp();</div><div class="line">		</div><div class="line">		m = inp(); of = <span class="number">0</span>; </div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) a[i] = inp(), of = add(of, a[i]);</div><div class="line">		<span class="keyword">for</span>(a[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt;= n; i++) a[i] = mul(a[i - <span class="number">1</span>], P - of);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) u[n - i] = mul(f[i], fac[i]);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) v[i] = mul(a[i], rfac[i]);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(L = <span class="number">1</span>; L &lt;= (n + n + <span class="number">1</span>); L &lt;&lt;= <span class="number">1</span>);</div><div class="line">		</div><div class="line">		dft(L, u); dft(L, v);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; L; i++) u[i] = mul(u[i], v[i]);</div><div class="line">		idft(L, u);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>, mul(u[n - i], rfac[i]));</div><div class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; L; i++) u[i] = v[i] = <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="07"><a href="#07" class="headerlink" title="07"></a>07</h1><h1 id="08"><a href="#08" class="headerlink" title="08"></a>08</h1><p>求 $\sum_{i = 1}^{n^k}{\mu^2(i) \times \lfloor \sqrt{\frac{n^k}{i}} \rfloor}$</p>
<p>注意到这个式子好像是唬人的，注意到对于一个数 $x = a^2b$, 其中 $\mu(b) \neq 0$，这个分解是唯一的</p>
<p>那么这个式子就相当于枚举了那个 $b$, 统计了 $n^k$ 中所有 $b$ 的倍数，这样每个数会被记录恰好一次， 答案就是 $n^k$ </p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1000000007</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">mul</span><span class="params">(LL a, LL b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (LL)a * b % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exp</span><span class="params">(LL a, LL b)</span> </span>&#123;</div><div class="line">    LL ans = <span class="number">1</span>;</div><div class="line">    a %= P;</div><div class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = mul(ans, a);</div><div class="line">        a = mul(a, a);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i = <span class="number">0</span>; </div><div class="line">	LL n, K; </div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%I64d%I64d"</span>, &amp;n, &amp;K) != EOF)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>, ++i, <span class="built_in">exp</span>(n, K));</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="09"><a href="#09" class="headerlink" title="09"></a>09</h1><p>题意可以明显的转化成有向图欧拉回路计数(起点限制为1)</p>
<p>由于Best theorem, 我们用原图的邻接矩阵 $D$ 减去出度矩阵 $A$, 记为 $G$, 记 $G$ 去掉第 $i$ 行第 $i$ 列之后的行列式为 $t(G, i)$, 这个值实际上是有向图的内向树个数</p>
<p>然后答案就是$t(G, i) \times \mathrm{deg}(1) \times \prod_{i = 2} ^ {n} (\mathrm{deg}(i) - 1)!$</p>
<p>然后你发现错了</p>
<p>因为题目的特别要求， 你还要乘上 $\prod_{i = 1} ^ {n}\prod_{i = 1} ^ {n} \mathrm{D}(i, j)!^{-1}$</p>
<p>阶乘预处理 tm 要预处理到 $O(n ^ 2)$</p>
<p>还要判 <code>-1</code> 。。。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">555</span>, MaxM = <span class="number">555</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">998244353</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m, d[MaxN][MaxN], fac[MaxN * MaxN], r[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a + b) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a - b + P) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (LL)a * b % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = mul(ans, a);</div><div class="line">        a = mul(a, a);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> g[MaxN][MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">gauss</span><span class="params">(<span class="keyword">int</span> N)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k, l, o;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(l = j = <span class="number">1</span>; j &lt;= N; j++)&#123;</div><div class="line">		<span class="keyword">for</span>(k = j; k &lt;= N; k++)</div><div class="line">			<span class="keyword">if</span>(g[j][k])	<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>(k == N + <span class="number">1</span>)	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(k &gt; j)</div><div class="line">			<span class="keyword">for</span>(l *= <span class="number">-1</span>, o = j; o &lt;= N; o++)</div><div class="line">				swap(g[j][o], g[k][o]);</div><div class="line">		l = mul(l, g[j][j]);</div><div class="line">		o = <span class="built_in">exp</span>(g[j][j], P - <span class="number">2</span>);</div><div class="line">		<span class="keyword">for</span>(k = j; k &lt;= N; k++)</div><div class="line">			g[j][k] = mul(g[j][k], o);</div><div class="line">		<span class="keyword">for</span>(k = j + <span class="number">1</span>; k &lt;= N; k++)</div><div class="line">			<span class="keyword">if</span>(g[k][j])</div><div class="line">				<span class="keyword">for</span>(o = N;o &gt;= j; o--)</div><div class="line">					g[k][o] = sub(g[k][o], mul(g[k][j], g[j][o]));</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> l &lt; <span class="number">0</span> ? l + P : l;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> f[MaxN];</div><div class="line"><span class="keyword">int</span> r2[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> f[x] == x ? x : f[x] = find(f[x]); </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, cas = <span class="number">0</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(fac[<span class="number">0</span>] = <span class="number">1</span>, i = <span class="number">1</span>; i &lt; MaxN * MaxN; i++) fac[i] = mul(fac[i - <span class="number">1</span>], i);</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)&#123;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) f[i] = i;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++)	</div><div class="line">				d[i][j] = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) r[i] = <span class="number">0</span>, r2[i] = <span class="number">0</span>;</div><div class="line">				</div><div class="line">		<span class="keyword">int</span> det = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) g[i][j] = <span class="number">0</span>;</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">				<span class="keyword">if</span>(d[i][j])  f[find(i)] = find(j);</div><div class="line">				g[j][j] = add(g[j][j], d[i][j]);</div><div class="line">				g[i][j] = sub(g[i][j], d[i][j]);</div><div class="line">				</div><div class="line">				det = mul(det, <span class="built_in">exp</span>(fac[d[i][j]], P - <span class="number">2</span>));</div><div class="line">				r[i] += d[i][j]; r2[j] += d[i][j];</div><div class="line">			&#125;		</div><div class="line">		</div><div class="line">		det = mul(det, gauss(n - <span class="number">1</span>));</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">			det = mul(det, fac[r2[i] - <span class="number">1</span> + (i == <span class="number">1</span>)]);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) <span class="keyword">if</span>(find(i) != find(<span class="number">1</span>)) det = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) <span class="keyword">if</span>(r[i] != r2[i]) det = <span class="number">0</span>;</div><div class="line">		</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>, ++cas, det);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="10"><a href="#10" class="headerlink" title="10"></a>10</h1><p>考虑到设 $f(i, j)$ 表示前 $j$ 个分成 $i$ 段的最小代价，那么 $f(i, j) = \min{f(i - 1, k) + \mathrm{dep}(\mathrm{lca}(p_{k + 1}\ldots p_j))}$</p>
<p>注意到设$d(l, r) = \mathrm{dep}(\mathrm{lca}(p_l \ldots p_r))$, 必然满足 $d(l, r + 1) - d(l, r) \ge d(l + 1, r + 1) - d(l + 1, r)$, 想象添加点 $p_r$ 的时候, 额外多出的点 $p_l$ 会使得减量不变小, 二分 + 倍增维护区间lca就可以在 $O(nk\log n)$ 时间解决</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">601234</span>, MaxL = <span class="number">20</span>;</div><div class="line"><span class="keyword">int</span> n, K, P[MaxN];</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> to, nxt;</div><div class="line">&#125;e[MaxN &lt;&lt; <span class="number">1</span>]; <span class="keyword">int</span> cnt, lst[MaxN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	e[++cnt] = (edge)&#123;b, lst[a]&#125;; lst[a] = cnt; </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">lnk</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	ins(a, b);</div><div class="line">	ins(b, a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> dep[MaxN], lg[MaxN], dfn[MaxN], dn, eu[MaxN], en, in[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	dfn[x] = ++dn;  eu[++en] = x; in[x] = en;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x], b; b = e[i].to, i; i = e[i].nxt)&#123;</div><div class="line">		<span class="keyword">if</span>(b == fa) <span class="keyword">continue</span>;</div><div class="line">		dep[b] = dep[x] + <span class="number">1</span>;</div><div class="line">		dfs(b, x);</div><div class="line">		eu[++en] = x;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> a[MaxN][MaxL], c[MaxN][MaxL];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	x = in[x]; y = in[y];</div><div class="line">	<span class="keyword">if</span>(x &gt; y) swap(x, y);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> o = lg[y - x + <span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> l = c[x][o], r = c[y - (<span class="number">1</span> &lt;&lt; o) + <span class="number">1</span>][o];</div><div class="line">	<span class="keyword">return</span> dep[l] &lt; dep[r] ? l : r;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x &gt; y) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> o = lg[y - x + <span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> l = a[x][o], r = a[y - (<span class="number">1</span> &lt;&lt; o) + <span class="number">1</span>][o];</div><div class="line">	<span class="keyword">return</span> dep[LCA(l, r)];	</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="keyword">int</span> f[MaxN], g[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> l, r, z, o;</div><div class="line">	<span class="keyword">for</span>(l = y, r = n + <span class="number">1</span>; l &lt; r; o ? l = z + <span class="number">1</span> : r = z)&#123;</div><div class="line">		z = l + r &gt;&gt; <span class="number">1</span>;</div><div class="line">		o = g[x] + lca(x + <span class="number">1</span>, z) &lt; g[y] + lca(y + <span class="number">1</span>, z);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> l;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> qh, qt, pt[MaxN], q[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j;</div><div class="line">	<span class="keyword">for</span>(lg[<span class="number">1</span>] = <span class="number">0</span>, i = <span class="number">2</span>; i &lt; MaxN; i++) lg[i] = lg[i &gt;&gt; <span class="number">1</span>] + <span class="number">1</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</div><div class="line">		K = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) P[i] = inp();</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++) &#123;</div><div class="line">			<span class="keyword">int</span> u = inp(), v = inp();</div><div class="line">			lnk(u, v);</div><div class="line">		&#125;</div><div class="line">		dep[<span class="number">1</span>] = <span class="number">1</span>; en = dn = <span class="number">0</span>;</div><div class="line">		dfs(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= en; i++) c[i][<span class="number">0</span>] = eu[i];		</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= lg[en]; j++)</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">1</span>; i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= en; i++)&#123;</div><div class="line">				<span class="keyword">int</span> l = c[i][j - <span class="number">1</span>], r = c[i + (<span class="number">1</span> &lt;&lt; j - <span class="number">1</span>)][j - <span class="number">1</span>];</div><div class="line">				c[i][j] = dep[l] &lt; dep[r] ? l : r;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i][<span class="number">0</span>] = P[i];</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= lg[n]; j++)</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">1</span>; i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= n; i++)&#123;</div><div class="line">				<span class="keyword">int</span> l = a[i][j - <span class="number">1</span>], r = a[i + (<span class="number">1</span> &lt;&lt; j - <span class="number">1</span>)][j - <span class="number">1</span>];</div><div class="line">				a[i][j] = LCA(l, r);</div><div class="line">			&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) f[i] = <span class="number">1e9</span>;</div><div class="line">		<span class="keyword">for</span>(f[<span class="number">0</span>] = <span class="number">0</span>, j = <span class="number">1</span>; j &lt;= K; j++)&#123;</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) </div><div class="line">				g[i] = f[i], f[i] = <span class="number">1e9</span>;</div><div class="line">			qh = <span class="number">1</span>, qt = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++)&#123;</div><div class="line">				<span class="keyword">for</span>(; qh &lt; qt &amp;&amp; pt[qh + <span class="number">1</span>] &lt;= i; qh++);</div><div class="line">				<span class="keyword">if</span>(qh &lt;= qt) f[i] = g[q[qh]] + lca(q[qh] + <span class="number">1</span>, i);</div><div class="line">				<span class="keyword">for</span>(; qh &lt; qt &amp;&amp; pt[qt] &gt;= find(q[qt], i); --qt);</div><div class="line">				q[++qt] = i;</div><div class="line">				<span class="keyword">if</span>(qh &lt; qt) pt[qt] = find(q[qt - <span class="number">1</span>], i); </div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, f[n]);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) lst[i] = <span class="number">0</span>;</div><div class="line">		cnt = <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="11"><a href="#11" class="headerlink" title="11"></a>11</h1><p>签到题</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;8/11 被zzq吊打了3h的罚时&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BZOJ 3019 [Balkan OI 2012] Handsome Solution</title>
    <link href="http://yoursite.com/2017/07/31/BZOJ-3019-Balkan-OI-2012-Handsome-Solution/"/>
    <id>http://yoursite.com/2017/07/31/BZOJ-3019-Balkan-OI-2012-Handsome-Solution/</id>
    <published>2017-07-31T07:14:24.000Z</published>
    <updated>2017-07-31T09:02:08.553Z</updated>
    
    <content type="html"><![CDATA[<p>···<br><a id="more"></a></p>
<h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p>一个 $n$ 位数是 Handsome 的，当且仅当其中只有 $0/1/2$，而且相邻的两个数构成的数对不在危险集合中。</p>
<p>$n$ 位数 $A$ 在排列 $P$ 的意义下字典序小于 $B$，则存在一个$ k(1 \leq k &lt; n) $ 使得：</p>
<script type="math/tex; mode=display">A_{P_1} = B_{P_1}, A_{P_2} = B_{P_2} \ldots A_{P_k} = B_{P_k}, A_{P_{k+1}} < B_{P_{k+1}}</script><p>给定 $n$，危险集合，排列 $P$，以及一个 Handsome 数 $T$，统计在排列 $P$ 意义下小于 $T$ 的 Handsome 数的个数。答案模 $10^9 + 7$。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>首先dp出 $f_{i, l, r}$ 表示长度为 $i$ 的handsome数, 开头为 $l$, 结尾为 $r$, 的方案数, 即 $f_{i, l, r} = \sum_{!danger(a, r)} f(i - 1, l , b)$</p>
<p>考虑枚举lcp的长度，那么只需要支持填上一位，撤销一位，查询总方案数即可</p>
<p>那么我们采用线段树，$L_i, R_i$ 表示区间内确定的最左最右点，$\mathrm{way}_i$</p>
<p>那么合并信息的时候先将左右孩子的信息相乘，即 $\mathrm{way}_p = \mathrm{way}_{\mathrm{lc}_p}\times \mathrm{way}_{\mathrm{rc}_p}$</p>
<p>如果中间存在空余段， 再乘上 $f(L_{\mathrm{rc_p}} - R_{\mathrm{lc_p}} + 1,a_{R_{\mathrm{lc_p}} }, a_{L_{\mathrm{rc_p}}})$ 即可</p>
<p>gtmd卡常数</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">401234</span>, MaxM = MaxN &lt;&lt; <span class="number">2</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1000000007</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m, p[MaxN], chk[<span class="number">3</span>][<span class="number">3</span>];</div><div class="line"><span class="keyword">int</span> f[MaxN][<span class="number">3</span>][<span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> add(x, y) (x + y &gt;= P ? x + y - P : x + y)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> mul(x, y) ((LL) x * y % P)</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> lb[MaxM], rb[MaxM], way[MaxM], a[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	lb[p] = l; rb[p] = r; way[p] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</div><div class="line">	build(p &lt;&lt; <span class="number">1</span>, l, l + r &gt;&gt; <span class="number">1</span>);</div><div class="line">	build(p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg_modify</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> q, <span class="keyword">int</span> d)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l == r)&#123;</div><div class="line">		a[l] = d;</div><div class="line">		<span class="keyword">if</span>(d &lt; <span class="number">0</span>) lb[p] = rb[p] = <span class="number">0</span>;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(q &lt;= l + r &gt;&gt; <span class="number">1</span>)</div><div class="line">		seg_modify(p &lt;&lt; <span class="number">1</span>, l, l + r &gt;&gt; <span class="number">1</span>, q, d);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		seg_modify(p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r, q, d);</div><div class="line">	</div><div class="line">	lb[p] = lb[p &lt;&lt; <span class="number">1</span>] ? lb[p &lt;&lt; <span class="number">1</span>] : lb[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</div><div class="line">	rb[p] = rb[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] ? rb[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] : rb[p &lt;&lt; <span class="number">1</span>];</div><div class="line">	way[p] = mul(way[p &lt;&lt; <span class="number">1</span>], way[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</div><div class="line">	<span class="keyword">if</span>(rb[p &lt;&lt; <span class="number">1</span>] &amp;&amp; lb[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])</div><div class="line">		way[p] = mul(way[p], f[lb[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] - rb[p &lt;&lt; <span class="number">1</span>] + <span class="number">1</span>][a[rb[p &lt;&lt; <span class="number">1</span>]]][a[lb[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]]]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> q, <span class="keyword">int</span> d)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(~ d)&#123;</div><div class="line">		<span class="keyword">if</span>(q &gt; <span class="number">1</span> &amp;&amp; ~ a[q - <span class="number">1</span>]) <span class="keyword">if</span>(chk[a[q - <span class="number">1</span>]][d]) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(q &lt; n &amp;&amp; ~ a[q + <span class="number">1</span>]) <span class="keyword">if</span>(chk[d][a[q + <span class="number">1</span>]]) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	seg_modify(<span class="number">1</span>, <span class="number">1</span>, n, q, d);</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ans = way[<span class="number">1</span>], i, j;</div><div class="line">	<span class="keyword">if</span>(lb[<span class="number">1</span>] &gt; <span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">for</span>(i = j = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</div><div class="line">			j = add(j, f[lb[<span class="number">1</span>]][i][a[lb[<span class="number">1</span>]]]);</div><div class="line">		ans = mul(ans, j);</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">if</span>(rb[<span class="number">1</span>] &lt; n)&#123;</div><div class="line">		<span class="keyword">for</span>(i = j = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</div><div class="line">			j = add(j, f[n - rb[<span class="number">1</span>] + <span class="number">1</span>][a[rb[<span class="number">1</span>]]][i]);</div><div class="line">		ans = mul(ans, j);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">char</span> s[MaxN]; <span class="keyword">int</span> T[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k, x, y;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) p[i] = inp();</div><div class="line">	m = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++)&#123;</div><div class="line">		<span class="keyword">char</span> ch[<span class="number">5</span>];</div><div class="line">		io :: gets(ch);</div><div class="line">		chk[ch[<span class="number">0</span>] - <span class="string">'0'</span> - <span class="number">1</span>][ch[<span class="number">1</span>] - <span class="string">'0'</span> - <span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) f[<span class="number">1</span>][i][i] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)</div><div class="line">			<span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">3</span>; x++)</div><div class="line">				<span class="keyword">if</span>(!chk[x][k])&#123;</div><div class="line">					<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</div><div class="line">						f[i][j][k] = add(f[i][j][k], f[i - <span class="number">1</span>][j][x]);</div><div class="line">				&#125;</div><div class="line"></div><div class="line">	io :: gets(s + <span class="number">1</span>);	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = T[i] = s[i] - <span class="string">'0'</span> - <span class="number">1</span>;</div><div class="line">	 </div><div class="line">	<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">	build(<span class="number">1</span>, <span class="number">1</span>, n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> lcp = n; lcp; lcp--)&#123;</div><div class="line">		<span class="keyword">int</span> np = p[lcp];</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; T[np]; i++)</div><div class="line">			<span class="keyword">if</span>(modify(np, i))</div><div class="line">				ans = add(ans, query());</div><div class="line">		modify(np, <span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; add(ans, <span class="number">1</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;···&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BZOJ 3022 [Balkan OI 2012] The Best Team Solution</title>
    <link href="http://yoursite.com/2017/07/31/BZOJ-3022-Balkan-OI-2012-The-Best-Team-Solution/"/>
    <id>http://yoursite.com/2017/07/31/BZOJ-3022-Balkan-OI-2012-The-Best-Team-Solution/</id>
    <published>2017-07-31T06:29:04.000Z</published>
    <updated>2017-07-31T08:57:36.373Z</updated>
    
    <content type="html"><![CDATA[<p>简单线段树</p>
<a id="more"></a>
<h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p>给定 $n$ 个球员， 第 $i$ 个球员的年龄为 $a_i$ , 水平为 $s_i$ , 没有任何两人水平相同</p>
<p>将这些球员按水平排序，对于一次比赛，你需要选择若干个球员去比赛，但不能同时选择两个水平相邻的球员。</p>
<p>$m$ 次询问，每次给定 $a$ 和 $k$，表示要在年龄不超过 $a$ 的球员中选择不超过 $k$ 个球员，请计算 $\mathrm{skill}$ 和的最大值</p>
<p>$n, m \leq 3 * 10 ^ 5, a_i, s_i \leq 10^9$</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>考虑对于年龄排序就可以去掉年龄的限制，然后肯定是贪心的从大到小取。</p>
<p>考虑线段树，为了解决不相邻，我们维护 $g(p, 0), g(p,1)$ 表示对应区间右端点 $r + 1$ 不取或取的时候 $l$ 取不取， 这样$g(p, o) = g(\mathrm{lc_p}, g(\mathrm{rc_p}, o))$， 即上传了 $r + 1$ 的选取信息，且解决了中点处不相邻</p>
<p>那么我们对应的维护 $c(p, 0/1), s(p, 0/1)$ 表示取的最优个数和价值即可，查询的时候在线段树上二分</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">301234</span>, MaxM = MaxN &lt;&lt; <span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m, ls[MaxN];</div><div class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; a[MaxN];</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span>&#123;</span> <span class="keyword">int</span> a, k, i;&#125;q[MaxN];</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(query x, query y)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> x.a &lt; y.a;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> g[MaxM][<span class="number">2</span>], c[MaxM][<span class="number">2</span>]; LL s[MaxM][<span class="number">2</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> q, <span class="keyword">int</span> d)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l == r)&#123;</div><div class="line">		g[p][<span class="number">0</span>] = c[p][<span class="number">0</span>] = <span class="number">1</span>; s[p][<span class="number">0</span>] = d;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(q &lt;= l + r &gt;&gt; <span class="number">1</span>) </div><div class="line">		modify(p &lt;&lt; <span class="number">1</span>, l, l + r &gt;&gt; <span class="number">1</span>, q, d);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		modify(p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r, q, d);</div><div class="line">		</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> o = <span class="number">0</span>; o &lt; <span class="number">2</span>; o++)&#123;</div><div class="line">		<span class="keyword">int</span> t = g[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o];</div><div class="line">		g[p][o] = g[p &lt;&lt; <span class="number">1</span>][t];</div><div class="line">		c[p][o] = c[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o] + c[p &lt;&lt; <span class="number">1</span>][t];</div><div class="line">		s[p][o] = s[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o] + s[p &lt;&lt; <span class="number">1</span>][t];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL ans[MaxN];</div><div class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k, <span class="keyword">int</span> o = <span class="number">0</span>)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(k &gt;= c[p][o]) <span class="keyword">return</span> s[p][o];</div><div class="line">	<span class="keyword">if</span>(l == r) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(k &lt;= c[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o])</div><div class="line">		<span class="keyword">return</span> query(p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, (l + r &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>, r, k, o);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="keyword">return</span> s[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o] + </div><div class="line">		query(p &lt;&lt; <span class="number">1</span>, l, l + r &gt;&gt; <span class="number">1</span>, k - c[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o], g[p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>][o]);</div><div class="line">&#125; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a[i].fir, &amp;a[i].sec), ls[i] = a[i].sec;</div><div class="line">	sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>); </div><div class="line">	sort(ls + <span class="number">1</span>, ls + n + <span class="number">1</span>);</div><div class="line">	</div><div class="line">	m = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) </div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;q[i].a, &amp;q[i].k), q[i].i = i;</div><div class="line">	</div><div class="line">	sort(q + <span class="number">1</span>, q + m + <span class="number">1</span>, cmp);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>, j = <span class="number">1</span>; i &lt;= m; i++)&#123;</div><div class="line">		<span class="keyword">while</span>(j &lt;= n &amp;&amp; a[j].fir &lt;= q[i].a)</div><div class="line">			modify(<span class="number">1</span>, <span class="number">1</span>, n, lower_bound(ls + <span class="number">1</span>, ls + n + <span class="number">1</span>, a[j].sec) - ls, a[j].sec), j++;</div><div class="line">		ans[q[i].i] = query(<span class="number">1</span>, <span class="number">1</span>, n, q[i].k);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单线段树&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CodeChef OCT11 Sine Partition Function Solution</title>
    <link href="http://yoursite.com/2017/07/30/CodeChef-OCT11-Sine-Partition-Function-Solution/"/>
    <id>http://yoursite.com/2017/07/30/CodeChef-OCT11-Sine-Partition-Function-Solution/</id>
    <published>2017-07-30T12:44:05.000Z</published>
    <updated>2017-07-30T14:21:36.670Z</updated>
    
    <content type="html"><![CDATA[<p>神经病放假了还要被支配</p>
<a id="more"></a>
<h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p>求</p>
<script type="math/tex; mode=display">\begin{aligned}
\sum_{\sum_{i=1}^N k_i = M} \prod_{i = 1} ^ N \sin(k_iX)
\end{aligned}</script><p>其中 $m \leq 10^9, n \leq 30, X &lt; 2\pi$</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>设 $f(n, m) = \sum_{\sum_{i=1}^n k_i = m} \prod_{i = 1} ^ n \sin(k_iX)<br>$</p>
<p>考虑把他当做dp做，就是枚举第 $n$ 个 $k_i$ 的取值</p>
<p>得到 $f(n, m) = \sum_{k_n = 0} ^{m} f(n - 1, m - k_n) \sin(k_nX) $</p>
<p>若 $k_n = 0$, $\sin (0) = 0$，这一项忽略</p>
<p>当 $k = 1$, $\sin(X)$不动，保留 $f(n - 1, m - 1) \sin(X)$</p>
<p>当 $k\geq 2$时， 求的是 $\sum_{k_n = 2} ^ m f(n - 1, m - k_n) sin(k_nX)$,我们尝试用和角公式将其化简</p>
<script type="math/tex; mode=display">\begin{aligned}
&=\sum_{k_n = 2} ^ m f(n - 1, m - k_n) \sin((k_n - 1 + 1)X) \\
&= \sum_{k_n = 2} ^ m f(n - 1, m - k_n) (\sin((k_n −1)X)\cos(X) + \sin(X)\cos((k_n − 1)X) )\\
&= \sum_{k_n = 2} ^ m f(n - 1, m - k_n) (2\sin((k_n −1)X)\cos(X) + \sin(X)\cos((k_n − 1)X) -\sin((k_n −1)X)\cos(X))\\
&=  \sum_{k_n = 2} ^ m f(n - 1, m - k_n) (\sin((k_n −1)X)2\cos(X)−\sin((k_n − 2)X)) \\
&= 2\cos(X)\sum_{k_n = 2} ^ m f(n - 1, m - k_n) \sin((k_n - 1) X)  - \sum_{k_n = 2} ^ m \sin((k_n - 2)X)\\
&= 2\cos(X) f(n - 1, m - 1) - f(n, m - 2)
\end{aligned}</script><p>那么就是 $f(n, m) = f(n - 1, m - 1) + f(n - 1, m - 1) - f(n, m - 2)$</p>
<p>然后你维护一下（这段是为了学习使用MathJax画列向量)<br>$<br>  \begin{bmatrix}<br>   f(0, m) &amp; f(0, m + 1)\\<br>   f(1, m) &amp; f(1, m + 1)\\<br>   \ldots\\<br>   f(n, m) &amp; f(n, m + 1)<br>  \end{bmatrix}<br>$ 和一个转移矩阵的 $n - 1$ 次幂即可在 $O(m ^ 3 \log n)$ 时间内求出答案</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">70</span>;</div><div class="line">db X; <span class="keyword">int</span> n, m;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> db mat[MaxN][MaxN];</div><div class="line">mat a, b, c, t;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(mat a, mat b, mat c)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (n &lt;&lt; <span class="number">1</span>); j++)&#123;</div><div class="line">			t[i][j] = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; (n &lt;&lt; <span class="number">1</span>); k++)</div><div class="line">				t[i][j] = (t[i][j] + a[i][k] * b[k][j]);</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (n &lt;&lt; <span class="number">1</span>); j++)</div><div class="line">			c[i][j] = t[i][j];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">exp</span><span class="params">(mat a, <span class="keyword">int</span> N)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (n &lt;&lt; <span class="number">1</span>); j++)</div><div class="line">			c[i][j] = (i == j);</div><div class="line">	<span class="keyword">for</span>(; N; N &gt;&gt;= <span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(N &amp; <span class="number">1</span>)</div><div class="line">			mul(c, a, c);</div><div class="line">		mul(a, a, a);</div><div class="line">	&#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k, T = inp();</div><div class="line">	</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; X;</div><div class="line">		<span class="keyword">double</span> x = <span class="built_in">sin</span>(X), y = <span class="built_in">cos</span>(X);</div><div class="line">		<span class="keyword">if</span>(n &gt; m) &#123;</div><div class="line">			<span class="built_in">puts</span>(<span class="string">"0"</span>); </div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i++)</div><div class="line">			<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (n &lt;&lt; <span class="number">1</span>); j++)</div><div class="line">				b[i][j] = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i += <span class="number">2</span>)&#123;</div><div class="line">			b[i][i] = <span class="number">2</span> * y;</div><div class="line">			b[i][i + <span class="number">1</span>] = <span class="number">-1</span>;</div><div class="line">			b[i][i + <span class="number">2</span>] = x;</div><div class="line">			b[i + <span class="number">1</span>][i] = <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="built_in">exp</span>(b, m - <span class="number">1</span>);</div><div class="line">		</div><div class="line">		db ans = x * c[<span class="number">0</span>][(n - <span class="number">1</span>)  &lt;&lt; <span class="number">1</span>];</div><div class="line">		</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.20lf\n"</span>, ans);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当然我发现事情有一丝蹊跷</p>
<p>因为我发现还有不是矩乘的做法。。 完结失败。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;神经病放假了还要被支配&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iFrog round 19 Solution</title>
    <link href="http://yoursite.com/2017/07/29/iFrog-round-19-Solution/"/>
    <id>http://yoursite.com/2017/07/29/iFrog-round-19-Solution/</id>
    <published>2017-07-29T11:07:54.000Z</published>
    <updated>2017-07-29T11:42:05.749Z</updated>
    
    <content type="html"><![CDATA[<p>naive出题人</p>
<a id="more"></a>
<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>找规律<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">123</span>;</div><div class="line"><span class="keyword">double</span> a[MaxN];<span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)&#123;</div><div class="line">		<span class="keyword">int</span> a = n - <span class="number">1</span>, b = <span class="number">1</span>, c = <span class="number">0</span>, d = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</div><div class="line">			b *= <span class="number">10</span>; c ++;</div><div class="line">			<span class="keyword">if</span>(a &gt; b - c) d = c;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; n + d &lt;&lt; <span class="built_in">endl</span>; </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>枚举右端点，双指针扫描<br>用st表维护最大最小值（暴力就过了</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">201234</span>;</div><div class="line"><span class="keyword">int</span> a[MaxN];  </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">qmax</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i = l;</div><div class="line">	<span class="keyword">for</span>(l; l &lt;= r; l++)</div><div class="line">		<span class="keyword">if</span>(a[l] &gt; a[i]) i = l;</div><div class="line">	<span class="keyword">return</span> i;			</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">qmin</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i = l;</div><div class="line">	<span class="keyword">for</span>(l; l &lt;= r; l++)</div><div class="line">		<span class="keyword">if</span>(a[l] &lt; a[i]) i = l;</div><div class="line">	<span class="keyword">return</span> i;			</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, K;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </div><div class="line">	<span class="keyword">int</span> i, j, k, x, y, sum = <span class="number">0</span>;</div><div class="line">	n = inp(); K = inp() + <span class="number">1</span>;</div><div class="line">	x = y = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>, j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">      	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[j]);  </div><div class="line">      	<span class="keyword">if</span>(a[j]&gt;a[x]) <span class="keyword">for</span>(x = j; a[j] - a[y] &gt;= K; i = y + <span class="number">1</span>, y = qmin(i , j)); </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[j]&lt;a[y])</div><div class="line">					  <span class="keyword">for</span>(y = j; a[x] - a[j] &gt;= K; i = x + <span class="number">1</span>, x = qmax(i, j));  </div><div class="line">        sum += j - i + <span class="number">1</span>;  </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>简单多项式题，不知道为什么没人过</p>
<p>考虑最后的答案多项式就是 $\prod_{i = 1} ^ n (1 + x^{v_i})^{a_i}$, $a_i$ 是原题题意的 $x_i$</p>
<p>给这个多项式求 $\ln$, 得到 $\sum_{i = 1} ^ {n} a_i \ln(1 + x^{v_i})$</p>
<p>那么$\ln(1-x^{v_i}) = - \sum \frac{(-x^{v_i})^j}{j} = \sum \frac{(-x)^{v_ij}}{j}$，枚举 $v_i$ 倍数即可, 时间 $O(V\log V)$</p>
<p>然后把这个多项式exp回去就好了 $O(V\log V)$</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">23</span>, P = ((<span class="number">7</span> * <span class="number">17</span>) &lt;&lt; M) + <span class="number">1</span>, G = <span class="number">3</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = (<span class="number">1</span> &lt;&lt; <span class="number">19</span>) + <span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> N = <span class="number">1</span> &lt;&lt; <span class="number">18</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a + b) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (a - b + P) % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (LL)a * (LL)b % P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = mul(ans, a);</div><div class="line">        a = mul(a, a);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">exp</span>(x, P - <span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> eps[MaxN], ieps[MaxN], temp[<span class="number">5</span>][MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> g = <span class="built_in">exp</span>(G, (P - <span class="number">1</span>) / N), ig = inv(g);</div><div class="line">    eps[<span class="number">0</span>] = ieps[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) eps[i] = mul(eps[i - <span class="number">1</span>], ig), ieps[i] = mul(ieps[i - <span class="number">1</span>], g);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> w[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i != n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">std</span>::swap(x[i], x[j]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = n &gt;&gt; <span class="number">1</span>; (j ^= l) &lt; l; l &gt;&gt;= <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">int</span> l = i &gt;&gt; <span class="number">1</span>, d = N / i;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j != n; j += i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != l; k++) &#123;</div><div class="line">                <span class="keyword">int</span> t = mul(x[j + k + l], w[d * k]);</div><div class="line">                x[j + k + l] = sub(x[j + k], t);</div><div class="line">                x[j + k] = add(x[j + k], t);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, eps);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">idft</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span> </span>&#123;</div><div class="line">    trans(n, x, ieps);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, in = inv(n); i &lt; n; i++) x[i] = mul(x[i], in);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> y[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> *t = temp[<span class="number">0</span>];</div><div class="line">    <span class="built_in">std</span>::fill(y, y + (n &lt;&lt; <span class="number">1</span>), <span class="number">0</span>);</div><div class="line">    y[<span class="number">0</span>] = inv(x[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>, j = <span class="number">2</span>; j &lt;= n; j = i, i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        <span class="built_in">std</span>::copy(x, x + j, t);</div><div class="line">        <span class="built_in">std</span>::fill(t + j, t + i, <span class="number">0</span>);</div><div class="line">        dft(i, t);</div><div class="line">        dft(i, y);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++) y[k] = mul(y[k], sub(<span class="number">2</span>, mul(t[k], y[k])));</div><div class="line">		idft(i, y);</div><div class="line">        <span class="built_in">std</span>::fill(y + j, y + i, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">drv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> y[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) y[i - <span class="number">1</span>] = mul(i, x[i]);</div><div class="line">    y[n - <span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">itg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> y[])</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i; i--) y[i] = mul(x[i - <span class="number">1</span>], inv(i));</div><div class="line">    y[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ln</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> y[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> *t = temp[<span class="number">1</span>];</div><div class="line">    inv(n, x, y);</div><div class="line">    drv(n, x, t);</div><div class="line">    <span class="built_in">std</span>::fill(y + n, y + n + n, <span class="number">0</span>);</div><div class="line">    <span class="built_in">std</span>::fill(t + n, t + n + n, <span class="number">0</span>);</div><div class="line">    dft(n &lt;&lt; <span class="number">1</span>, y), dft(n &lt;&lt; <span class="number">1</span>, t);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i++) y[i] = mul(y[i], t[i]);</div><div class="line">    idft(n &lt;&lt; <span class="number">1</span>, y);</div><div class="line">    <span class="built_in">std</span>::fill(y + n, y + n + n, <span class="number">0</span>);</div><div class="line">    itg(n, y, y);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x[], <span class="keyword">int</span> y[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> *t = temp[<span class="number">2</span>];</div><div class="line">    <span class="built_in">std</span>::fill(y, y + (n &lt;&lt; <span class="number">1</span>), <span class="number">0</span>);</div><div class="line">    y[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>, j = <span class="number">2</span>; j &lt;= n; j = i, i &lt;&lt;= <span class="number">1</span>) &#123;</div><div class="line">        ln(j, y, t);</div><div class="line">        t[<span class="number">0</span>] = sub(x[<span class="number">0</span>] + <span class="number">1</span>, t[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; j; k++) t[k] = sub(x[k], t[k]);</div><div class="line">        <span class="built_in">std</span>::fill(t + j, t + i, <span class="number">0</span>);</div><div class="line">        dft(i, y), dft(i, t);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++) y[k] = mul(y[k], t[k]);</div><div class="line">        idft(i, y);</div><div class="line">        <span class="built_in">std</span>::fill(y + j, y + i, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> I2 = inv(<span class="number">2</span>);</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, V, rv[MaxN], x[MaxN], v[MaxN], a[MaxN], b[MaxN], t[MaxN]; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k, p, q;</div><div class="line">	init();</div><div class="line">	n = inp(); V = inp();</div><div class="line">	rv[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= V; i++) rv[i] = inv(i);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">		x[i] = inp(); v[i] = inp();</div><div class="line">		x[i] = sub(P, x[i]);</div><div class="line">		<span class="keyword">for</span>(p = <span class="number">0</span>, q = <span class="number">0</span>; p &lt;= V; p += v[i], q++)</div><div class="line">			<span class="keyword">if</span>(q &amp; <span class="number">1</span>)</div><div class="line">				a[p] = sub(a[p], mul(x[i], rv[q]));</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				a[p] = add(a[p], mul(x[i], rv[q]));</div><div class="line">	&#125;</div><div class="line">	a[<span class="number">0</span>] = <span class="number">0</span>; </div><div class="line">	<span class="keyword">int</span> L = (<span class="number">1</span> &lt;&lt; <span class="number">17</span>);</div><div class="line">	<span class="built_in">exp</span>(L, a, b);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= V; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>简单的概率dp， 时间复杂度可以是 $O(n^2\log A)$ 到 $O(n\log A)$ 不等</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">1234</span>;</div><div class="line"><span class="keyword">int</span> n, a[MaxN], b[MaxN], O[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">op</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">char</span> op)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(b == <span class="number">2</span>) <span class="keyword">return</span> a;</div><div class="line">	<span class="keyword">if</span>(op == <span class="number">1</span>) <span class="keyword">return</span> a &amp; b;</div><div class="line">	<span class="keyword">if</span>(op == <span class="number">2</span>) <span class="keyword">return</span> a | b;</div><div class="line">	<span class="keyword">if</span>(op == <span class="number">3</span>) <span class="keyword">return</span> a ^ b;</div><div class="line">	<span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxH = <span class="number">20</span>;</div><div class="line"><span class="keyword">double</span> f[MaxN][MaxH], p[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j;</div><div class="line">	</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; i++)	a[i] = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= n + <span class="number">1</span>; i++) &#123;</div><div class="line">		<span class="keyword">char</span> ch = getchar();</div><div class="line">		<span class="keyword">while</span>(ch != <span class="string">'&amp;'</span> &amp;&amp; ch != <span class="string">'|'</span> &amp;&amp; ch != <span class="string">'^'</span>) ch = getchar();</div><div class="line">		<span class="keyword">if</span>(ch == <span class="string">'&amp;'</span>) O[i] = <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(ch == <span class="string">'|'</span>) O[i] = <span class="number">2</span>;</div><div class="line">		<span class="keyword">if</span>(ch == <span class="string">'^'</span>) O[i] = <span class="number">3</span>; </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= n + <span class="number">1</span>; i++) <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, p + i);</div><div class="line">	</div><div class="line">	<span class="keyword">double</span> ans = <span class="number">0.0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; i++)&#123;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">20</span>; j++)&#123;</div><div class="line">			<span class="keyword">int</span> o = (a[i] &gt;&gt; j) &amp; <span class="number">1</span>;</div><div class="line">			f[i][j] = f[i - <span class="number">1</span>][j] * p[i] + </div><div class="line">			op(o, <span class="number">0</span>, O[i]) * (<span class="number">1</span> - f[i - <span class="number">1</span>][j]) * (<span class="number">1</span> - p[i]) + </div><div class="line">			op(o, <span class="number">1</span>, O[i]) * f[i - <span class="number">1</span>][j] * (<span class="number">1</span> - p[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) ans += (<span class="number">1</span> &lt;&lt; i) * f[n + <span class="number">1</span>][i];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>, ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>
</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;naive出题人&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tiao Laoshi&#39;s Speech</title>
    <link href="http://yoursite.com/2017/07/24/Tiao-Laoshi-s-Speech/"/>
    <id>http://yoursite.com/2017/07/24/Tiao-Laoshi-s-Speech/</id>
    <published>2017-07-24T06:11:43.000Z</published>
    <updated>2017-07-24T06:14:29.601Z</updated>
    
    <content type="html"><![CDATA[<p>正衡中学八年级期中表彰第一名同学的发言稿 - 孔瑞阳</p>
<p>想了想还是把偶像的发言稿搬过来了<br><a id="more"></a></p>
<p>说世界很大，我想去看看的人，都会说自己总是想看看世界究竟有多大。其实，我猜他们是想证明，他们有自己的辽阔世界，他们不要别人设定的那个狭隘的空间。</p>
<p>我的第一个理想，叫做No.1 </p>
<p>我在一个毫不起眼的小学上学，从那时起，就一直是班级里的千年老二。当时的我也没有进取之心，反正在这种不入流的小学拿了第一名也不算什么成就。很快就到了小升初，我怕在这个高手云集的学校落下别人太多，态度才稍微认真了些。 </p>
<p>第一次期中考试，却神奇地取得了很优异的成绩。 </p>
<p>那时我才萌发出一个念头：世界很大，我想去看看。<br>于是我更加努力起来，在完成平时的学习任务后只干一件事：刷题。功夫不负有心人，在第二次期中考试，我刷到了2道英语阅读原题。 </p>
<p>然后我退步了7名。 </p>
<p>接着我才知道，学习刻苦并不是指一昧地去针对自己的某个弱点去做一项填鸭式的练习，而是该明白“what why how”，即自己的弱点是什么，自己为什么会有这个弱点，要改正这个弱点应该怎么样。大量的习题只能解决“what”，但我们真正要解决的问题是“why”。比如说数学因为不认真听课而导致很多题目不会，这么一说怎么改正当然一目了然。 </p>
<p>于是今天，我终于站到了这里。 </p>
<p>当然，第一轮流做，明年到你家。谁找到了属于自己的方法而且比别人更加勤奋刻苦，谁就会成为下一个第一名。</p>
<p>我的第二个理想，叫做信息学奥赛。 </p>
<p>一开始我的水平并没有领先太多，反而有一个致命的弱点，就是住宿在学校并没有太多的练习时间。怎么办呢？ </p>
<p>世界很大，我想去看看。 </p>
<p>于是我就疯狂地提高我的写作业速度，基本上每天都能在6点之前把作业写完。于是晚自习就能抽出大把的时间去看书，写代码，提高自己的水平。 </p>
<p>过了半年，出乎意料拿到了高中组省一等奖，正衡第一名。 </p>
<p>但人外有人，常外的赵亮在初二拿了全国金牌，俄罗斯有人初二拿了世界金牌。 </p>
<p>我不敢懈怠，甚至拿出一些晚自习的时间参加各种比赛，以实战提高自己的水平。两轮省队选拔后，我超越了一中所有高一的学长。 </p>
<p>能否成为下一个赵亮，谁知道呢。</p>
<p>我的第三个理想，叫做体育与音乐。 </p>
<p>我在小学一直是个小胖墩，曾经还因为体育只有及格而失去了一次三好学生。然后我爸妈把我送去学羽毛球，每次都有累死人不偿命的体能训练，到家连吃饭的力气都没有。 </p>
<p>但是我现在的体育成绩也都是有目共睹，多次在100、1000米中取得优异的名次。 </p>
<p>关于音乐，在没有接触欧美流行音乐之前，最爱古典音乐，我也因此走上了钢琴的道路。接触了欧美Pop之后么，请自行参见我的歌单。 </p>
<p>我之所以没有在学习体育音乐全面发展的时候感到劳累，是因为我从来没有把音乐和体育当做自己的负担。它们只是我休闲的方式，家里的钢琴不弹的时候可以当优雅的摆设，高兴时即兴演奏一首自己喜爱的曲子，这不是别人布置的任务，这是我悠闲的生活。 </p>
<p>我还有一个理想，叫做英国。 </p>
<p>小升初的暑假BBC第一次在中国举办媒体看片会，全国一共八十个名额。怎么会轮到我这个小学生呢？ </p>
<p>世界很大，我想去看看。 </p>
<p>于是我用了三天的时间，写了一万八千字的《神探夏洛克》《神秘博士》等BBC英剧的剧评，又做了一段4分钟的剪辑视频。 </p>
<p>世上无难事，只要肯攀登。于是我就成功取得了这一次活动的参加名额。 </p>
<p>一年后，我亲自去了英国。除了英伦的自然风景与人文气息外，有一件事一直留在我的脑海。<br>那就是在过马路时，车辆让我们先行。说起来很简单，但在异国他乡亲自遇到这样的场景时，心中的震撼却是难以言表的。 </p>
<p>因为我们有差距。</p>
<p>其实每个人都应该有一个发自内心的信仰，并为之努力。当幻想和现实面对时，总是很痛苦的，要么你被痛苦击倒，要么你把痛苦踩在脚下。 </p>
<p>如果还有什么要说的，就是永远都不要低估自己的实力。有人正衡初二时年级二三百名，现在<br>是一中创新班的一员；有人二十四中初二时四百名，现在在是一中高二信息学第一名；有人在五中时学习落魄，现在拍摄的微电影入围了戛纳电影节金棕榈奖；有人中专学历，现在全英文答卷考取了芬兰的疗养师，马上就能移民芬兰。 </p>
<p>没有人生来就是人生赢家，只是因为世界很大，他们想去看看。 </p>
<p>不去想是否能够成功，既然选择了远方，只顾风雨兼程；不去想身后是否会袭来寒风冷雨，既然目标是地平线，留给世界的只能是背影。</p>
<p>当然不要忘了一直支持我们的老师同学和亲朋好友。我们一要承受种种外部的压力，更要面对自己内心的困惑。如果有人向你投以理解的目光，你会感到一种生命的暖意。</p>
<p>世界很大，我想去看看。 </p>
<p>看世界，都看到了什么啊？ </p>
<p>我看到了最广大的自然，最雄壮的自己。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正衡中学八年级期中表彰第一名同学的发言稿 - 孔瑞阳&lt;/p&gt;
&lt;p&gt;想了想还是把偶像的发言稿搬过来了&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AtCoder Grand Contest 018 Solution</title>
    <link href="http://yoursite.com/2017/07/24/AtCoder-Grand-Contest-018-Solution/"/>
    <id>http://yoursite.com/2017/07/24/AtCoder-Grand-Contest-018-Solution/</id>
    <published>2017-07-24T03:04:13.000Z</published>
    <updated>2017-07-24T05:46:57.521Z</updated>
    
    <content type="html"><![CDATA[<p>两题翻车</p>
<a id="more"></a>
<h1 id="Getting-Difference"><a href="#Getting-Difference" class="headerlink" title="Getting Difference"></a>Getting Difference</h1><p>设 $g$ 是所有数的 gcd , 我们可以证明只要 $g | K$ 且 $K<br>\leq \max a_i$，即可生成</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>;</div><div class="line"><span class="keyword">int</span> n, K, a[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, g;</div><div class="line">	n = inp(); K = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = inp();</div><div class="line">	<span class="keyword">for</span>(g = a[i = <span class="number">1</span>]; i &lt;= n; i++) g = __gcd(g, a[i]);</div><div class="line">	<span class="keyword">if</span>(K % g == <span class="number">0</span> &amp;&amp; *max_element(a + <span class="number">1</span>, a + n + <span class="number">1</span>) &gt;= K)</div><div class="line">		<span class="built_in">puts</span>(<span class="string">"POSSIBLE"</span>);</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Sports-Festival"><a href="#Sports-Festival" class="headerlink" title="Sports Festival"></a>Sports Festival</h1><p>先取出全部的项目，然后每次删掉报的人最多的，给对应的人重新报名，每次的答案取最小。</p>
<p>正确性：不知道为什么是对的，闭上眼睛感受一下即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">400</span>;</div><div class="line"><span class="keyword">int</span> n, m, a[MaxN][MaxN], l[MaxN], del[MaxN], cnt[MaxN]; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j;</div><div class="line">	n = inp(); m = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++)</div><div class="line">			a[i][j] = inp();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) l[i] = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> ans = ~<span class="number">0U</span> &gt;&gt; <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) &#123;</div><div class="line">		<span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span>(cnt));</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) cnt[a[j][l[j]]]++;</div><div class="line">		<span class="keyword">int</span> res = <span class="number">0</span>, k = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++) <span class="keyword">if</span>(cnt[j] &gt; cnt[k]) k = j;</div><div class="line">		cmin(ans, cnt[k]); del[k] = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">			<span class="keyword">while</span>(del[a[j][l[j]]]) ++l[j];	</div><div class="line">			<span class="keyword">if</span>(l[j] &gt; m) <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(l[j] &gt; m) <span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Coins"><a href="#Coins" class="headerlink" title="Coins"></a>Coins</h1><p>如果说只有两种硬币，那么我们先全选上 $A$, 然后按照 $b - a$ 降序贪心更改</p>
<p>但是现在有三种硬币，全选上 $A$， 按照 $(b - a, c - a)$ 排序，然后枚举最后一个 $C$ 的位置，很明显前面要么选 $B$, 要么选 $C$, 且若位置为 $p$, 则一定有 $Z$ 个 $C$, $p - Z$ 个 $B$, 后面有 $Y - (p - Z)$ 个 $B$</p>
<p>前者按照 $c - b$ 取 前$Z$ 大， 后者按照$b - a$ 取前 $Y - (p - Z)$ 大，可以使用堆或者主席树实现</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>;</div><div class="line"><span class="keyword">int</span> n, x, y, z, a[MaxN], b[MaxN], c[MaxN], rk[MaxN];</div><div class="line">LL ans = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> b[x] - c[x] &gt; b[y] - c[y];</div><div class="line">&#125;</div><div class="line"></div><div class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q; LL f[MaxN], g[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, _i;</div><div class="line">	x = inp(); y = inp(); z = inp();</div><div class="line">	<span class="keyword">for</span>(n = (x + y + z), i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		a[i] = inp(), b[i] = inp(), c[i] = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) rk[i] = i; sort(rk + <span class="number">1</span>, rk + n + <span class="number">1</span>, cmp);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(_i = <span class="number">1</span>; i = rk[_i], _i &lt;= y; _i++) q.push(a[i] - b[i]), ans += b[i] - a[i];</div><div class="line">	f[y] = ans;</div><div class="line">	<span class="keyword">for</span>(_i = y + <span class="number">1</span>; i = rk[_i], _i &lt;= n; _i++)&#123;</div><div class="line">		<span class="keyword">if</span>((j = a[i] - b[i]) &lt;= q.top())&#123;</div><div class="line">			ans += q.top() - j;</div><div class="line">			q.pop(); q.push(j);</div><div class="line">		&#125;</div><div class="line">		f[_i] = ans;</div><div class="line">	&#125; 	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= (n &gt;&gt; <span class="number">1</span>); i++) swap(rk[i], rk[n - i + <span class="number">1</span>]);</div><div class="line">	</div><div class="line">	ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty()) q.pop();</div><div class="line">	<span class="keyword">for</span>(_i = <span class="number">1</span>; i = rk[_i], _i &lt;= z; _i++) q.push(a[i] - c[i]), ans += c[i] - a[i];</div><div class="line">	g[z] = ans; </div><div class="line">	<span class="keyword">for</span>(_i = z + <span class="number">1</span>; i = rk[_i], _i &lt;= n; _i++)&#123;</div><div class="line">		<span class="keyword">if</span>((j = a[i] - c[i]) &lt;= q.top())&#123;</div><div class="line">			ans += q.top() - j;</div><div class="line">			q.pop(); q.push(j);</div><div class="line">		&#125;</div><div class="line">		g[_i] = ans;</div><div class="line">	&#125; </div><div class="line">	ans = <span class="number">-1e14</span>;	</div><div class="line">	<span class="keyword">for</span>(i = y; i &lt;= x + y; i++) cmax(ans, f[i] + g[n - i]);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) ans += a[i];</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Tree-and-Hamilton-Path"><a href="#Tree-and-Hamilton-Path" class="headerlink" title="Tree and Hamilton Path"></a>Tree and Hamilton Path</h1><p>考虑每条边在最终答案的贡献，如果是Hamilton Circle简单很多，就是$\sum 2\min (\mathrm{siz}_x, n - \mathrm{siz}_x) * C_{fa_x -&gt; x}$， 也就是重心上下两个联通块交错跳</p>
<p>如果不是就讨论一下好了</p>
<ol>
<li><p>重心唯一</p>
<p> 在回路的基础上割掉中心出边最短的一条</p>
</li>
<li><p>不唯一</p>
<p> 割掉两个重心之间的连边即可</p>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">101234</span>, MaxM = <span class="number">201234</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> to, nxt, v;</div><div class="line">&#125;e[MaxM]; <span class="keyword">int</span> cnt, lst[MaxN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</div><div class="line">	e[++cnt] = (edge)&#123;b, lst[a], c&#125;; lst[a] = cnt;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">lnk</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</div><div class="line">	ins(a, b, c);</div><div class="line">	ins(b, a, c);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL ans;</div><div class="line"><span class="keyword">int</span> n, siz[MaxN], f[MaxN], hug[MaxN], c1, c2, G;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	siz[x] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x], b; b = e[i].to, i; i = e[i].nxt)&#123;</div><div class="line">		<span class="keyword">if</span>(b == fa) <span class="keyword">continue</span>;</div><div class="line">		dfs(b, x);</div><div class="line">		siz[x] += siz[b];</div><div class="line">		ans += ((LL) e[i].v * min(siz[b], n - siz[b])) &lt;&lt; <span class="number">1</span>;</div><div class="line">		cmax(hug[x], siz[b]);	</div><div class="line">	&#125;</div><div class="line">	cmax(hug[x], n - siz[x]);</div><div class="line">	cmin(G, hug[x]);</div><div class="line">&#125; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i; </div><div class="line">	n = G = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++)&#123;</div><div class="line">		<span class="keyword">int</span> u = inp(), v = inp(), w = inp();</div><div class="line">		lnk(u, v, w);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	dfs(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">if</span>(hug[i] == G)</div><div class="line">			<span class="keyword">if</span>(c1) c2 = i; <span class="keyword">else</span> c1 = i;</div><div class="line">	</div><div class="line">    <span class="keyword">if</span>(c2)&#123;</div><div class="line">		<span class="keyword">for</span>(i = lst[c1]; i; i = e[i].nxt) <span class="keyword">if</span>(e[i].to == c2)</div><div class="line">			ans -= e[i].v;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> mn = ~<span class="number">0U</span> &gt;&gt; <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(i = lst[c1]; i; i = e[i].nxt) cmin(mn, e[i].v);</div><div class="line">		ans -= mn;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Sightseeing-Plan"><a href="#Sightseeing-Plan" class="headerlink" title="Sightseeing Plan"></a>Sightseeing Plan</h1><h1 id="Two-Trees"><a href="#Two-Trees" class="headerlink" title="Two Trees"></a>Two Trees</h1><p>这两题好像还不会</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两题翻车&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HackerrankWeekOfCode 34 Diary</title>
    <link href="http://yoursite.com/2017/07/23/HackerrankWeekOfCode34Diary/"/>
    <id>http://yoursite.com/2017/07/23/HackerrankWeekOfCode34Diary/</id>
    <published>2017-07-23T11:11:40.000Z</published>
    <updated>2017-07-24T03:37:05.429Z</updated>
    
    <content type="html"><![CDATA[<p>这周的Week of Code可能是最难的了。。</p>
<a id="more"></a>
<p>跳过Easy题</p>
<h3 id="Maximum-GCD-and-Sum"><a href="#Maximum-GCD-and-Sum" class="headerlink" title="Maximum GCD and Sum"></a>Maximum GCD and Sum</h3><p>枚举答案， 调和级数<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">1001234</span>;</div><div class="line"><span class="keyword">int</span> n, a[MaxN], b[MaxN], as[MaxN], bs[MaxN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) as[a[i] = inp()] = i;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) bs[b[i] = inp()] = i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> d = MaxN - <span class="number">1</span>; d; d--)&#123;</div><div class="line">		<span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, L = MaxN / d * d;</div><div class="line">		<span class="keyword">for</span>(x = L; x &gt; <span class="number">0</span> &amp;&amp; !as[x]; x -= d);</div><div class="line">		<span class="keyword">for</span>(y = L; y &gt; <span class="number">0</span> &amp;&amp; !bs[y]; y -= d);</div><div class="line">		<span class="keyword">if</span>(x &amp;&amp; y)&#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; x + y &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Same-Occurence"><a href="#Same-Occurence" class="headerlink" title="Same Occurence"></a>Same Occurence</h3><p>考虑对一组询问 $(x, y)$,我们设 $p_i, q_i$， 分别表示前缀 $x、y$ 出现次数</p>
<p>设 $d_i = p_i - q_i$， 若有 $x$ 个相同的 $d_i$, 对答案的贡献是 $\frac{d_i(d_i - 1)}{2}$</p>
<p>再考虑，对于同样的一组 $(x, y)$， 只会有至多$p_n + q_n$ 个不同的 $d$ 值, 那么我们存下所有值对应的下标，枚举$(x, y)$， 就可以在 $O(n^2)$ 的时间内求出所有询问的答案，再依次回答即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">8010</span>, MaxM = <span class="number">501234</span>;</div><div class="line"><span class="keyword">int</span> n, b[MaxN], a[MaxN], q; LL f[MaxN][MaxN];</div><div class="line"><span class="keyword">int</span> px[MaxN], py[MaxN], c[MaxN], sc[MaxN &lt;&lt; <span class="number">1</span>];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; t[MaxN]; </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, x, y, xn;</div><div class="line">	n = inp(); q = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a + i), b[i] = a[i]; <span class="comment">//a[i] = b[i] = inp();</span></div><div class="line">	sort(b + <span class="number">1</span>, b + n + <span class="number">1</span>); xn = unique(b + <span class="number">1</span>, b + n + <span class="number">1</span>) - b - <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) a[i] = lower_bound(b + <span class="number">1</span>, b + xn + <span class="number">1</span>, a[i]) - b;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) t[a[i]].push_back(i);</div><div class="line">	<span class="keyword">for</span>(x = <span class="number">1</span>; x &lt;= xn + <span class="number">1</span>; x++) &#123;</div><div class="line">		<span class="keyword">for</span>(y = x + (x != xn + <span class="number">1</span>); y &lt;= xn + <span class="number">1</span>; y++)&#123;</div><div class="line">			<span class="keyword">int</span> cn = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(i = j = <span class="number">0</span>; i &lt; t[x].size() || j &lt; t[y].size(); )</div><div class="line">				<span class="keyword">if</span>(i &lt; t[x].size() &amp;&amp; j &lt; t[y].size()) &#123;</div><div class="line">					<span class="keyword">if</span>(t[x][i] &lt; t[y][j])  c[++cn] = t[x][i++];</div><div class="line">					<span class="keyword">else</span> c[++cn] = t[y][j++];</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					<span class="keyword">if</span>(i &lt; t[x].size()) c[++cn] = t[x][i++];</div><div class="line">					<span class="keyword">else</span> c[++cn] = t[y][j++];</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= cn; i++) </div><div class="line">				px[i] = px[i - <span class="number">1</span>] + (a[c[i]] == x), </div><div class="line">				py[i] = py[i - <span class="number">1</span>] + (a[c[i]] == y);</div><div class="line">			c[cn + <span class="number">1</span>] = n + <span class="number">1</span>;</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= cn; i++) </div><div class="line">				sc[py[i] - px[i] + MaxN] += c[i + <span class="number">1</span>] - c[i];</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= cn; i++)&#123;</div><div class="line">				<span class="keyword">int</span> p = sc[py[i] - px[i] + MaxN];</div><div class="line">				f[x][y] += (LL) p * (p - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</div><div class="line">				sc[py[i] - px[i] + MaxN] = <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">			f[y][x] = f[x][y];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= q; i++)&#123;</div><div class="line">		<span class="keyword">int</span> x0, y0;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x0, &amp;y0);</div><div class="line">		<span class="comment">//x = inp(); y = inp();</span></div><div class="line">		x = lower_bound(b + <span class="number">1</span>, b + xn + <span class="number">1</span>, x0) - b;</div><div class="line">		y = lower_bound(b + <span class="number">1</span>, b + xn + <span class="number">1</span>, y0) - b;</div><div class="line">		<span class="keyword">if</span>(b[x] != x0) x = xn + <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(b[y] != y0) y = xn + <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(x == y) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (LL) n * (n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			assert(f[x][y] &gt; <span class="number">0</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, f[x][y]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Recurrent-on-a-Tree"><a href="#Recurrent-on-a-Tree" class="headerlink" title="Recurrent on a Tree"></a>Recurrent on a Tree</h3><p>不错的题</p>
<p>对于点对 $(x,y)$ , 贡献是 $fib[dep_x + dep_y - dep_{lca(x,y)} - dep_{fa_{lca(x,y)}}]$ , $dep_x$ 表示根到 $x$ 路径上的点权和</p>
<p>改成矩阵，设 $A$ 是斐波那契数列的转移矩阵, 则贡献为 $A^{dep_x}A^{dep_y}A^{-dep_{lca(x,y)}}A^{-dep_{fa_{lca(x,y)}}}$</p>
<p>设$a_x = A^{dep_x}$</p>
<p>考虑枚举 $lca = x$, 这个lca对答案的贡献是和子树内两个不在同个孩子的子树内的点的 $a_i$ 乘积的和， 再乘上$\frac{1}{a_xa_{fa_{x}}}$</p>
<p>那么设 $f_u = \sum_{i \in u’s~subtree} a_i$, $g_u = \sum_{i, j~not~in~same ~sub~tree}a_ia_j$</p>
<script type="math/tex; mode=display">g_u = 2 a_u \sum_{i\in son_u} f_i + \sum_{i \in son_u}(\sum_{j\neq i} f_j)f_i</script><p>$g_u$对答案的贡献是 $\frac{g_u}{a_xa_{fa_{x}}}$，做一遍dfs即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">201234</span>, MaxM = <span class="number">401234</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1000000007</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> to, nxt;</div><div class="line">&#125;e[MaxM]; <span class="keyword">int</span> cnt, lst[MaxN];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	e[++cnt] = (edge)&#123;b, lst[a]&#125;; lst[a] = cnt;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">lnk</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	ins(a, b); </div><div class="line">	ins(b, a);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mat</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">2</span>];</div><div class="line">	<span class="keyword">int</span> * <span class="keyword">operator</span>[] (<span class="keyword">int</span> x)&#123; <span class="keyword">return</span> a[x]; &#125; </div><div class="line">&#125;A, I, O;</div><div class="line"></div><div class="line"><span class="function">mat <span class="title">mul</span><span class="params">(mat a, mat b)</span></span>&#123;</div><div class="line">	mat c;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)&#123;</div><div class="line">			c[i][j] = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span>; k++)</div><div class="line">				c[i][j] = (c[i][j] + (LL) a[i][k] * b[k][j]) % P;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">return</span> c;	</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">add</span><span class="params">(mat a, mat b)</span></span>&#123;</div><div class="line">	mat c;</div><div class="line">	c[<span class="number">0</span>][<span class="number">0</span>] = (a[<span class="number">0</span>][<span class="number">0</span>] + b[<span class="number">0</span>][<span class="number">0</span>]) % P;</div><div class="line">	c[<span class="number">0</span>][<span class="number">1</span>] = (a[<span class="number">0</span>][<span class="number">1</span>] + b[<span class="number">0</span>][<span class="number">1</span>]) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">0</span>] = (a[<span class="number">1</span>][<span class="number">0</span>] + b[<span class="number">1</span>][<span class="number">0</span>]) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">1</span>] = (a[<span class="number">1</span>][<span class="number">1</span>] + b[<span class="number">1</span>][<span class="number">1</span>]) % P;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">sub</span><span class="params">(mat a, mat b)</span></span>&#123;</div><div class="line">	mat c;</div><div class="line">	c[<span class="number">0</span>][<span class="number">0</span>] = (a[<span class="number">0</span>][<span class="number">0</span>] - b[<span class="number">0</span>][<span class="number">0</span>] + P) % P;</div><div class="line">	c[<span class="number">0</span>][<span class="number">1</span>] = (a[<span class="number">0</span>][<span class="number">1</span>] - b[<span class="number">0</span>][<span class="number">1</span>] + P) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">0</span>] = (a[<span class="number">1</span>][<span class="number">0</span>] - b[<span class="number">1</span>][<span class="number">0</span>] + P) % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">1</span>] = (a[<span class="number">1</span>][<span class="number">1</span>] - b[<span class="number">1</span>][<span class="number">1</span>] + P) % P;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">exp</span><span class="params">(mat a, LL n)</span></span>&#123;</div><div class="line">	mat res = I;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>, a = mul(a, a))</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) res = mul(res, a);</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">exp</span><span class="params">(<span class="keyword">int</span> a, LL n)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(; n; n &gt;&gt;= <span class="number">1</span>, a = (LL)a * a % P)</div><div class="line">		<span class="keyword">if</span>(n &amp; <span class="number">1</span>) res = (LL) res * a % P;</div><div class="line">	<span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"><span class="function">mat <span class="title">inv</span><span class="params">(mat x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> a = x[<span class="number">0</span>][<span class="number">0</span>], b = x[<span class="number">0</span>][<span class="number">1</span>], c = x[<span class="number">1</span>][<span class="number">0</span>], d = x[<span class="number">1</span>][<span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> iv = (LL) a * d % P - (LL) b * c % P;</div><div class="line">	iv = <span class="built_in">exp</span>((iv + P) % P, P - <span class="number">2</span>);</div><div class="line">	mat c;</div><div class="line">	c[<span class="number">0</span>][<span class="number">0</span>] = (LL) d * iv % P;</div><div class="line">	c[<span class="number">0</span>][<span class="number">1</span>] = (LL) (P - b) * iv % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">0</span>] = (LL) (P - c) * iv % P;</div><div class="line">	c[<span class="number">1</span>][<span class="number">1</span>] = (LL) a * iv % P;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, fib[MaxN], c[MaxN]; LL dep[MaxN];</div><div class="line">mat a[MaxN], f[MaxN], g[MaxN], ans; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs0</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x]; i; i = e[i].nxt)</div><div class="line">		<span class="keyword">if</span>(e[i].to != fa)&#123;</div><div class="line">			dep[e[i].to] = dep[x] + c[e[i].to];</div><div class="line">			dfs0(e[i].to, x);</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	g[x] = a[x];</div><div class="line">	mat G = C = O;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x]; i; i = e[i].nxt) </div><div class="line">		<span class="keyword">if</span>(e[i].to != fa)&#123;</div><div class="line">			dfs1(e[i].to, x);			</div><div class="line">			g[x] = add(g[x], g[e[i].to]);</div><div class="line">			G = add(G, g[e[i].to]);</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = lst[x]; i; i = e[i].nxt)</div><div class="line">		<span class="keyword">if</span>(e[i].to != fa) C = add(C, mul(g[e[i].to], sub(G, g[e[i].to])));		</div><div class="line">	C = add(C, mul(g[x], a[x]));</div><div class="line">	C = add(C, mul(g[x], a[x]));</div><div class="line">	mat coff = inv(a[x]);</div><div class="line">	<span class="keyword">if</span>(fa) coff = mul(coff, inv(a[fa]));</div><div class="line">	ans = add(ans , mul(C, coff));</div><div class="line">&#125;	</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, u, v;</div><div class="line">	n = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++) 	u = inp(), v = inp(), lnk(u, v);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) c[i] = inp();</div><div class="line">	</div><div class="line">	A[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>; A[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>; </div><div class="line">	A[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>; A[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">	</div><div class="line">	I[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>; I[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>; </div><div class="line">	I[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>; I[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	dep[<span class="number">1</span>] = c[<span class="number">1</span>];</div><div class="line">	dfs0(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		a[i] = <span class="built_in">exp</span>(A, dep[i]);</div><div class="line">	</div><div class="line">	dfs1(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) ans = sub(ans, <span class="built_in">exp</span>(A, c[i]));</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>, mul(ans, A)[<span class="number">0</span>][<span class="number">1</span>]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Magic-Cards"><a href="#Magic-Cards" class="headerlink" title="Magic Cards"></a>Magic Cards</h3><p>难题.jpg</p>
<p>考虑到如果有两个数在每张卡片上都在同一侧，那么他们一定同时选或不选</p>
<p>对于一个长度为 $L$ 的区间询问， 记录下 $m$ 个数每次所在侧的 $0/1$ 串</p>
<p>枚举每个 $0/1$串， 把对应的数从 $\sum_{i=1}^m i^2$ 中减去，取最大值，单次复杂度是 $O(Lm)$</p>
<p>观察到这个过程会发现，如果 $2^L &gt; m$, 答案一定是 $\sum_{i=1}^m i^2$</p>
<p>那么我们只要求出所有长度 $\leq \log_2m$的区间的答案即可</p>
<p>最后复杂度就是 $O(nLm + Q)$, 即 $O(nm\log_2m + Q)$</p>
<p>写的比前两题还短</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> n, m, q; LL f[MaxN][MaxL], Lans;</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; x[MaxN]; LL chk[MaxN];</div><div class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k = r - l + <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; k); i++) chk[i] = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++)&#123;</div><div class="line">		<span class="keyword">int</span> s = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j = l; j &lt;= r; j++)</div><div class="line">			s = s &lt;&lt; <span class="number">1</span> | x[j][i];</div><div class="line">		chk[s] += (LL) i * i;	</div><div class="line">	&#125;</div><div class="line">	LL ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; k); i++) </div><div class="line">		cmax(ans, Lans - chk[i]);</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i, j, k;</div><div class="line">	n = inp(); m = inp(); q = inp();</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(x[i].resize(m + <span class="number">1</span>),j = inp(); j; j --)</div><div class="line">			x[i][inp()] = <span class="number">1</span>;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> L = <span class="built_in">floor</span>(<span class="built_in">log</span>(m)/<span class="built_in">log</span>(<span class="number">2</span>));</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= m; i++) Lans += (LL) i * i; </div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i&lt;= n; i++)</div><div class="line">		<span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= L &amp;&amp; i + j - <span class="number">1</span> &lt;= n; j++)</div><div class="line">			f[i][j] = query(i, i + j - <span class="number">1</span>);</div><div class="line">		</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= q; i++)&#123;</div><div class="line">		<span class="keyword">int</span> l = inp(), r = inp();</div><div class="line">		<span class="keyword">if</span>(r - l + <span class="number">1</span> &gt; L) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, Lans);</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, f[l][r - l + <span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Path-Statistics"><a href="#Path-Statistics" class="headerlink" title="Path Statistics"></a>Path Statistics</h3><p>树上莫队裸题啦 </p>
<p>用了个<code>pb_ds::tree</code>和暴力同分了怎么办啊~</p>
<p>考虑树状数组，数 $i$ 出现 $j$ 次按照 $(j,i)$ 为双关键字排序后标号，总的情况数是 $O(n)$的，这样做还是 $O(n^{1.5}\log n)$ 的，足以通过本题</p>
<p>但是采用修改 $O(1)$, 查询 $O(n^{0.5})$ 的权值分块算法，也按这个标号分块，复杂度可以做到$O(n^{1.5})$, 但是我没写(BZOJ3920)</p>
<p>代码贴了zzq的树上莫队，风格太丑这里不放了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这周的Week of Code可能是最难的了。。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hackerrank" scheme="http://yoursite.com/tags/Hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>写作测试</title>
    <link href="http://yoursite.com/2017/07/23/%E5%86%99%E4%BD%9C%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2017/07/23/写作测试/</id>
    <published>2017-07-23T09:31:40.000Z</published>
    <updated>2017-07-23T11:09:47.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>居然是markdown</p>
<script type="math/tex; mode=display">\begin{aligned}
f(n) &= \sum_{d|n} g(d) \\
g(n) &= \sum_{d|n} \mu(d) f(\frac{n}{d})
\end{aligned}</script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="测试，杂文" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95%EF%BC%8C%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/07/23/hello-world/"/>
    <id>http://yoursite.com/2017/07/23/hello-world/</id>
    <published>2017-07-23T08:42:22.870Z</published>
    <updated>2017-07-23T08:42:22.870Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
